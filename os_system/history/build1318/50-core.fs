{"backend":{"files":{"apps":{"associations":{"txt":"76883d2a64ac9d967cf7216bac760a264c6ea60988ca38e9f873e05596fecf1514967c8b1941da55002f69b82d01b0c1d5c02a37bed4223504ceea4d133e3fa7"},"authui.js":"43adbb0f4311acb9c3c076dea61d9686ba452afb4efe92ca1cd92904c1129c545fae42968d1af0338c17f362276f6271ad1151645037ce43e469b844f14e2c7b","consentui.js":"6a389fedf28320e63ac5d97df8692681c393312327443e5991c15c8db5168841cd91eb3b27e178fc368fdf58b6f4b7f461de2d6c6bca63ab64170e07972be360","explorer.js":"85e38afddb2a61fea60a83aed8755da69991b68d7377437bf0a6115ba590f37ac1b285b67294757c5580289ca8a217720b9e8ac45d3a1bcfd0fab25a85f3615a","filePicker.js":"af1a159ecaad73c468ee1a01572cbc110fed5c3ed3e560b449810a4e382ea7711eb97806d5621fb5c5f661828db4b20ec817fe5b132d1378c27424b3067e1aed","links":{"explorer.lnk":"de6727bca5cefd27b15991ebd9cc757234aa5f083a180efd98a3a5085e555c880cf307dfb8c32aabf10b6d9d943a9181195b3dc9e00a57bd5a1b4f8e604b0916","textEditor.lnk":"1a8167e15d088258255aa71715fd8c9ac88332e2b721ce9151671371e2d2cc2e0f880b0c63ed0a1a43d4041b3833046bd387345fdfd8fbd956658e3a14273f16"},"startMenu.js":"383febb84a87fbbd791f962458278c1d0b2bd007d4acaa17985e2b64038ba80ec75fcd29b30887542e2688492a1a40605753858873c1f0ef624c7f59bf3ee55e","textEditor.js":"ffe2e4cbb3e773ef53494ef16fb95da0d19333cf03e1fd4089b65c484993f32f9238c2e7fffa7aecdee167633ad3630754bc610284a094e95e6f60a094dbb861"},"etc":{"tlds.json":"15d170e986b95d941cb63800f55b9dba28c28d53b0564ffbe8199a5e0821f3737c47dbf99a864e7784412252709712650fe67611632f6f6448f115a3f83c3ae9"}},"permissions":{"apps/associations/txt":{"world":"rx"},"apps/associations/":{"world":"rx"},"apps/authui.js":{"world":"rx"},"apps/consentui.js":{"world":"rx"},"apps/explorer.js":{"world":"rx"},"apps/filePicker.js":{"world":"rx"},"apps/links/explorer.lnk":{"world":"rx"},"apps/links/textEditor.lnk":{"world":"rx"},"apps/links/":{"world":"rx"},"apps/startMenu.js":{"world":"rx"},"apps/textEditor.js":{"world":"rx"},"apps/":{"world":"rx"},"etc/tlds.json":{"world":"rx"},"etc/":{"world":"rx"},"":{"world":"rx"}}},"files":{"76883d2a64ac9d967cf7216bac760a264c6ea60988ca38e9f873e05596fecf1514967c8b1941da55002f69b82d01b0c1d5c02a37bed4223504ceea4d133e3fa7":"{\"path\":\"system/apps/textEditor.js\",\"localeReferenceName\":\"TEXT_EDITOR\"}","43adbb0f4311acb9c3c076dea61d9686ba452afb4efe92ca1cd92904c1129c545fae42968d1af0338c17f362276f6271ad1151645037ce43e469b844f14e2c7b":"// =====BEGIN MANIFEST=====\n// signer: automaticSigner\n// allow: IPC_SEND_PIPE, GET_LOCALE, GET_THEME, ELEVATE_PRIVILEGES, CSP_OPERATIONS\n// signature: 8bf2999796bd6609ac7e262113c8cf97507ecc7a26c3eddceae886d2a59e7218ce0336a8918416f475e0a86f32aae4f90569e83397575d588f429c1a348f7b07\n// =====END MANIFEST=====\n\nlet ipc;\n(async function() {\n\t// @pcos-app-mode isolatable\n\texec_args = await availableAPIs.getPrivateData() || [];\n\tif (!(exec_args instanceof Array)) return availableAPIs.terminate();\n\tipc = exec_args[0];\n\tif (!ipc) return availableAPIs.terminate();\n\tlet user = exec_args[1];\n\tawait availableAPIs.windowTitleSet(await availableAPIs.lookupLocale(\"LOG_IN_INVITATION\"));\n\tlet checklist = [ \"IPC_SEND_PIPE\", \"GET_LOCALE\", \"GET_THEME\", \"ELEVATE_PRIVILEGES\", \"CSP_OPERATIONS\" ];\n\tlet privileges = await availableAPIs.getPrivileges();\n\tif (!checklist.every(p => privileges.includes(p))) {\n\t\tif (privileges.includes(\"IPC_SEND_PIPE\")) await availableAPIs.sendToPipe({ pipe: ipc, data: { success: false, cancelled: false } });\n\t\treturn availableAPIs.terminate();\n\t}\n\tdocument.body.style.fontFamily = \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\";\n\tif (await availableAPIs.isDarkThemed()) document.body.style.color = \"white\";\n\tlet describe = document.createElement(\"b\");\n\tlet form = document.createElement(\"form\");\n\tlet input = document.createElement(\"input\");\n\tlet submit = document.createElement(\"button\");\n\tdocument.body.appendChild(describe);\n\tdocument.body.appendChild(document.createElement(\"br\"));\n\tdocument.body.appendChild(form);\n\tform.appendChild(input);\n\tform.appendChild(submit);\n\tsubmit.innerText = await availableAPIs.lookupLocale(\"ENTER_BUTTON\");\n\tdescribe.innerText = await availableAPIs.lookupLocale(\"USERNAME_PROMPT\");\n\tinput.placeholder = await availableAPIs.lookupLocale(\"USERNAME\");\n\tasync function userSubmit(e) {\n\t\te.stopImmediatePropagation();\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\tlet userLogonSession;\n\t\tlet userLogonID;\n\t\tlet desired_username = input.value;\n\t\ttry {\n\t\t\tuserLogonID = await availableAPIs.automatedLogonCreate({ desiredUser: desired_username });\n\t\t\tuserLogonSession = await availableAPIs.automatedLogonGet(userLogonID);\n\t\t} catch {\n\t\t\tdescribe.innerText = await availableAPIs.lookupLocale(\"AUTH_FAILED\") + \" \" + await availableAPIs.lookupLocale(\"USERNAME_PROMPT\");\n\t\t\tinput.placeholder = await availableAPIs.lookupLocale(\"USERNAME\");\n\t\t\tinput.type = \"text\";\n\t\t\tinput.disabled = !!user;\n\t\t\tsubmit.disabled = false;\n\t\t\tinput.value = user || \"\";\n\t\t\tsubmit.addEventListener(\"click\", userSubmit);\n\t\t\treturn;\n\t\t}\n\t\tasync function updateProgress() {\n\t\t\tsubmit.removeEventListener(\"click\", userSubmit);\n\t\t\tinput.value = \"\";\n\t\t\tsubmit.innerText = await availableAPIs.lookupLocale(\"ENTER_BUTTON\");\n\t\t\tif (userLogonSession.success != \"intermediate\") await availableAPIs.automatedLogonDelete(userLogonID);\n\t\t\tif (userLogonSession.success == true) {\n\t\t\t\tawait availableAPIs.sendToPipe({ pipe: ipc, data: userLogonSession });\n\t\t\t\tawait availableAPIs.terminate();\n\t\t\t}\n\t\t\tif (userLogonSession.success == false) {\n\t\t\t\tdescribe.innerText = await availableAPIs.lookupLocale(\"AUTH_FAILED\") + \" \" + await availableAPIs.lookupLocale(\"USERNAME_PROMPT\");\n\t\t\t\tinput.placeholder = await availableAPIs.lookupLocale(\"USERNAME\");\n\t\t\t\tinput.type = \"text\";\n\t\t\t\tinput.disabled = !!user;\n\t\t\t\tsubmit.disabled = false;\n\t\t\t\tinput.value = user || \"\";\n\t\t\t\tsubmit.addEventListener(\"click\", userSubmit);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tdescribe.innerText = \"[\" + desired_username + \"] \" + userLogonSession.message;\n\t\t\tinput.placeholder = await availableAPIs.lookupLocale(\"RESPONSE_PLACEHOLDER\");\n\t\t\tinput.type = userLogonSession.type == \"password\" ? \"password\" : \"text\";\n\t\t\tinput.disabled = !userLogonSession.wantsUserInput;\n\t\t\tsubmit.disabled = !userLogonSession.wantsUserInput;\n\t\t\tif (userLogonSession.type == \"zkpp_password\") input.type = \"password\";\n\t\t\tif (userLogonSession.type == \"promise\") {\n\t\t\t\ttry {\n\t\t\t\t\tinput.disabled = true;\n\t\t\t\t\tsubmit.disabled = true;\n\t\t\t\t\tawait availableAPIs.automatedLogonInput({ session: userLogonID });\n\t\t\t\t\tuserLogonSession = await availableAPIs.automatedLogonGet(userLogonID);\n\t\t\t\t} catch {}\n\t\t\t\treturn await updateProgress();\n\t\t\t}\n\t\t\tif (userLogonSession.type == \"informative\") {\n\t\t\t\tinput.disabled = true;\n\t\t\t\tsubmit.disabled = false;\n\t\t\t\tsubmit.innerText = \"OK\";\n\t\t\t\tinput.placeholder = \"--->\";\n\t\t\t}\n\t\t\tsubmit.addEventListener(\"click\", async function updater(e) {\n\t\t\t\te.stopImmediatePropagation();\n\t\t\t\tsubmit.removeEventListener(\"click\", updater);\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t\ttry {\n\t\t\t\t\tinput.disabled = true;\n\t\t\t\t\tsubmit.disabled = true;\n\t\t\t\t\tif (userLogonSession.type == \"zkpp_password\") {\n\t\t\t\t\t\tlet passwordAsKey = await availableAPIs.cspOperation({\n\t\t\t\t\t\t\tcspProvider: \"basic\",\n\t\t\t\t\t\t\toperation: \"importKey\",\n\t\t\t\t\t\t\tcspArgument: {\n\t\t\t\t\t\t\t\tformat: \"raw\",\n\t\t\t\t\t\t\t\tkeyData: new TextEncoder().encode(input.value),\n\t\t\t\t\t\t\t\talgorithm: \"PBKDF2\",\n\t\t\t\t\t\t\t\textractable: false,\n\t\t\t\t\t\t\t\tkeyUsages: [\"deriveBits\"]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tlet rngSeed = await availableAPIs.cspOperation({\n\t\t\t\t\t\t\tcspProvider: \"basic\",\n\t\t\t\t\t\t\toperation: \"deriveBits\",\n\t\t\t\t\t\t\tcspArgument: {\n\t\t\t\t\t\t\t\talgorithm: {\n\t\t\t\t\t\t\t\t\tname: \"PBKDF2\",\n\t\t\t\t\t\t\t\t\tsalt: new Uint8Array(32),\n\t\t\t\t\t\t\t\t\titerations: 100000,\n\t\t\t\t\t\t\t\t\thash: \"SHA-256\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tbaseKey: passwordAsKey,\n\t\t\t\t\t\t\t\tlength: 256\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tawait availableAPIs.cspOperation({\n\t\t\t\t\t\t\tcspProvider: \"basic\",\n\t\t\t\t\t\t\toperation: \"unloadKey\",\n\t\t\t\t\t\t\tcspArgument: passwordAsKey\n\t\t\t\t\t\t});\n\t\t\t\t\t\tlet u8aToHex = (u8a) => Array.from(u8a).map(a => a.toString(16).padStart(2, \"0\")).join(\"\");\n\t\t\t\t\t\tlet hexToU8A = (hex) => Uint8Array.from(hex.match(/.{1,2}/g).map(a => parseInt(a, 16)));\n\t\t\t\t\t\tawait availableAPIs.automatedLogonInput({ session: userLogonID, input: u8aToHex(await availableAPIs.cspOperation({\n\t\t\t\t\t\t\tcspProvider: \"tweetnacl\",\n\t\t\t\t\t\t\toperation: \"sign\",\n\t\t\t\t\t\t\tcspArgument: {\n\t\t\t\t\t\t\t\tsecretKey: (await availableAPIs.cspOperation({\n\t\t\t\t\t\t\t\t\tcspProvider: \"tweetnacl\",\n\t\t\t\t\t\t\t\t\toperation: \"deriveKey\",\n\t\t\t\t\t\t\t\t\tcspArgument: {\n\t\t\t\t\t\t\t\t\t\ttype: \"sign\",\n\t\t\t\t\t\t\t\t\t\tseed: new Uint8Array(rngSeed)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})).secretKey,\n\t\t\t\t\t\t\t\tmessage: hexToU8A(userLogonSession.challenge)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}))});\n\t\t\t\t\t} else await availableAPIs.automatedLogonInput({ session: userLogonID, input: input.value });\n\t\t\t\t\tuserLogonSession = await availableAPIs.automatedLogonGet(userLogonID);\n\t\t\t\t} catch {}\n\t\t\t\treturn await updateProgress();\n\t\t\t});\n\t\t}\n\t\tawait updateProgress();\n\t\treturn false;\n\t}\n\tsubmit.addEventListener(\"click\", userSubmit);\n\tif (user) {\n\t\tinput.disabled = true;\n\t\tinput.value = user;\n\t\tuserSubmit({ preventDefault: () => {}, stopImmediatePropagation: () => {}, stopPropagation: () => {} });\n\t}\n})();\naddEventListener(\"signal\", async function(e) {\n\tif (e.detail == 15) {\n\t\ttry {\n\t\t\tawait availableAPIs.sendToPipe({ pipe: ipc, data: { success: false, cancelled: true } });\n\t\t} catch {}\n\t\tawait window.availableAPIs.terminate();\n\t}\n}); null;","6a389fedf28320e63ac5d97df8692681c393312327443e5991c15c8db5168841cd91eb3b27e178fc368fdf58b6f4b7f461de2d6c6bca63ab64170e07972be360":"// =====BEGIN MANIFEST=====\n// signer: automaticSigner\n// allow: IPC_SEND_PIPE, GET_LOCALE, GET_THEME, ELEVATE_PRIVILEGES, FS_READ, FS_LIST_PARTITIONS, CSP_OPERATIONS\n// signature: 080e4f8e53c65462011f576e7c485f0cf8320f665887a2820110e9322f6744221b2287a61727ae3d66cc89a74d66d79dbcb3ec6ae13941f0baacc7f6978a7a4e\n// =====END MANIFEST=====\n\nlet ipc;\n(async function() {\n\t// @pcos-app-mode isolatable\n\texec_args = await availableAPIs.getPrivateData() || [];\n\tif (!(exec_args instanceof Array)) return availableAPIs.terminate();\n\tipc = exec_args[0];\n\tif (!ipc) return availableAPIs.terminate();\n\tlet user = exec_args[1];\n\ttry {\n\t\tnew Audio(await availableAPIs.fs_read({ path: (await availableAPIs.getSystemMount()) + \"/etc/sounds/ask.aud\" })).play();\n\t} catch (e) {\n\t\tconsole.error(e);\n\t}\n\tawait availableAPIs.windowTitleSet(await availableAPIs.lookupLocale(\"ACCESS_REQUEST_TITLE\"));\n\tlet checklist = [ \"IPC_SEND_PIPE\", \"GET_LOCALE\", \"GET_THEME\", \"ELEVATE_PRIVILEGES\", \"CSP_OPERATIONS\" ];\n\tlet privileges = await availableAPIs.getPrivileges();\n\tif (!checklist.every(p => privileges.includes(p))) {\n\t\tif (privileges.includes(\"IPC_SEND_PIPE\")) await availableAPIs.sendToPipe({ pipe: ipc, data: { success: false, cancelled: false } });\n\t\treturn availableAPIs.terminate();\n\t}\n\tdocument.body.style.fontFamily = \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\";\n\tif (await availableAPIs.isDarkThemed()) document.body.style.color = \"white\";\n\tlet describe = document.createElement(\"span\");\n\tlet form = document.createElement(\"form\");\n\tlet input = document.createElement(\"input\");\n\tlet decline = document.createElement(\"button\");\n\tlet submit = document.createElement(\"button\");\n\tlet metadata = JSON.parse(exec_args[2]);\n\tdecline.type = \"button\";\n\tsubmit.type = \"submit\";\n\tdocument.body.appendChild(describe);\n\tdocument.body.appendChild(document.createElement(\"hr\"));\n\tdocument.body.appendChild(form);\n\tform.appendChild(input);\n\tform.appendChild(document.createElement(\"br\"));\n\tform.appendChild(decline);\n\tform.appendChild(submit);\n\tdescribe.innerText = (await availableAPIs.lookupLocale(\"DESCRIBE_TEMPLATE\")).replace(\"%s\", metadata.path.split(\"/\").pop()).replace(\"%s\", metadata.submittedName || metadata.path.split(\"/\").pop()).replace(\"%s\", metadata.submittedIntent);\n\tinput.placeholder = await availableAPIs.lookupLocale(\"USERNAME\");\n\tdecline.innerText = await availableAPIs.lookupLocale(\"DECLINE\");\n\tsubmit.innerText = await availableAPIs.lookupLocale(\"NEXT\");\n\n\tasync function extraData(e) {\n\t\te.stopImmediatePropagation();\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\tdescribe.innerText = (await availableAPIs.lookupLocale(\"EXTRA_DESCRIBE_TEMPLATE\")).replace(\"%s\", metadata.path).replace(\"%s\", metadata.submittedName || metadata.path.split(\"/\").pop()).replace(\"%s\", JSON.stringify(metadata.args)).replace(\"%s\", metadata.submittedIntent);\n\t\tdescribe.removeEventListener(\"contextmenu\", extraData);\n\t}\n\n\tdescribe.addEventListener(\"contextmenu\", extraData);\n\n\tasync function userSubmit(e) {\n\t\tdescribe.removeEventListener(\"contextmenu\", extraData);\n\t\te.stopImmediatePropagation();\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\tlet userLogonSession;\n\t\tlet userLogonID;\n\t\tlet desired_username = input.value;\n\t\ttry {\n\t\t\tuserLogonID = await availableAPIs.automatedLogonCreate({ desiredUser: desired_username });\n\t\t\tuserLogonSession = await availableAPIs.automatedLogonGet(userLogonID);\n\t\t} catch {\n\t\t\tdescribe.innerText = await availableAPIs.lookupLocale(\"AUTH_FAILED\") + \" \" + await availableAPIs.lookupLocale(\"USERNAME_PROMPT\");\n\t\t\tinput.placeholder = await availableAPIs.lookupLocale(\"USERNAME\");\n\t\t\tinput.type = \"text\";\n\t\t\tinput.disabled = !!user;\n\t\t\tsubmit.disabled = false;\n\t\t\tinput.value = user || \"\";\n\t\t\tsubmit.addEventListener(\"click\", userSubmit);\n\t\t\treturn;\n\t\t}\n\t\tasync function updateProgress() {\n\t\t\tsubmit.removeEventListener(\"click\", userSubmit);\n\t\t\tinput.value = \"\";\n\t\t\tif (userLogonSession.success != \"intermediate\") await availableAPIs.automatedLogonDelete(userLogonID);\n\t\t\tif (userLogonSession.success == true) {\n\t\t\t\tawait availableAPIs.sendToPipe({ pipe: ipc, data: userLogonSession });\n\t\t\t\tawait availableAPIs.terminate();\n\t\t\t}\n\t\t\tif (userLogonSession.success == false) {\n\t\t\t\tdescribe.innerText = await availableAPIs.lookupLocale(\"AUTH_FAILED\") + \" \" + await availableAPIs.lookupLocale(\"USERNAME_PROMPT\");\n\t\t\t\tinput.placeholder = await availableAPIs.lookupLocale(\"USERNAME\");\n\t\t\t\tinput.type = \"text\";\n\t\t\t\tinput.disabled = !!user;\n\t\t\t\tsubmit.disabled = false;\n\t\t\t\tinput.value = user || \"\";\n\t\t\t\tsubmit.addEventListener(\"click\", userSubmit);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tdescribe.innerText = \"[\" + desired_username + \"] \" + userLogonSession.message;\n\t\t\tinput.placeholder = await availableAPIs.lookupLocale(\"RESPONSE_PLACEHOLDER\");\n\t\t\tinput.type = userLogonSession.type == \"password\" ? \"password\" : \"text\";\n\t\t\tinput.disabled = !userLogonSession.wantsUserInput;\n\t\t\tsubmit.disabled = !userLogonSession.wantsUserInput;\n\t\t\tif (userLogonSession.type == \"zkpp_password\") input.type = \"password\";\n\t\t\tif (userLogonSession.type == \"promise\") {\n\t\t\t\ttry {\n\t\t\t\t\tinput.disabled = true;\n\t\t\t\t\tsubmit.disabled = true;\n\t\t\t\t\tawait availableAPIs.automatedLogonInput({ session: userLogonID });\n\t\t\t\t\tuserLogonSession = await availableAPIs.automatedLogonGet(userLogonID);\n\t\t\t\t} catch {}\n\t\t\t\treturn await updateProgress();\n\t\t\t}\n\t\t\tif (userLogonSession.type == \"informative\") {\n\t\t\t\tinput.disabled = true;\n\t\t\t\tsubmit.disabled = false;\n\t\t\t\tinput.placeholder = \"\";\n\t\t\t}\n\t\t\tsubmit.addEventListener(\"click\", async function updater(e) {\n\t\t\t\te.stopImmediatePropagation();\n\t\t\t\tsubmit.removeEventListener(\"click\", updater);\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t\ttry {\n\t\t\t\t\tinput.disabled = true;\n\t\t\t\t\tsubmit.disabled = true;\n\t\t\t\t\tif (userLogonSession.type == \"zkpp_password\") {\n\t\t\t\t\t\tlet passwordAsKey = await availableAPIs.cspOperation({\n\t\t\t\t\t\t\tcspProvider: \"basic\",\n\t\t\t\t\t\t\toperation: \"importKey\",\n\t\t\t\t\t\t\tcspArgument: {\n\t\t\t\t\t\t\t\tformat: \"raw\",\n\t\t\t\t\t\t\t\tkeyData: new TextEncoder().encode(input.value),\n\t\t\t\t\t\t\t\talgorithm: \"PBKDF2\",\n\t\t\t\t\t\t\t\textractable: false,\n\t\t\t\t\t\t\t\tkeyUsages: [\"deriveBits\"]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tlet rngSeed = await availableAPIs.cspOperation({\n\t\t\t\t\t\t\tcspProvider: \"basic\",\n\t\t\t\t\t\t\toperation: \"deriveBits\",\n\t\t\t\t\t\t\tcspArgument: {\n\t\t\t\t\t\t\t\talgorithm: {\n\t\t\t\t\t\t\t\t\tname: \"PBKDF2\",\n\t\t\t\t\t\t\t\t\tsalt: new Uint8Array(32),\n\t\t\t\t\t\t\t\t\titerations: 100000,\n\t\t\t\t\t\t\t\t\thash: \"SHA-256\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tbaseKey: passwordAsKey,\n\t\t\t\t\t\t\t\tlength: 256\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tawait availableAPIs.cspOperation({\n\t\t\t\t\t\t\tcspProvider: \"basic\",\n\t\t\t\t\t\t\toperation: \"unloadKey\",\n\t\t\t\t\t\t\tcspArgument: passwordAsKey\n\t\t\t\t\t\t});\n\t\t\t\t\t\tlet u8aToHex = (u8a) => Array.from(u8a).map(a => a.toString(16).padStart(2, \"0\")).join(\"\");\n\t\t\t\t\t\tlet hexToU8A = (hex) => Uint8Array.from(hex.match(/.{1,2}/g).map(a => parseInt(a, 16)));\n\t\t\t\t\t\tawait availableAPIs.automatedLogonInput({ session: userLogonID, input: u8aToHex(await availableAPIs.cspOperation({\n\t\t\t\t\t\t\tcspProvider: \"tweetnacl\",\n\t\t\t\t\t\t\toperation: \"sign\",\n\t\t\t\t\t\t\tcspArgument: {\n\t\t\t\t\t\t\t\tsecretKey: (await availableAPIs.cspOperation({\n\t\t\t\t\t\t\t\t\tcspProvider: \"tweetnacl\",\n\t\t\t\t\t\t\t\t\toperation: \"deriveKey\",\n\t\t\t\t\t\t\t\t\tcspArgument: {\n\t\t\t\t\t\t\t\t\t\ttype: \"sign\",\n\t\t\t\t\t\t\t\t\t\tseed: new Uint8Array(rngSeed)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})).secretKey,\n\t\t\t\t\t\t\t\tmessage: hexToU8A(userLogonSession.challenge)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}))});\n\t\t\t\t\t} else await availableAPIs.automatedLogonInput({ session: userLogonID, input: input.value });\n\t\t\t\t\tuserLogonSession = await availableAPIs.automatedLogonGet(userLogonID);\n\t\t\t\t} catch {}\n\t\t\t\treturn await updateProgress();\n\t\t\t});\n\t\t}\n\t\tawait updateProgress();\n\t\treturn false;\n\t}\n\tsubmit.addEventListener(\"click\", userSubmit);\n\tdecline.addEventListener(\"click\", async function() {\n\t\tawait availableAPIs.sendToPipe({ pipe: ipc, data: { success: false, cancelled: true } });\n\t\tawait availableAPIs.terminate();\n\t});\n\tif (user) {\n\t\tinput.disabled = true;\n\t\tinput.value = user;\n\t}\n})();\naddEventListener(\"signal\", async function(e) {\n\tif (e.detail == 15) {\n\t\ttry {\n\t\t\tawait availableAPIs.sendToPipe({ pipe: ipc, data: { success: false, cancelled: true } });\n\t\t} catch {}\n\t\tawait window.availableAPIs.terminate();\n\t}\n}); null;","85e38afddb2a61fea60a83aed8755da69991b68d7377437bf0a6115ba590f37ac1b285b67294757c5580289ca8a217720b9e8ac45d3a1bcfd0fab25a85f3615a":"// =====BEGIN MANIFEST=====\n// link: lrn:FILE_EXPLORER\n// signer: automaticSigner\n// allow: FS_READ, FS_LIST_PARTITIONS, ELEVATE_PRIVILEGES, START_TASK, GET_LOCALE, GET_THEME, MANAGE_TOKENS, FS_REMOVE, FS_BYPASS_PERMISSIONS, FS_UNMOUNT, FS_CHANGE_PERMISSION, FS_MOUNT, GET_FILESYSTEMS, FS_WRITE, LLDISK_LIST_PARTITIONS, GET_USER_INFO\n// signature: 3b3ae5d0ad918ac9d44e98f3ee5fa5bf58cbe51ddc84c63805aaee160606760314aac5c9b41557481e49830f55e406de870f71c223720b3bb06a810336f95715\n// =====END MANIFEST=====\nlet globalToken;\nlet cachedIcons = {};\n(async function() {\n\t// @pcos-app-mode isolatable\n\tawait availableAPIs.windowTitleSet(await availableAPIs.lookupLocale(\"FILE_EXPLORER\"));\n\tdocument.body.style.fontFamily = \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\";\n\tif (await availableAPIs.isDarkThemed()) document.body.style.color = \"white\";\n\tlet privileges = await availableAPIs.getPrivileges();\n\tlet checklist = [ \"FS_READ\", \"FS_LIST_PARTITIONS\" ];\n\tif (!checklist.every(p => privileges.includes(p))) {\n\t\tdocument.body.innerText = await availableAPIs.lookupLocale(\"GRANT_FEXP_PERM\");\n\t\tlet button = document.createElement(\"button\");\n\t\tbutton.innerText = await availableAPIs.lookupLocale(\"GRANT_PERM\");\n\t\tdocument.body.appendChild(button);\n\t\tif (!privileges.includes(\"ELEVATE_PRIVILEGES\")) {\n\t\t\tbutton.disabled = true;\n\t\t\tdocument.body.innerText = await availableAPIs.lookupLocale(\"GRANT_FEXP_PERM_ADM\");\n\t\t\treturn;\n\t\t}\n\t\tawait new Promise(function(resolve) {\n\t\t\tbutton.onclick = async function() {\n\t\t\t\tbutton.disabled = true;\n\t\t\t\tlet currentToken = await availableAPIs.getProcessToken();\n\t\t\t\tlet newToken = await availableAPIs.consentGetToken({\n\t\t\t\t\tintent: await availableAPIs.lookupLocale(\"FILE_EXPLORER_FULL_INTENT\"),\n\t\t\t\t\tname: await availableAPIs.lookupLocale(\"FILE_EXPLORER\")\n\t\t\t\t});\n\t\t\t\tbutton.disabled = false;\n\t\t\t\tif (!newToken) return;\n\t\t\t\tif (privileges.includes(\"MANAGE_TOKENS\")) globalToken = await availableAPIs.forkToken(newToken);\n\t\t\t\tawait availableAPIs.setProcessToken(newToken);\n\t\t\t\tawait availableAPIs.revokeToken(currentToken);\n\t\t\t\tprivileges = await availableAPIs.getPrivileges();\n\t\t\t\tif (checklist.every(p => privileges.includes(p))) resolve();\n\t\t\t\telse document.body.innerText = await availableAPIs.lookupLocale(\"GRANT_FEXP_PERM_USR\");\n\t\t\t}\n\t\t});\n\t}\n\tlet hideHiddenFiles = true;\n\ttry {\n\t\tlet homedir = (await availableAPIs.getUserInfo({ desiredUser: await availableAPIs.getUser() })).homeDirectory;\n\t\thideHiddenFiles = (await availableAPIs.fs_read({\n\t\t\tpath: homedir + \"/.hiddenFiles\",\n\t\t})) != \"show\";\n\t} catch {}\n\tdocument.body.innerText = \"\";\n\tlet mainComponent = document.createElement(\"div\");\n\tlet pathInputForm = document.createElement(\"form\");\n\tlet pathElement = document.createElement(\"input\");\n\tlet browseButton = document.createElement(\"button\");\n\tlet displayResult = document.createElement(\"div\");\n\tlet previousDirectory = \"\";\n\tlet clipboard = {\n\t\tpath: \"\",\n\t\tcut: false,\n\t\tselected: false\n\t};\n\tmainComponent.style.display = \"flex\";\n\tmainComponent.style.flexDirection = \"column\";\n\tmainComponent.style.width = \"100%\";\n\tmainComponent.style.height = \"100%\";\n\tmainComponent.style.position = \"absolute\";\n\tmainComponent.style.top = \"0\";\n\tmainComponent.style.left = \"0\";\n\tmainComponent.style.padding = \"8px\";\n\tmainComponent.style.boxSizing = \"border-box\";\n\tdisplayResult.style.flex = \"1\";\n\tbrowseButton.innerText = await availableAPIs.lookupLocale(\"BROWSE_FEXP\");\n\tpathInputForm.appendChild(pathElement);\n\tpathInputForm.appendChild(browseButton);\n\tmainComponent.appendChild(pathInputForm);\n\tmainComponent.appendChild(displayResult);\n\tdocument.body.appendChild(mainComponent);\n\tlet availableIcons = [];\n\ttry {\n\t\tavailableIcons = await availableAPIs.fs_ls({ path: await availableAPIs.getSystemMount() + \"/etc/icons\" });\n\t} catch {}\n\tdisplayResult.oncontextmenu = async function(e) {\n\t\te.stopImmediatePropagation();\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\tdisplayResult.innerText = \"\";\n\t\tlet showHiddenFilesToggle = document.createElement(\"button\");\n\t\tshowHiddenFilesToggle.innerText = await availableAPIs.lookupLocale(\"TOGGLE_HIDDEN_FILES\");\n\t\tshowHiddenFilesToggle.addEventListener(\"click\", async function() {\n\t\t\thideHiddenFiles = !hideHiddenFiles;\n\t\t\ttry {\n\t\t\t\tlet homedir = (await availableAPIs.getUserInfo({ desiredUser: await availableAPIs.getUser() })).homeDirectory;\n\t\t\t\tavailableAPIs.fs_write({\n\t\t\t\t\tpath: homedir + \"/.hiddenFiles\",\n\t\t\t\t\tdata: (hideHiddenFiles ? \"hide\" : \"show\")\n\t\t\t\t});\n\t\t\t} catch {}\n\t\t\tbrowse();\n\t\t});\n\t\tdisplayResult.appendChild(showHiddenFilesToggle);\n\t\tdisplayResult.appendChild(document.createElement(\"hr\"));\n\t\tif (previousDirectory == \"\") {\n\t\t\tlet mountForm = document.createElement(\"form\");\n\t\t\tlet mountpoint = document.createElement(\"input\");\n\t\t\tlet filesystemOptions = document.createElement(\"select\");\n\t\t\tlet autoGenMountOptions = document.createElement(\"select\");\n\t\t\tlet mountOptions = document.createElement(\"textarea\");\n\t\t\tlet mountButton = document.createElement(\"button\");\n\t\t\tmountpoint.placeholder = await availableAPIs.lookupLocale(\"MOUNTPOINT\");\n\t\t\tlet availableFilesystems = await availableAPIs.supportedFilesystems();\n\t\t\tfor (let filesystem of availableFilesystems) {\n\t\t\t\tlet option = document.createElement(\"option\");\n\t\t\t\toption.value = filesystem;\n\t\t\t\toption.innerText = filesystem;\n\t\t\t\tfilesystemOptions.appendChild(option);\n\t\t\t}\n\t\t\tlet availablePartitions = [];\n\t\t\ttry {\n\t\t\t\tavailablePartitions = await availableAPIs.lldaList();\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t\tlet defaultPartitionOption = document.createElement(\"option\");\n\t\t\tdefaultPartitionOption.value = \"\";\n\t\t\tdefaultPartitionOption.innerText = await availableAPIs.lookupLocale(\"GENERATE_PROMPT\");\n\t\t\tdefaultPartitionOption.selected = true;\n\t\t\tdefaultPartitionOption.disabled = true;\n\t\t\tdefaultPartitionOption.hidden = true;\n\t\t\tautoGenMountOptions.appendChild(defaultPartitionOption);\n\t\t\tfor (let partition of availablePartitions) {\n\t\t\t\tlet option = document.createElement(\"option\");\n\t\t\t\toption.value = partition;\n\t\t\t\toption.innerText = partition;\n\t\t\t\tautoGenMountOptions.appendChild(option);\n\t\t\t}\n\t\t\tautoGenMountOptions.onchange = function() {\n\t\t\t\tmountOptions.value = JSON.stringify({ partition: autoGenMountOptions.value });\n\t\t\t}\n\t\t\tmountOptions.value = \"{}\";\n\t\t\tmountButton.innerText = await availableAPIs.lookupLocale(\"MOUNT_BUTTON\");\n\t\t\tmountButton.onclick = async function() {\n\t\t\t\ttry {\n\t\t\t\t\tlet options = JSON.parse(mountOptions.value);\n\t\t\t\t\tawait availableAPIs.fs_mount({ mountpoint: mountpoint.value, filesystem: filesystemOptions.value, filesystemOptions: options });\n\t\t\t\t\tbrowse();\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t\tdisplayResult.innerText = (await availableAPIs.lookupLocale(\"FILE_STRUCT_BROWSE_FAIL\")).replace(\"%s\", e.name + \": \" + e.message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tmountForm.appendChild(mountpoint);\n\t\t\tmountForm.appendChild(document.createElement(\"br\"));\n\t\t\tmountForm.appendChild(filesystemOptions);\n\t\t\tmountForm.appendChild(document.createElement(\"hr\"));\n\t\t\tmountForm.appendChild(autoGenMountOptions);\n\t\t\tmountForm.appendChild(document.createElement(\"br\"));\n\t\t\tmountForm.appendChild(mountOptions);\n\t\t\tmountForm.appendChild(document.createElement(\"hr\"));\n\t\t\tmountForm.appendChild(mountButton);\n\t\t\tdisplayResult.appendChild(mountForm);\n\t\t} else {\n\t\t\tlet makeDirectoryForm = document.createElement(\"form\");\n\t\t\tlet makeDirectoryInput = document.createElement(\"input\");\n\t\t\tlet makeDirectoryButton = document.createElement(\"button\");\n\t\t\tmakeDirectoryInput.pattern = \"[!-.0-~]+\";\n\t\t\tmakeDirectoryInput.placeholder = await availableAPIs.lookupLocale(\"NEW_DIR_NAME\");\n\t\t\tmakeDirectoryForm.appendChild(makeDirectoryInput);\n\t\t\tmakeDirectoryForm.appendChild(makeDirectoryButton);\n\t\t\tdisplayResult.appendChild(makeDirectoryForm);\n\t\t\tmakeDirectoryButton.innerText = await availableAPIs.lookupLocale(\"MKDIR_BUTTON\");\n\t\t\tmakeDirectoryButton.onclick = async function() {\n\t\t\t\tlet dirName = makeDirectoryInput.value;\n\t\t\t\tif (dirName == \"\") return;\n\t\t\t\ttry {\n\t\t\t\t\tawait availableAPIs.fs_mkdir({ path: previousDirectory + \"/\" + dirName });\n\t\t\t\t\tbrowse();\n\t\t\t\t} catch (e) {\n\t\t\t\t\tdisplayResult.innerText = (await availableAPIs.lookupLocale(\"FILE_STRUCT_BROWSE_FAIL\")).replace(\"%s\", await availableAPIs.lookupLocale(e.message));\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (clipboard.selected) {\n\t\t\t\tdisplayResult.appendChild(document.createElement(\"hr\"));\n\t\t\t\tlet pasteButton = document.createElement(\"button\");\n\t\t\t\tpasteButton.innerText = await availableAPIs.lookupLocale(\"CLIPBOARD_PASTE\");\n\t\t\t\tpasteButton.onclick = async function() {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlet copyAllowed = await isDirectory(clipboard.path) == \"file\";\n\t\t\t\t\t\tif (!copyAllowed) throw new Error(await availableAPIs.lookupLocale(\"CLIPBOARD_SOURCE_GONE\"));\n\t\t\t\t\t\tlet readFile = await availableAPIs.fs_read({ path: clipboard.path });\n\t\t\t\t\t\tlet basename = clipboard.path.split(\"/\").slice(-1)[0];\n\t\t\t\t\t\tcopyAllowed = await isDirectory(previousDirectory + \"/\" + basename) == \"unknown\";\n\t\t\t\t\t\tif (!copyAllowed) throw new Error(await availableAPIs.lookupLocale(\"CLIPBOARD_CONFLICT\"));\n\t\t\t\t\t\tawait availableAPIs.fs_write({ path: previousDirectory + \"/\" + basename, data: readFile });\n\t\t\t\t\t\tif (clipboard.cut) await availableAPIs.fs_rm({ path: clipboard.path });\n\t\t\t\t\t\tbrowse();\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tdisplayResult.innerText = (await availableAPIs.lookupLocale(\"FILE_STRUCT_BROWSE_FAIL\")).replace(\"%s\", await availableAPIs.lookupLocale(e.message));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdisplayResult.appendChild(pasteButton);\n\t\t\t}\n\t\t}\n\t}\n\tasync function browse() {\n\t\tlet path = pathElement.value;\n\t\tif (path.endsWith(\"/\")) path = path.substring(0, path.length - 1);\n\t\tdisplayResult.innerText = \"\";\n\t\tif (path == \"\") {\n\t\t\tlet partitions = await availableAPIs.fs_mounts();\n\t\t\tfor (let partition of partitions) {\n\t\t\t\tif (partition.startsWith(\".\") && hideHiddenFiles) continue;\n\t\t\t\tlet openButton = document.createElement(\"button\");\n\t\t\t\topenButton.innerText = partition;\n\t\t\t\topenButton.onclick = function() {\n\t\t\t\t\tpathElement.value = partition;\n\t\t\t\t\tbrowse();\n\t\t\t\t}\n\t\t\t\topenButton.oncontextmenu = async function(e) {\n\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\tdisplayResult.innerText = \"\";\n\t\t\t\t\tlet unmountButton = document.createElement(\"button\");\n\t\t\t\t\tunmountButton.innerText = await availableAPIs.lookupLocale(\"UNMOUNT_BTN\");\n\t\t\t\t\tunmountButton.onclick = async function() {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait availableAPIs.fs_unmount({ mount: partition });\n\t\t\t\t\t\t\tbrowse();\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tdisplayResult.innerText = (await availableAPIs.lookupLocale(\"FILE_STRUCT_BROWSE_FAIL\")).replace(\"%s\", await availableAPIs.lookupLocale(e.message));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tunmountButton.oncontextmenu = async function(e) {\n\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait availableAPIs.fs_unmount({ mount: partition, force: true });\n\t\t\t\t\t\t\tbrowse();\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tdisplayResult.innerText = (await availableAPIs.lookupLocale(\"FILE_STRUCT_BROWSE_FAIL\")).replace(\"%s\", await availableAPIs.lookupLocale(e.message));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdisplayResult.appendChild(unmountButton);\n\t\t\t\t\tdisplayResult.appendChild(document.createElement(\"hr\"));\n\n\t\t\t\t\tlet deleteButton = document.createElement(\"button\");\n\t\t\t\t\tlet deleteConfirm = false;\n\t\t\t\t\tdeleteButton.innerText = await availableAPIs.lookupLocale(\"REMOVE_BTN\");\n\t\t\t\t\tdeleteButton.onclick = async function() {\n\t\t\t\t\t\tif (!deleteConfirm) {\n\t\t\t\t\t\t\tdeleteButton.style.fontWeight = \"bold\";\n\t\t\t\t\t\t\tdeleteConfirm = true;\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait recursiveRemove(partition);\n\t\t\t\t\t\t\tbrowse();\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tdisplayResult.innerText = (await availableAPIs.lookupLocale(\"FILE_STRUCT_BROWSE_FAIL\")).replace(\"%s\", await availableAPIs.lookupLocale(e.message));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdisplayResult.appendChild(deleteButton);\n\n\t\t\t\t\tdisplayResult.appendChild(document.createElement(\"br\"));\n\t\t\t\t\tlet permissions = { owner: \"nobody\", group: \"nobody\", world: \"rx\" };\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpermissions = await availableAPIs.fs_permissions({ path: partition });\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\t\t\t\t\tlet chownForm = document.createElement(\"form\");\n\t\t\t\t\tlet chownInput = document.createElement(\"input\");\n\t\t\t\t\tlet chownButton = document.createElement(\"button\");\n\t\t\t\t\tchownInput.value = permissions.owner;\n\t\t\t\t\tchownButton.innerText = await availableAPIs.lookupLocale(\"CHOWN_BUTTON\");\n\t\t\t\t\tchownForm.appendChild(chownInput);\n\t\t\t\t\tchownForm.appendChild(chownButton);\n\t\t\t\t\tdisplayResult.appendChild(chownForm);\n\t\t\t\t\tchownButton.onclick = async function() {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait availableAPIs.fs_chown({ path: partition, newUser: chownInput.value });\n\t\t\t\t\t\t\tbrowse();\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tdisplayResult.innerText = (await availableAPIs.lookupLocale(\"FILE_STRUCT_BROWSE_FAIL\")).replace(\"%s\", await availableAPIs.lookupLocale(e.message));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet chgrpForm = document.createElement(\"form\");\n\t\t\t\t\tlet chgrpInput = document.createElement(\"input\");\n\t\t\t\t\tlet chgrpButton = document.createElement(\"button\");\n\t\t\t\t\tchgrpInput.value = permissions.group;\n\t\t\t\t\tchgrpButton.innerText = await availableAPIs.lookupLocale(\"CHGRP_BUTTON\");\n\t\t\t\t\tchgrpForm.appendChild(chgrpInput);\n\t\t\t\t\tchgrpForm.appendChild(chgrpButton);\n\t\t\t\t\tdisplayResult.appendChild(chgrpForm);\n\t\t\t\t\tchgrpButton.onclick = async function() {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait availableAPIs.fs_chgrp({ path: partition, newGrp: chgrpInput.value });\n\t\t\t\t\t\t\tbrowse();\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tdisplayResult.innerText = (await availableAPIs.lookupLocale(\"FILE_STRUCT_BROWSE_FAIL\")).replace(\"%s\", await availableAPIs.lookupLocale(e.message));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet chmodForm = document.createElement(\"form\");\n\t\t\t\t\tlet chmodInput = document.createElement(\"input\");\n\t\t\t\t\tlet chmodButton = document.createElement(\"button\");\n\t\t\t\t\tchmodInput.value = permissions.world;\n\t\t\t\t\tchownInput.pattern = \"[rwx]+\";\n\t\t\t\t\tchmodButton.innerText = await availableAPIs.lookupLocale(\"CHMOD_BUTTON\");\n\t\t\t\t\tchmodForm.appendChild(chmodInput);\n\t\t\t\t\tchmodForm.appendChild(chmodButton);\n\t\t\t\t\tdisplayResult.appendChild(chmodForm);\n\t\t\t\t\tchmodButton.onclick = async function() {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait availableAPIs.fs_chmod({ path: partition, newPermissions: chmodInput.value });\n\t\t\t\t\t\t\tbrowse();\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tdisplayResult.innerText = (await availableAPIs.lookupLocale(\"FILE_STRUCT_BROWSE_FAIL\")).replace(\"%s\", await availableAPIs.lookupLocale(e.message));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdisplayResult.appendChild(openButton);\n\t\t\t}\n\t\t\tdisplayResult.appendChild(document.createElement(\"hr\"));\n\t\t\tlet spaceDisplayer = document.createElement(\"div\");\n\t\t\tlet spaces = await availableAPIs.estimateStorage();\n\t\t\tfor (let space in spaces) {\n\t\t\t\tlet newSpace = document.createElement(\"div\");\n\t\t\t\tnewSpace.innerText = (await availableAPIs.lookupLocale(\"SPACE_SHOWER\")).replace(\"%s\", space).replace(\"%s\", await availableAPIs.ufInfoUnits([spaces[space].used])).replace(\"%s\", await availableAPIs.ufInfoUnits([spaces[space].total])).replace(\"%s\", (spaces[space].used / spaces[space].total * 100).toFixed(2));\n\t\t\t\tspaceDisplayer.appendChild(newSpace);\n\t\t\t}\n\t\t\tdisplayResult.appendChild(spaceDisplayer);\n\t\t\tpreviousDirectory = path;\n\t\t\treturn \"browsed\";\n\t\t}\n\t\ttry {\n\t\t\tlet type = await isDirectory(path);\n\t\t\tif (type == \"directory\") {\n\t\t\t\tlet ls = (await availableAPIs.fs_ls({ path: path })).sort((a, b) => a.localeCompare(b));\n\t\t\t\tfor (let file of ls) {\n\t\t\t\t\tif (file.startsWith(\".\") && hideHiddenFiles) continue;\n\t\t\t\t\tlet openButton = document.createElement(\"button\");\n\t\t\t\t\tlet fileIcon = document.createElement(\"img\");\n\t\t\t\t\tfileIcon.style.width = \"12px\";\n\t\t\t\t\tfileIcon.style.height = \"12px\";\n\t\t\t\t\tlet fileType = file.split(\".\").slice(-1)[0];\n\t\t\t\t\tlet isDir = await isDirectory(path + \"/\" + file);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlet wantedIcon;\n\t\t\t\t\t\tif (isDir == \"directory\") wantedIcon = \"foldericon.pic\";\n\t\t\t\t\t\telse if (availableIcons.includes(fileType + \".pic\")) wantedIcon = fileType + \".pic\";\n\t\t\t\t\t\telse wantedIcon = \"fileicon.pic\";\n\t\t\t\t\t\tif (!cachedIcons.hasOwnProperty(wantedIcon)) cachedIcons[wantedIcon] = await availableAPIs.fs_read({ path: await availableAPIs.getSystemMount() + \"/etc/icons/\" + wantedIcon });\n\t\t\t\t\t\tfileIcon.src = cachedIcons[wantedIcon];\n\t\t\t\t\t} catch {}\n\t\t\t\t\topenButton.innerText = file;\n\t\t\t\t\topenButton.insertAdjacentElement(\"afterbegin\", fileIcon);\n\t\t\t\t\topenButton.onclick = function() {\n\t\t\t\t\t\tpathElement.value = path + \"/\" + file;\n\t\t\t\t\t\tbrowse();\n\t\t\t\t\t}\n\t\t\t\t\topenButton.oncontextmenu = async function(e) {\n\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\tdisplayResult.innerText = \"\";\n\t\t\t\t\t\tlet copyAllow = false;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcopyAllow = isDir == \"file\";\n\t\t\t\t\t\t} catch {}\n\t\t\t\t\t\tif (copyAllow) {\n\t\t\t\t\t\t\tlet copyButton = document.createElement(\"button\");\n\t\t\t\t\t\t\tcopyButton.innerText = await availableAPIs.lookupLocale(\"CLIPBOARD_COPY\");\n\t\t\t\t\t\t\tcopyButton.onclick = async function() {\n\t\t\t\t\t\t\t\tclipboard = {\n\t\t\t\t\t\t\t\t\tpath: path + \"/\" + file,\n\t\t\t\t\t\t\t\t\tselected: true,\n\t\t\t\t\t\t\t\t\tcut: false\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tbrowse();\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tdisplayResult.appendChild(copyButton);\n\n\t\t\t\t\t\t\tlet cutButton = document.createElement(\"button\");\n\t\t\t\t\t\t\tcutButton.innerText = await availableAPIs.lookupLocale(\"CLIPBOARD_CUT\");\n\t\t\t\t\t\t\tcutButton.onclick = async function() {\n\t\t\t\t\t\t\t\tclipboard = {\n\t\t\t\t\t\t\t\t\tpath: path + \"/\" + file,\n\t\t\t\t\t\t\t\t\tselected: true,\n\t\t\t\t\t\t\t\t\tcut: true\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tbrowse();\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tdisplayResult.appendChild(cutButton);\n\t\t\t\t\t\t\tdisplayResult.appendChild(document.createElement(\"hr\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet deleteButton = document.createElement(\"button\");\n\t\t\t\t\t\tlet deleteConfirm = false;\n\t\t\t\t\t\tdeleteButton.innerText = await availableAPIs.lookupLocale(\"REMOVE_BTN\");\n\t\t\t\t\t\tdeleteButton.onclick = async function() {\n\t\t\t\t\t\t\tif (!deleteConfirm) {\n\t\t\t\t\t\t\t\tdeleteButton.style.fontWeight = \"bold\";\n\t\t\t\t\t\t\t\tdeleteConfirm = true;\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tlet isDir = await isDirectory(path + \"/\" + file);\n\t\t\t\t\t\t\t\tif (isDir == \"directory\") await recursiveRemove(path + \"/\" + file);\n\t\t\t\t\t\t\t\telse if (isDir == \"file\") await availableAPIs.fs_rm({ path: path + \"/\" + file });\n\t\t\t\t\t\t\t\tbrowse();\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\tdisplayResult.innerText = (await availableAPIs.lookupLocale(\"FILE_STRUCT_BROWSE_FAIL\")).replace(\"%s\", await availableAPIs.lookupLocale(e.message));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdisplayResult.appendChild(deleteButton);\n\t\t\t\t\t\tdisplayResult.appendChild(document.createElement(\"br\"));\n\t\t\t\t\t\tlet permissions = { owner: \"nobody\", group: \"nobody\", world: \"rx\" };\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tpermissions = await availableAPIs.fs_permissions({ path: path + \"/\" + file });\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet chownForm = document.createElement(\"form\");\n\t\t\t\t\t\tlet chownInput = document.createElement(\"input\");\n\t\t\t\t\t\tlet chownButton = document.createElement(\"button\");\n\t\t\t\t\t\tchownInput.value = permissions.owner;\n\t\t\t\t\t\tchownButton.innerText = await availableAPIs.lookupLocale(\"CHOWN_BUTTON\");\n\t\t\t\t\t\tchownForm.appendChild(chownInput);\n\t\t\t\t\t\tchownForm.appendChild(chownButton);\n\t\t\t\t\t\tdisplayResult.appendChild(chownForm);\n\t\t\t\t\t\tchownButton.onclick = async function() {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tawait availableAPIs.fs_chown({ path: path + \"/\" + file, newUser: chownInput.value });\n\t\t\t\t\t\t\t\tbrowse();\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\tdisplayResult.innerText = (await availableAPIs.lookupLocale(\"FILE_STRUCT_BROWSE_FAIL\")).replace(\"%s\", await availableAPIs.lookupLocale(e.message));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet chgrpForm = document.createElement(\"form\");\n\t\t\t\t\t\tlet chgrpInput = document.createElement(\"input\");\n\t\t\t\t\t\tlet chgrpButton = document.createElement(\"button\");\n\t\t\t\t\t\tchgrpInput.value = permissions.group;\n\t\t\t\t\t\tchgrpButton.innerText = await availableAPIs.lookupLocale(\"CHGRP_BUTTON\");\n\t\t\t\t\t\tchgrpForm.appendChild(chgrpInput);\n\t\t\t\t\t\tchgrpForm.appendChild(chgrpButton);\n\t\t\t\t\t\tdisplayResult.appendChild(chgrpForm);\n\t\t\t\t\t\tchgrpButton.onclick = async function() {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tawait availableAPIs.fs_chgrp({ path: path + \"/\" + file, newGrp: chgrpInput.value });\n\t\t\t\t\t\t\t\tbrowse();\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\tdisplayResult.innerText = (await availableAPIs.lookupLocale(\"FILE_STRUCT_BROWSE_FAIL\")).replace(\"%s\", await availableAPIs.lookupLocale(e.message));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet chmodForm = document.createElement(\"form\");\n\t\t\t\t\t\tlet chmodInput = document.createElement(\"input\");\n\t\t\t\t\t\tlet chmodButton = document.createElement(\"button\");\n\t\t\t\t\t\tchmodInput.value = permissions.world;\n\t\t\t\t\t\tchownInput.pattern = \"[rwx]+\";\n\t\t\t\t\t\tchmodButton.innerText = await availableAPIs.lookupLocale(\"CHMOD_BUTTON\");\n\t\t\t\t\t\tchmodForm.appendChild(chmodInput);\n\t\t\t\t\t\tchmodForm.appendChild(chmodButton);\n\t\t\t\t\t\tdisplayResult.appendChild(chmodForm);\n\t\t\t\t\t\tchmodButton.onclick = async function() {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tawait availableAPIs.fs_chmod({ path: path + \"/\" + file, newPermissions: chmodInput.value });\n\t\t\t\t\t\t\t\tbrowse();\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\tdisplayResult.innerText = (await availableAPIs.lookupLocale(\"FILE_STRUCT_BROWSE_FAIL\")).replace(\"%s\", await availableAPIs.lookupLocale(e.message));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdisplayResult.appendChild(openButton);\n\t\t\t\t}\n\t\t\t\tpreviousDirectory = path;\n\t\t\t} else if (type == \"file\") {\n\t\t\t\tlet hasError = false;\n\t\t\t\tpathElement.value = previousDirectory;\n\t\t\t\tif (path.endsWith(\".js\")) {\n\t\t\t\t\tif (privileges.includes(\"START_TASK\") && privileges.includes(\"ELEVATE_PRIVILEGES\") && privileges.includes(\"MANAGE_TOKENS\")) {\n\t\t\t\t\t\tif (!globalToken) globalToken = await availableAPIs.consentGetToken({\n\t\t\t\t\t\t\tintent: await availableAPIs.lookupLocale(\"FILE_EXPLORER_INTENT\"),\n\t\t\t\t\t\t\tname: await availableAPIs.lookupLocale(\"FILE_EXPLORER\"),\n\t\t\t\t\t\t\tdesiredUser: await availableAPIs.getUser()\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (globalToken) {\n\t\t\t\t\t\t\tlet newToken = await availableAPIs.forkToken(globalToken);\n\t\t\t\t\t\t\tawait availableAPIs.startTask({ file: path, token: newToken });\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdisplayResult.innerText = await availableAPIs.lookupLocale(\"MORE_PERMISSION_DENIED\");\n\t\t\t\t\t\thasError = true;\n\t\t\t\t\t}\n\t\t\t\t} else if (path.endsWith(\".lnk\") && privileges.includes(\"ELEVATE_PRIVILEGES\") && privileges.includes(\"MANAGE_TOKENS\")) {\n\t\t\t\t\tlet file = await availableAPIs.fs_read({ path: path });\n\t\t\t\t\tfile = JSON.parse(file);\n\t\t\t\t\tif (privileges.includes(\"START_TASK\")) {\n\t\t\t\t\t\tif (!globalToken) globalToken = await availableAPIs.consentGetToken({\n\t\t\t\t\t\t\tintent: await availableAPIs.lookupLocale(\"FILE_EXPLORER_INTENT\"),\n\t\t\t\t\t\t\tname: await availableAPIs.lookupLocale(\"FILE_EXPLORER\"),\n\t\t\t\t\t\t\tdesiredUser: await availableAPIs.getUser()\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (globalToken) {\n\t\t\t\t\t\t\tlet newToken = await availableAPIs.forkToken(globalToken);\n\t\t\t\t\t\t\tawait availableAPIs.startTask({ file: file.path, argPassed: [ ...(file.args || []) ], token: newToken });\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdisplayResult.innerText = await availableAPIs.lookupLocale(\"MORE_PERMISSION_DENIED\");\n\t\t\t\t\t\thasError = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet lookUpAssociation = await availableAPIs.fs_ls({ path: await availableAPIs.getSystemMount() + \"/apps/associations\" });\n\t\t\t\t\tlet fileType = path.split(\".\").slice(-1)[0];\n\t\t\t\t\tif (!lookUpAssociation.includes(fileType)) return displayResult.innerText = await availableAPIs.lookupLocale(\"UNKNOWN_FILE_TYPE\");\n\t\t\t\t\tlet file = await availableAPIs.fs_read({ path: await availableAPIs.getSystemMount() + \"/apps/associations/\" + fileType });\n\t\t\t\t\tlet fileLink = JSON.parse(file);\n\t\t\t\t\tif (privileges.includes(\"START_TASK\") && privileges.includes(\"ELEVATE_PRIVILEGES\") && privileges.includes(\"MANAGE_TOKENS\")) {\n\t\t\t\t\t\tif (!globalToken) globalToken = await availableAPIs.consentGetToken({\n\t\t\t\t\t\t\tintent: await availableAPIs.lookupLocale(\"FILE_EXPLORER_INTENT\"),\n\t\t\t\t\t\t\tname: await availableAPIs.lookupLocale(\"FILE_EXPLORER\"),\n\t\t\t\t\t\t\tdesiredUser: await availableAPIs.getUser()\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (globalToken) {\n\t\t\t\t\t\t\tlet newToken = await availableAPIs.forkToken(globalToken);\n\t\t\t\t\t\t\tawait availableAPIs.startTask({ file: fileLink.path, argPassed: [ ...(fileLink.args || []), path ], token: newToken });\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdisplayResult.innerText = await availableAPIs.lookupLocale(\"MORE_PERMISSION_DENIED\");\n\t\t\t\t\t\thasError = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!hasError) await browse();\n\t\t\t} else {\n\t\t\t\tdisplayResult.innerText = (await availableAPIs.lookupLocale(\"FILE_STRUCT_BROWSE_FAIL\")).replace(\"%s\", (await availableAPIs.lookupLocale(\"UNKNOWN_FS_STRUCT\")).replace(\"%s\", type));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tdisplayResult.innerText = (await availableAPIs.lookupLocale(\"FILE_STRUCT_BROWSE_FAIL\")).replace(\"%s\", await availableAPIs.lookupLocale(e.message));\n\t\t}\n\t}\n\tif (exec_args[0]) pathElement.value = exec_args[0];\n\tbrowse();\n\tbrowseButton.onclick = browse;\n})();\nasync function recursiveRemove(path) {\n\tlet dirList = await availableAPIs.fs_ls({ path });\n\tfor (let fileIndex in dirList) {\n\t\tlet file = dirList[fileIndex];\n\t\tif (await availableAPIs.fs_isDirectory({ path: path + \"/\" + file })) await recursiveRemove(path + \"/\" + file);\n\t\telse await availableAPIs.fs_rm({ path: path + \"/\" + file });\n\t}\n\tawait availableAPIs.fs_rm({ path });\n}\nasync function isDirectory(path) {\n\ttry {\n\t\tlet isDirectoryVar = await availableAPIs.fs_isDirectory({ path });\n\t\treturn isDirectoryVar ? \"directory\" : \"file\";\n\t} catch {\n\t\treturn \"unknown\";\n\t}\n}\naddEventListener(\"signal\", async function(e) {\n\tif (e.detail == 15) {\n\t\ttry {\n\t\t\tif (globalToken) await availableAPIs.revokeToken(globalToken);\n\t\t} catch {}\n\t\tawait window.availableAPIs.terminate();\n\t}\n}); null;","af1a159ecaad73c468ee1a01572cbc110fed5c3ed3e560b449810a4e382ea7711eb97806d5621fb5c5f661828db4b20ec817fe5b132d1378c27424b3067e1aed":"// =====BEGIN MANIFEST=====\n// signer: automaticSigner\n// allow: FS_READ, FS_LIST_PARTITIONS, IPC_SEND_PIPE, GET_LOCALE, GET_THEME, FS_BYPASS_PERMISSIONS, GET_USER_INFO\n// signature: 0435cdc658259bf8784e679dc4ed9edeb634b9d94e788fd99366d671768e450d098f2a7955b7c26230b2d27cbb3c7e9a1f0adda7b6e31f10a93d1b908b9664a8\n// =====END MANIFEST=====\nlet ipcChannel = exec_args[0];\n(async function() {\n\t// @pcos-app-mode isolatable\n\tif (!ipcChannel) return availableAPIs.terminate();\n\tawait availableAPIs.windowTitleSet(await availableAPIs.lookupLocale(\"FILE_PICKER\"));\n\tdocument.body.style.fontFamily = \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\";\n\tif (await availableAPIs.isDarkThemed()) document.body.style.color = \"white\";\n\tlet privileges = await availableAPIs.getPrivileges();\n\tlet checklist = [ \"FS_READ\", \"FS_LIST_PARTITIONS\", \"IPC_SEND_PIPE\" ];\n\tif (!checklist.every(p => privileges.includes(p))) {\n\t\tif (privileges.includes(\"IPC_SEND_PIPE\")) await availableAPIs.sendToPipe({ pipe: ipcChannel, data: { success: false, reason: \"permissions\" } });\n\t\treturn availableAPIs.terminate();\n\t}\n\tlet hideHiddenFiles = false;\n\ttry {\n\t\tlet homedir = (await availableAPIs.getUserInfo({ desiredUser: await availableAPIs.getUser() })).homeDirectory;\n\t\thideHiddenFiles = true;\n\t\thideHiddenFiles = (await availableAPIs.fs_read({\n\t\t\tpath: homedir + \"/.hiddenFiles\",\n\t\t})) != \"show\";\n\t} catch {}\n\tdocument.body.innerText = \"\";\n\tlet mainComponent = document.createElement(\"div\");\n\tlet pathInputForm = document.createElement(\"form\");\n\tlet pathElement = document.createElement(\"input\");\n\tpathElement.value = exec_args[2] || \"\";\n\tlet browseButton = document.createElement(\"button\");\n\tlet displayResult = document.createElement(\"div\");\n\tlet newItemInput = document.createElement(\"input\");\n\tlet newItemBrowse = document.createElement(\"button\");\n\tlet newItemContainer = document.createElement(\"div\");\n\tlet previousDirectory = \"\";\n\tlet isDefaultChoice = true;\n\tmainComponent.style.display = \"flex\";\n\tmainComponent.style.flexDirection = \"column\";\n\tmainComponent.style.width = \"100%\";\n\tmainComponent.style.height = \"100%\";\n\tmainComponent.style.position = \"absolute\";\n\tmainComponent.style.top = \"0\";\n\tmainComponent.style.left = \"0\";\n\tmainComponent.style.padding = \"8px\";\n\tmainComponent.style.boxSizing = \"border-box\";\n\tdisplayResult.style.flex = \"1\";\n\tnewItemBrowse.innerText = await availableAPIs.lookupLocale(\"SAVE_BTN\");\n\tnewItemContainer.appendChild(document.createElement(\"hr\"));\n\tnewItemContainer.appendChild(newItemInput);\n\tbrowseButton.innerText = await availableAPIs.lookupLocale(\"BROWSE_FEXP\");\n\tnewItemContainer.appendChild(newItemBrowse);\n\tpathInputForm.appendChild(pathElement);\n\tpathInputForm.appendChild(browseButton);\n\tmainComponent.appendChild(pathInputForm);\n\tmainComponent.appendChild(displayResult);\n\tmainComponent.appendChild(newItemContainer);\n\tdocument.body.appendChild(mainComponent);\n\tnewItemContainer.hidden = exec_args[1] != \"save\";\n\tasync function browse() {\n\t\tlet path = pathElement.value;\n\t\tif (path.endsWith(\"/\")) path = path.substring(0, path.length - 1);\n\t\tdisplayResult.innerText = \"\";\n\t\tif (path == \"\") {\n\t\t\tlet partitions = await availableAPIs.fs_mounts();\n\t\t\tfor (let partition of partitions) {\n\t\t\t\tif (partition.startsWith(\".\") && hideHiddenFiles) continue;\n\t\t\t\tlet openButton = document.createElement(\"button\");\n\t\t\t\topenButton.innerText = partition;\n\t\t\t\topenButton.onclick = function() {\n\t\t\t\t\tpathElement.value = partition;\n\t\t\t\t\tbrowse();\n\t\t\t\t}\n\t\t\t\tdisplayResult.appendChild(openButton);\n\t\t\t}\n\t\t\tpreviousDirectory = path;\n\t\t\treturn \"browsed\";\n\t\t}\n\t\ttry {\n\t\t\tlet type = await isDirectory(path);\n\t\t\tif (type == \"directory\") {\n\t\t\t\tlet ls = (await availableAPIs.fs_ls({ path: path })).sort((a, b) => a.localeCompare(b));\n\t\t\t\tfor (let file of ls) {\n\t\t\t\t\tif (file.startsWith(\".\") && hideHiddenFiles) continue;\n\t\t\t\t\tlet openButton = document.createElement(\"button\");\n\t\t\t\t\topenButton.innerText = file;\n\t\t\t\t\topenButton.onclick = function() {\n\t\t\t\t\t\tpathElement.value = path + \"/\" + file;\n\t\t\t\t\t\tbrowse();\n\t\t\t\t\t}\n\t\t\t\t\tdisplayResult.appendChild(openButton);\n\t\t\t\t}\n\t\t\t\tpreviousDirectory = path;\n\t\t\t} else if (type == \"file\" || (type == \"unknown\" && exec_args[1] == \"save\")) {\n\t\t\t\tif (isDefaultChoice) {\n\t\t\t\t\tpathElement.value = path.split(\"/\").slice(0, -1).join(\"/\");\n\t\t\t\t\tnewItemInput.value = path.split(\"/\").slice(-1)[0];\n\t\t\t\t\treturn browse();\n\t\t\t\t}\n\t\t\t\tdisplayResult.innerText = \"\";\n\t\t\t\tawait availableAPIs.sendToPipe({ pipe: ipcChannel, data: { success: true, selected: path } });\n\t\t\t\tawait availableAPIs.terminate();\n\t\t\t} else {\n\t\t\t\tdisplayResult.innerText = (await availableAPIs.lookupLocale(\"FILE_STRUCT_BROWSE_FAIL\")).replace(\"%s\", (await availableAPIs.lookupLocale(\"UNKNOWN_FS_STRUCT\")).replace(\"%s\", type));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tdisplayResult.innerText = (await availableAPIs.lookupLocale(\"FILE_STRUCT_BROWSE_FAIL\")).replace(\"%s\", await availableAPIs.lookupLocale(e.message));\n\t\t}\n\t\tisDefaultChoice = false;\n\t}\n\tbrowse();\n\tbrowseButton.onclick = browse;\n\tnewItemBrowse.onclick = async function() {\n\t\tif (previousDirectory == \"\") return displayResult.innerText = (await availableAPIs.lookupLocale(\"FILE_STRUCT_BROWSE_FAIL\")).replace(\"%s\", await availableAPIs.lookupLocale(\"NO_SAVE_IN_MTN\"));\n\t\tpathElement.value = previousDirectory + \"/\" + newItemInput.value;\n\t\tbrowse();\n\t}\n})();\nasync function isDirectory(path) {\n\ttry {\n\t\tlet isDirectoryVar = await availableAPIs.fs_isDirectory({ path });\n\t\treturn isDirectoryVar ? \"directory\" : \"file\";\n\t} catch {\n\t\treturn \"unknown\";\n\t}\n}\naddEventListener(\"signal\", async function(e) {\n\tif (e.detail == 15) {\n\t\ttry {\n\t\t\tawait availableAPIs.sendToPipe({ pipe: ipcChannel, data: { success: false, reason: \"closed\" } });\n\t\t} catch {}\n\t\tawait window.availableAPIs.terminate();\n\t}\n}); null;","de6727bca5cefd27b15991ebd9cc757234aa5f083a180efd98a3a5085e555c880cf307dfb8c32aabf10b6d9d943a9181195b3dc9e00a57bd5a1b4f8e604b0916":"{\"path\":\"system/apps/explorer.js\",\"localeReferenceName\":\"FILE_EXPLORER\"}","1a8167e15d088258255aa71715fd8c9ac88332e2b721ce9151671371e2d2cc2e0f880b0c63ed0a1a43d4041b3833046bd387345fdfd8fbd956658e3a14273f16":"{\"path\":\"system/apps/textEditor.js\",\"localeReferenceName\":\"TEXT_EDITOR\"}","383febb84a87fbbd791f962458278c1d0b2bd007d4acaa17985e2b64038ba80ec75fcd29b30887542e2688492a1a40605753858873c1f0ef624c7f59bf3ee55e":"// =====BEGIN MANIFEST=====\n// signer: automaticSigner\n// allow: FS_READ, FS_LIST_PARTITIONS, IPC_SEND_PIPE, IPC_LISTEN_PIPE, GET_LOCALE, GET_THEME, FS_BYPASS_PERMISSIONS, SYSTEM_SHUTDOWN, GET_USER_INFO, LOGOUT, GET_SCREEN_INFO, GRAB_ATTENTION, LULL_SYSTEM\n// signature: cd1a930ad49e97a3e3ec83af0883651fc77ccb1b325782ba88fb41c69f64aa72f2338c0bab3eeb66e6d538cc4e2ec93961bc2c3b2e369644374c4f373a137d77\n// =====END MANIFEST=====\nlet ipcChannel;\nlet shouldShutdown = false;\nlet visibilityState = true;\nlet hexToU8A = (hex) => Uint8Array.from(hex.match(/.{1,2}/g).map(a => parseInt(a, 16)));\nlet u8aToHex = (u8a) => Array.from(u8a).map(a => a.toString(16).padStart(2, \"0\")).join(\"\");\n(async function() {\n\t// @pcos-app-mode isolatable\n\tipcChannel = await availableAPIs.getPrivateData();\n\tif (!ipcChannel) return availableAPIs.terminate();\n\tawait visibility(false);\n\tawait window.availableAPIs.windowTitleSet(await window.availableAPIs.lookupLocale(\"START_MENU\"));\n\tdocument.body.style.fontFamily = \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\";\n\tif (await availableAPIs.isDarkThemed()) document.body.style.color = \"white\";\n\tlet privileges = await availableAPIs.getPrivileges();\n\tlet checklist = [ \"FS_READ\", \"FS_LIST_PARTITIONS\", \"IPC_SEND_PIPE\", \"IPC_LISTEN_PIPE\" ];\n\tif (!checklist.every(p => privileges.includes(p))) return availableAPIs.terminate();\n\tawait availableAPIs.sendToPipe({ pipe: ipcChannel, data: { success: true } });\n\tdocument.body.innerText = \"\";\n\tlet logoutButton = document.createElement(\"button\");\n\tlogoutButton.innerText = (await availableAPIs.lookupLocale(\"LOG_OUT_BUTTON\")).replace(\"%s\", await availableAPIs.getUser());\n\tdocument.body.appendChild(logoutButton);\n\tlogoutButton.onclick = async function() {\n\t\tshouldShutdown = true;\n\t\tawait visibility(false);\n\t\tawait availableAPIs.logOut(await availableAPIs.getUser());\n\t}\n\tlet lockButton = document.createElement(\"button\");\n\tlockButton.innerText = await availableAPIs.lookupLocale(\"LOCK_BUTTON\");\n\tdocument.body.appendChild(lockButton);\n\tlockButton.onclick = async function() {\n\t\tawait visibility(false);\n\t\tawait availableAPIs.lock();\n\t}\n\tif (privileges.includes(\"SYSTEM_SHUTDOWN\")) {\n\t\tlet shutoff = document.createElement(\"button\");\n\t\tshutoff.innerText = await availableAPIs.lookupLocale(\"TURN_OFF_BUTTON\");\n\t\tdocument.body.appendChild(shutoff);\n\t\tshutoff.onclick = async function() {\n\t\t\tshouldShutdown = true;\n\t\t\tawait visibility(false);\n\t\t\tawait availableAPIs.shutdown({ isReboot: false });\n\t\t}\n\t\tlet reboot = document.createElement(\"button\");\n\t\treboot.innerText = await availableAPIs.lookupLocale(\"RESTART_BUTTON\");\n\t\tdocument.body.appendChild(reboot);\n\t\treboot.onclick = async function() {\n\t\t\tshouldShutdown = true;\n\t\t\tawait visibility(false);\n\t\t\tawait availableAPIs.shutdown({ isReboot: true, isKexec: true });\n\t\t}\n\t\treboot.oncontextmenu = async function(e) {\n\t\t\te.stopImmediatePropagation();\n\t\t\te.stopPropagation();\n\t\t\te.preventDefault();\n\t\t\tshouldShutdown = true;\n\t\t\tawait visibility(false);\n\t\t\tawait availableAPIs.shutdown({ isReboot: true, isKexec: false });\n\t\t}\n\t}\n\tif (privileges.includes(\"LULL_SYSTEM\")) {\n\t\tlet lull = document.createElement(\"button\");\n\t\tlull.innerText = await availableAPIs.lookupLocale(\"LULL_SYSTEM\");\n\t\tdocument.body.appendChild(lull);\n\t\tlull.onclick = async function() {\n\t\t\tawait visibility(false);\n\t\t\tawait availableAPIs.lull();\n\t\t}\n\t}\n\ttry {\n\t\tlet enumeration = await availableAPIs.fs_ls({ path: (await availableAPIs.getSystemMount()) + \"/apps/links\" });\n\t\tfor (let app of enumeration) {\n\t\t\tlet appLink = await availableAPIs.fs_read({ path: (await availableAPIs.getSystemMount()) + \"/apps/links/\" + app });\n\t\t\tappLink = JSON.parse(appLink);\n\t\t\tif (appLink.disabled) continue;\n\t\t\tlet appBtn = document.createElement(\"button\");\n\t\t\tappBtn.innerText = (appLink.localeReferenceName ? await availableAPIs.lookupLocale(appLink.localeReferenceName) : null) || (appLink.localeDatabaseName ? (appLink.localeDatabaseName[navigator.language.slice(0, 2).toLowerCase()] || appLink.localeDatabaseName[await availableAPIs.osLocale()]) : null) || appLink.name;\n\t\t\tappBtn.title = await availableAPIs.lookupLocale(\"PROVISIONED_PREFERENCE\");\n\t\t\tappBtn.onclick = async function() {\n\t\t\t\tawait visibility(false);\n\t\t\t\tawait availableAPIs.sendToPipe({ pipe: ipcChannel, data: { run: appLink } });\n\t\t\t}\n\t\t\tdocument.body.appendChild(appBtn);\n\t\t}\n\t} catch (e) {\n\t\tconsole.error(\"Failed to enumerate system app links\", e);\n\t}\n\ttry {\n\t\tlet enumeration = await availableAPIs.fs_ls({ path: (await availableAPIs.getUserInfo({ desiredUser: await availableAPIs.getUser() })).homeDirectory + \"/.applinks\" });\n\t\tfor (let app of enumeration) {\n\t\t\tlet appLink = await availableAPIs.fs_read({ path: (await availableAPIs.getUserInfo({ desiredUser: await availableAPIs.getUser() })).homeDirectory + \"/.applinks/\" + app });\n\t\t\tappLink = JSON.parse(appLink);\n\t\t\tif (appLink.disabled) continue;\n\t\t\tlet appBtn = document.createElement(\"button\");\n\t\t\tappBtn.innerText = (appLink.localeReferenceName ? await availableAPIs.lookupLocale(appLink.localeReferenceName) : null) || (appLink.localeDatabaseName ? (appLink.localeDatabaseName[navigator.language.slice(0, 2).toLowerCase()] || appLink.localeDatabaseName[await availableAPIs.osLocale()]) : null) || appLink.name;\n\t\t\tappBtn.onclick = async function() {\n\t\t\t\tawait visibility(false);\n\t\t\t\tawait availableAPIs.sendToPipe({ pipe: ipcChannel, data: { run: appLink } });\n\t\t\t}\n\t\t\tdocument.body.appendChild(appBtn);\n\t\t}\n\t} catch (e) {\n\t\tconsole.error(\"Failed to enumerate user app links\", e);\n\t}\n\n\tonresize = shapeshift;\n\n\twhile (true) {\n\t\tlet listen = await availableAPIs.listenToPipe(ipcChannel);\n\t\tif (listen.open) {\n\t\t\tawait visibility();\n\t\t\tshapeshift();\n\t\t}\n\t}\n})();\n\nasync function visibility(wantedState) {\n\tif (!wantedState) wantedState = !visibilityState;\n\tif (wantedState == visibilityState) return;\n\tawait availableAPIs.windowVisibility(wantedState);\n\tvisibilityState = wantedState;\n}\n\nasync function shapeshift() {\n\tlet screenInfo = await availableAPIs.getScreenInfo();\n\tlet winSize = await availableAPIs.windowSize();\n\tawait availableAPIs.windowRelocate([ screenInfo.height - (winSize.height / 2) - 35 - 8, winSize.width / 2 + 8 ]);\n}\n\naddEventListener(\"signal\", async function(e) {\n\tif (e.detail == 15) {\n\t\tawait visibility(false);\n\t\tawait availableAPIs.sendToPipe({ pipe: ipcChannel, data: { dying: true } });\n\t\tawait availableAPIs.terminate();\n\t}\n}); null;","ffe2e4cbb3e773ef53494ef16fb95da0d19333cf03e1fd4089b65c484993f32f9238c2e7fffa7aecdee167633ad3630754bc610284a094e95e6f60a094dbb861":"// =====BEGIN MANIFEST=====\n// link: lrn:TEXT_EDITOR\n// association: txt\n// signer: automaticSigner\n// allow: FS_READ, FS_WRITE, FS_LIST_PARTITIONS, IPC_CREATE_PIPE, IPC_LISTEN_PIPE, GET_LOCALE, GET_THEME, START_TASK, IPC_SEND_PIPE, FS_BYPASS_PERMISSIONS, GET_USER_INFO\n// signature: 7d937f3200900b251bb2df24ca09b840882eb6dac34b17ad9fb9ac3b94585f6368608b7f477b388731c766db2f4ef30cb049d7d1ba63fdf82a832af7c69dc26e\n// =====END MANIFEST=====\n(async function() {\n\t// @pcos-app-mode isolatable\n\tawait availableAPIs.windowTitleSet(await availableAPIs.lookupLocale(\"TEXT_EDITOR\"));\n\tdocument.body.style.fontFamily = \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\";\n\tif (await availableAPIs.isDarkThemed()) document.body.style.color = \"white\";\n\tdocument.documentElement.style.height = \"100%\";\n\tdocument.documentElement.style.width = \"100%\";\n\tdocument.body.style.height = \"100%\";\n\tdocument.body.style.width = \"100%\";\n\tdocument.body.style.margin = \"0\";\n\tlet flexContainer = document.createElement(\"div\");\n\tlet buttonContainer = document.createElement(\"div\");\n\tlet loadButton = document.createElement(\"button\");\n\tlet saveButton = document.createElement(\"button\");\n\tlet statusMessage = document.createElement(\"span\");\n\tlet data = document.createElement(\"textarea\");\n\tlet hr = document.createElement(\"hr\");\n\tlet hrContainer = document.createElement(\"div\");\n\tlet lastFile = \"\";\n\tloadButton.innerText = await availableAPIs.lookupLocale(\"LOAD_BTN\");\n\tsaveButton.innerText = await availableAPIs.lookupLocale(\"SAVE_BTN\");\n\tflexContainer.style.display = \"flex\";\n\tflexContainer.style.flexDirection = \"column\";\n\tflexContainer.style.width = \"100%\";\n\tflexContainer.style.height = \"100%\";\n\tdata.style.flexGrow = 1000;\n\tdata.style.resize = \"none\";\n\tif (await availableAPIs.isDarkThemed()) {\n\t\tdata.style.backgroundColor = \"#2b2a33\";\n\t\tdata.style.color = \"white\";\n\t}\n\tbuttonContainer.appendChild(loadButton);\n\tbuttonContainer.appendChild(saveButton);\n\tbuttonContainer.appendChild(statusMessage);\n\thrContainer.appendChild(hr);\n\tflexContainer.appendChild(buttonContainer);\n\tflexContainer.appendChild(hrContainer);\n\tflexContainer.appendChild(data);\n\tdocument.body.appendChild(flexContainer);\n\ttry {\n\t\tif (exec_args[0]) {\n\t\t\tdata.value = await availableAPIs.fs_read({ path: exec_args[0] });\n\t\t\tlastFile = exec_args[0];\n\t\t\tstatusMessage.innerText = exec_args[0].split(\"/\").pop();\n\t\t}\n\t} catch (e) {\n\t\tstatusMessage.innerText = e.name + \": \" + e.message;\n\t}\n\tloadButton.onclick = async function() {\n\t\tlet ipcPipe = await availableAPIs.createPipe();\n\t\tawait availableAPIs.windowVisibility(false);\n\t\tawait availableAPIs.startTask({ file: (await availableAPIs.getSystemMount()) + \"/apps/filePicker.js\", argPassed: [ipcPipe, \"load\", lastFile] });\n\t\tlet result = await availableAPIs.listenToPipe(ipcPipe);\n\t\tawait availableAPIs.closePipe(ipcPipe);\n\t\tawait availableAPIs.windowVisibility(true);\n\t\ttry {\n\t\t\tif (result.success) {\n\t\t\t\tdata.value = await availableAPIs.fs_read({ path: result.selected });\n\t\t\t\tlastFile = result.selected;\n\t\t\t\tstatusMessage.innerText = result.selected.split(\"/\").pop();\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tstatusMessage.innerText = e.name + \": \" + e.message;\n\t\t}\n\t}\n\tsaveButton.onclick = async function() {\n\t\tlet ipcPipe = await availableAPIs.createPipe();\n\t\tawait availableAPIs.windowVisibility(false);\n\t\tawait availableAPIs.startTask({ file: (await availableAPIs.getSystemMount()) + \"/apps/filePicker.js\", argPassed: [ipcPipe, \"save\", lastFile] });\n\t\tlet result = await availableAPIs.listenToPipe(ipcPipe);\n\t\tawait availableAPIs.closePipe(ipcPipe);\n\t\tawait availableAPIs.windowVisibility(true);\n\t\ttry {\n\t\t\tif (result.success) {\n\t\t\t\tawait availableAPIs.fs_write({ path: result.selected, data: data.value });\n\t\t\t\tlastFile = result.selected;\n\t\t\t\tstatusMessage.innerText = result.selected.split(\"/\").pop();\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tstatusMessage.innerText = e.name + \": \" + e.message;\n\t\t}\n\t}\n})();\naddEventListener(\"signal\", async function(e) {\n\tif (e.detail == 15) await window.availableAPIs.terminate();\n}); null;","15d170e986b95d941cb63800f55b9dba28c28d53b0564ffbe8199a5e0821f3737c47dbf99a864e7784412252709712650fe67611632f6f6448f115a3f83c3ae9":"{\n\t\"basic\": \"7f00000150434f53334e6574776f726b\",\n\t\"pc\": \"7f00000150434f53334e6574776f726b\"\n}"},"buildInfo":{"for":"1318","when":1750516408928,"signer":"moduleSigner","critical":true,"signature":"5b4c4d3661a500c82e1e3ea4bc1477f8a73c536374e261c97d914bd16d51290b9999e28a5e629d37ff13e42e202c3d08e76186a9f5f4c9767593326a5fd0439e"}}