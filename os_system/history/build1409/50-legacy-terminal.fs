{"backend":{"files":{"apps":{"apiTerminal.js":"8b801f426a5e9cd220f0c0be94a9d4a5c95bb9023ca82e83577ba0d4923943159fdae9c34d6c4002dc7602e06474ee1f8c35dca119f8625776716eee563bd214"},"boot":{"08-tty.js":"7cd0b7a7deb2c7f82a21cd328a4ce349e91b4edbe1c512baddf6b9881ce712ce70079a281c70029626577422c57d621ca045e036986275c1d6aaeec0b0a4af56"}},"permissions":{"apps/apiTerminal.js":{"world":"rx"},"apps/":{"world":"rx"},"boot/08-tty.js":{"world":"rx"},"boot/":{"world":"rx"},"":{"world":"rx"}}},"files":{"8b801f426a5e9cd220f0c0be94a9d4a5c95bb9023ca82e83577ba0d4923943159fdae9c34d6c4002dc7602e06474ee1f8c35dca119f8625776716eee563bd214":"// =====BEGIN MANIFEST=====\n// signer: automaticSigner\n// signature: 9d45e48aab0a5bf6a35ee070d6b5c7d44fe38c465e5668555b3a1f8df97065a3cf9a57f04dc70efa55187aa7f273c906c112005702753d1434cd814ce3e1e30a\n// =====END MANIFEST=====\n(async function() {\n\t// @pcos-app-mode isolatable\n\tawait window.availableAPIs.windowTitleSet(await window.availableAPIs.lookupLocale(\"API_TEST_TERM\"));\n\tdocument.body.style.fontFamily = \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\";\n\tif (await availableAPIs.isDarkThemed()) document.body.style.color = \"white\";\n\tawait availableAPIs.attachCLI();\n\t\n\tfunction parse_cmdline(cmdline) {\n\t\tvar re_next_arg = /^\\s*((?:(?:\"(?:\\\\.|[^\"])*\")|(?:'[^']*')|\\\\.|\\S)+)\\s*(.*)$/;\n\t\tvar next_arg = ['', '', cmdline];\n\t\tvar args = [];\n\t\twhile (next_arg = re_next_arg.exec(next_arg[2])) {\n\t\t\tvar quoted_arg = next_arg[1];\n\t\t\tvar unquoted_arg = \"\";\n\t\t\twhile (quoted_arg.length > 0) {\n\t\t\t\tif (/^\"/.test(quoted_arg)) {\n\t\t\t\t\tvar quoted_part = /^\"((?:\\\\.|[^\"])*)\"(.*)$/.exec(quoted_arg);\n\t\t\t\t\tunquoted_arg += quoted_part[1].replace(/\\\\(.)/g, \"$1\");\n\t\t\t\t\tquoted_arg = quoted_part[2];\n\t\t\t\t} else if (/^'/.test(quoted_arg)) {\n\t\t\t\t\tvar quoted_part = /^'([^']*)'(.*)$/.exec(quoted_arg);\n\t\t\t\t\tunquoted_arg += quoted_part[1];\n\t\t\t\t\tquoted_arg = quoted_part[2];\n\t\t\t\t} else if (/^\\\\/.test(quoted_arg)) {\n\t\t\t\t\tunquoted_arg += quoted_arg[1];\n\t\t\t\t\tquoted_arg = quoted_arg.substring(2);\n\t\t\t\t} else {\n\t\t\t\t\tunquoted_arg += quoted_arg[0];\n\t\t\t\t\tquoted_arg = quoted_arg.substring(1);\n\t\t\t\t}\n\t\t\t}\n\t\t\targs[args.length] = unquoted_arg;\n\t\t}\n\t\treturn args;\n\t}\n\n\tlet str = \"\";\n\tlet default_user = await window.availableAPIs.getUser();\n\tawait availableAPIs.toMyCLI((await window.availableAPIs.lookupLocale(\"TERMINAL_INVITATION\")).replace(\"%s\", (await window.availableAPIs.getVersion())) + \"\\r\\n\\r\\n\");\n\tawait availableAPIs.toMyCLI(default_user + \"@localhost:~\" + (default_user == \"root\" ? \"#\" : \"$\") + \" \");\n\t\n\tonTermData(async function (e) {\n\t\tif (e == \"\\r\") {\n\t\t\tawait availableAPIs.toMyCLI(\"\\r\\n\");\n\t\t\tlet cmdline = [];\n\t\t\ttry {\n\t\t\t\tcmdline = parse_cmdline(str);\n\t\t\t} catch {\n\t\t\t\tawait availableAPIs.toMyCLI(\"> \");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tstr = \"\";\n\t\t\tif (!cmdline.length) {} else if (window.availableAPIs.hasOwnProperty(cmdline[0])) {\n\t\t\t\ttry {\n\t\t\t\t\tawait availableAPIs.toMyCLI(JSON.stringify(await window.availableAPIs[cmdline[0]](cmdline.length == 1 ? undefined : (cmdline.length == 2 ? cmdline[1] : [...cmdline.slice(1)]))) + \"\\r\\n\");\n\t\t\t\t} catch (e) {\n\t\t\t\t\tawait availableAPIs.toMyCLI(cmdline[0] + \": \" + e.name + \": \" + e.message + \"\\r\\n\");\n\t\t\t\t}\n\t\t\t} else if (cmdline[0] == \"js_ree\") {\n\t\t\t\ttry {\n\t\t\t\t\tawait availableAPIs.toMyCLI(JSON.stringify(eval(cmdline[1])) + \"\\r\\n\");\n\t\t\t\t} catch (e) {\n\t\t\t\t\tawait availableAPIs.toMyCLI(\"js_ree: \" + e.name + \": \" + e.message + \"\\r\\n\");\n\t\t\t\t}\n\t\t\t} else if (cmdline[0] == \"clear\") {\n\t\t\t\tawait availableAPIs.clearMyCLI();\n\t\t\t} else if (cmdline[0] == \"help\") {\n\t\t\t\tawait availableAPIs.toMyCLI(await window.availableAPIs.lookupLocale(\"HELP_TERMINAL_APITEST\"));\n\t\t\t\tfor (let api in window.availableAPIs) await availableAPIs.toMyCLI(api + \"\\r\\n\");\n\t\t\t} else {\n\t\t\t\tawait availableAPIs.toMyCLI((await window.availableAPIs.lookupLocale(\"TERM_COMMAND_NOT_FOUND\")).replace(\"%s\", cmdline[0]) + \"\\r\\n\");\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tdefault_user = await window.availableAPIs.getUser();\n\t\t\t} catch {}\n\t\t\tawait availableAPIs.toMyCLI(default_user + \"@localhost:~\" + (default_user == \"root\" ? \"#\" : \"$\") + \" \");\n\t\t\treturn;\n\t\t} else if (e == '\\u007F') {\n\t\t\tif (str.length > 0) {\n\t\t\t\tstr = str.substr(0, str.length - 1);\n\t\t\t\tawait availableAPIs.toMyCLI('\\b \\b');\n\t\t\t}\n\t\t} else {\n\t\t\tif (e >= String.fromCharCode(0x20) && e <= String.fromCharCode(0x7E) || e >= '\\u00a0') {\n\t\t\t\tstr += e;\n\t\t\t\tawait availableAPIs.toMyCLI(e);\n\t\t\t}\n\t\t}\n\t});\n})(); \n\nasync function onTermData(listener) {\n\twhile (true) {\n\t\tlistener(await availableAPIs.fromMyCLI());\n\t}\n}\naddEventListener(\"signal\", async function(e) {\n\tif (e.detail == 15) await window.availableAPIs.terminate();\n}); null;","7cd0b7a7deb2c7f82a21cd328a4ce349e91b4edbe1c512baddf6b9881ce712ce70079a281c70029626577422c57d621ca045e036986275c1d6aaeec0b0a4af56":"async function js_terminal() {\n\t// @pcos-app-mode native\n\tlet windowtty = await modules.window(modules.session.active);\n\twindowtty.title.innerText = modules.locales.get(\"JS_TERMINAL\");\n\twindowtty.closeButton.onclick = function() {\n\t\twindowtty.windowDiv.remove();\n\t}\n\twindowtty.content.style.padding = \"0px\";\n\twindowtty.content.style.margin = \"0px\";\n\tlet term = new Terminal();\n\tlet fitAddon = new FitAddon.FitAddon();\n\tterm.loadAddon(fitAddon);\n\tterm.open(windowtty.content);\n\tlet onresizeFn = () => fitAddon.fit();\n\tonresizeFn();\n\tlet robs = new ResizeObserver(onresizeFn);\n\trobs.observe(windowtty.windowDiv);\n\tterm.clear();\n\tterm.write(modules.locales.get(\"TERMINAL_INVITATION\").replace(\"%s\", pcos_version) + \"\\r\\n\\r\\n\");\n\tterm.write(\"> \");\n\tlet command = \"\";\n\tterm.onData(function(e) {\n\t\tif (e == \"\\r\") {\n\t\t\tterm.write(\"\\r\\n\");\n\t\t\ttry {\n\t\t\t\tterm.write(JSON.stringify(eval(command)) + \"\\r\\n\");\n\t\t\t} catch (e) {\n\t\t\t\tterm.write(e + \"\\r\\n\");\n\t\t\t}\n\t\t\tterm.write(\"> \");\n\t\t\tcommand = \"\";\n\t\t} else if (e == '\\u007F') {\n\t\t\tif (command.length > 0) {\n\t\t\t\tcommand = command.substr(0, command.length - 1);\n\t\t\t\tterm.write('\\b \\b');\n\t\t\t}\n\t\t} else {\n\t\t\tif (e >= String.fromCharCode(0x20) && e <= String.fromCharCode(0x7E) || e >= '\\u00a0') {\n\t\t\t\tcommand += e;\n\t\t\t\tterm.write(e);\n\t\t\t}\n\t\t}\n\t});\n\treturn windowtty;\n}"},"buildInfo":{"for":"1409","version":1409,"when":1755881774422,"signer":"moduleSigner","critical":false,"bootOrder":"50","signature":"60610ecdcbededa6a2c25860704db8ecc96e26a71824abe40989a2b91da39b69ff7a1442a08a389fc803c1a416e12b7cb3d9009674c13d1cae119d1971e91e0d"}}