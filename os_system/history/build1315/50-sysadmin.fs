{"backend":{"files":{"apps":{"links":{"pcosNetwork.lnk":"f4aaabc779f7ec1a3def78e51a38c2600d66eb46fd85dd6180e43fff57b6f41c4a1099006a5df011200d9b911871050fdc4730e5a08b4fe5df00ea76c73a5b40","personalSecurity.lnk":"977aa0a9cfedf4abe6fe89b7fcad9c3542e46a4ce610c2068b2cbb0384f3df0630b9f772ee2c9ab46ce8858e1affec02a97bb39f623204917d7138eddb2ed49a","sysAdmin.lnk":"d987248230b450c20864320cf1dea607ba40053e66f07bcfae21e31ca22a98b20a889c35ed5dd606cc29fbd37c0af4930f6694586499ac94753aa0fb14fbb5a4","systemSecurity.lnk":"5f6624321039c79e1775fb36793964fb6e9bba0eee8f9cb9e5fd637dcdd1adf1f5ff03ea74c85773ba93268f52905f72ebd78b5e29c17125ab17470e151d511c","taskManager.lnk":"855fc2e84b3559357f51bcb584f53bab2af58004d241457f9eb9ebae775d1a1e07b99efc64d84dc1a390d03950a9038b9937f35419f80d93859967a7b0f78fc5"},"pcosNetwork.js":"30a7bf17d79995e41a40558d614c11cdc39600b16ddffd5dfe46757b9cef1c5523b7b56e609f4d02ca634c8cedf528de27e5c5d0d1bdc4f55c79e892e8cfcc8f","personalSecurity.js":"d5a9c969103b801ad8ea14869094a1c47736aed213660ce16f28638ee178403ee779649404f5299d3d0e8c0fdd0d9ce91d01f0decb9912f6d35fce55d67051e3","sysAdmin.js":"13a786090a9777cbc7fa3b776d94ad584651dd2847ca34195b3a1db60f4ecaf2f95609125e427a9d2fd2696982536c63953fa732a9de41e67a29745a1badce05","systemSecurity.js":"a348d23b09dda6c6d80775d1bf0a01514a5deccbdd919cad5adaf0d42e5bd33bba5cd99ce3d85125d230ee102616d338d966764721c86f7fa1bb6674ec4c90f2","taskManager.js":"bcf3591de7d0848bfa6f56596c24275922af2060d1fa067a3a053e8d32c83e705b801a95d170b71f7a5a289334ddc02b4a89fb0e5258589222ddfc65c72ba154"}},"permissions":{"apps/links/pcosNetwork.lnk":{"world":"rx"},"apps/links/personalSecurity.lnk":{"world":"rx"},"apps/links/sysAdmin.lnk":{"world":"rx"},"apps/links/systemSecurity.lnk":{"world":"rx"},"apps/links/taskManager.lnk":{"world":"rx"},"apps/links/":{"world":"rx"},"apps/pcosNetwork.js":{"world":"rx"},"apps/personalSecurity.js":{"world":"rx"},"apps/sysAdmin.js":{"world":"rx"},"apps/systemSecurity.js":{"world":"rx"},"apps/taskManager.js":{"world":"rx"},"apps/":{"world":"rx"},"":{"world":"rx"}}},"files":{"f4aaabc779f7ec1a3def78e51a38c2600d66eb46fd85dd6180e43fff57b6f41c4a1099006a5df011200d9b911871050fdc4730e5a08b4fe5df00ea76c73a5b40":"{\"path\":\"system/apps/pcosNetwork.js\",\"localeReferenceName\":\"NETCONFIG_TITLE\"}","977aa0a9cfedf4abe6fe89b7fcad9c3542e46a4ce610c2068b2cbb0384f3df0630b9f772ee2c9ab46ce8858e1affec02a97bb39f623204917d7138eddb2ed49a":"{\"path\":\"system/apps/personalSecurity.js\",\"localeReferenceName\":\"PERSONAL_SECURITY_TITLE\"}","d987248230b450c20864320cf1dea607ba40053e66f07bcfae21e31ca22a98b20a889c35ed5dd606cc29fbd37c0af4930f6694586499ac94753aa0fb14fbb5a4":"{\"path\":\"system/apps/sysAdmin.js\",\"localeReferenceName\":\"SYSADMIN_TOOLS_TITLE\"}","5f6624321039c79e1775fb36793964fb6e9bba0eee8f9cb9e5fd637dcdd1adf1f5ff03ea74c85773ba93268f52905f72ebd78b5e29c17125ab17470e151d511c":"{\"path\":\"system/apps/systemSecurity.js\",\"localeReferenceName\":\"SYSTEM_SECURITY_TITLE\"}","855fc2e84b3559357f51bcb584f53bab2af58004d241457f9eb9ebae775d1a1e07b99efc64d84dc1a390d03950a9038b9937f35419f80d93859967a7b0f78fc5":"{\"path\":\"system/apps/taskManager.js\",\"localeReferenceName\":\"TASK_MANAGER\"}","30a7bf17d79995e41a40558d614c11cdc39600b16ddffd5dfe46757b9cef1c5523b7b56e609f4d02ca634c8cedf528de27e5c5d0d1bdc4f55c79e892e8cfcc8f":"// =====BEGIN MANIFEST=====\n// link: lrn:NETCONFIG_TITLE\n// signer: automaticSigner\n// fnName: networkInstaller\n// allow: RELOAD_NETWORK_CONFIG, IDENTIFY_SYSTEM, CSP_OPERATIONS, FS_READ, FS_WRITE, FS_REMOVE, FS_LIST_PARTITIONS, GET_LOCALE, GET_SERVER_URL, LIST_TASKS, GET_THEME, FS_BYPASS_PERMISSIONS\n// signature: 4f63f435d382ce34f15b588ddb971f56eda5c3eaccb78baa292e139ee0398b04faa9cd6a64ee6daae921631c92cd49d6c6ca223211f8f15b1d94f5611ab0b161\n// =====END MANIFEST=====\n(async function() {\n\t// @pcos-app-mode isolatable\n\tawait availableAPIs.windowTitleSet(await availableAPIs.lookupLocale(\"NETCONFIG_TITLE\") || \"PCOS Network configurator\");\n\tlet privileges = await availableAPIs.getPrivileges();\n\tlet checklist = [ \"IDENTIFY_SYSTEM\", \"CSP_OPERATIONS\", \"FS_READ\", \"FS_WRITE\", \"FS_LIST_PARTITIONS\", \"GET_LOCALE\", \"GET_SERVER_URL\", \"LIST_TASKS\" ];\n\tdocument.body.style.fontFamily = \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\";\n\ttry {\n\t\tif (await availableAPIs.isDarkThemed()) document.body.style.color = \"white\";\n\t} catch {}\n\tif (!checklist.every(p => privileges.includes(p))) {\n\t\tdocument.body.innerText = await availableAPIs.lookupLocale(\"NETCONFIG_DENY\") || \"Insufficient privileges.\";\n\t\treturn;\n\t}\n\tlet existingConfig = {};\n\ttry {\n\t\texistingConfig = JSON.parse(await availableAPIs.fs_read({\n\t\t\tpath: (await availableAPIs.getSystemMount()) + \"/etc/network.json\"\n\t\t}));\n\t} catch {}\n\tlet descriptionNetworkURL = document.createElement(\"span\");\n\tlet descriptionUCBits = document.createElement(\"span\");\n\tlet descriptionHostname = document.createElement(\"span\");\n\tlet descriptionUpdates = document.createElement(\"span\");\n\tlet paramNetworkURL = document.createElement(\"input\");\n\tlet ucBits = document.createElement(\"input\");\n\tlet paramHostname = document.createElement(\"input\");\n\tlet paramUpdates = document.createElement(\"input\");\n\tlet saveBtn = document.createElement(\"button\");\n\tlet updatePredictBtn = document.createElement(\"button\");\n\tlet addressPrediction = document.createElement(\"span\");\n\tlet form = document.createElement(\"form\");\n\tlet originUrl = new URL(await availableAPIs.runningServer());\n\toriginUrl.protocol = \"ws\" + (originUrl.protocol == \"https:\" ? \"s\" : \"\") + \":\";\n\tdescriptionNetworkURL.innerText = await availableAPIs.lookupLocale(\"NETCONFIG_URLF\");\n\tdescriptionUCBits.innerText = await availableAPIs.lookupLocale(\"NETCONFIG_UC\");\n\tdescriptionHostname.innerText = await availableAPIs.lookupLocale(\"NETCONFIG_HOSTNAME\");\n\tdescriptionUpdates.innerText = await availableAPIs.lookupLocale(\"NETCONFIG_UPDATES\");\n\tparamNetworkURL.value = existingConfig.url || originUrl.origin;\n\tucBits.type = \"number\";\n\tucBits.min = 0;\n\tucBits.max = 4294967295;\n\tucBits.value = existingConfig.ucBits;\n\tparamHostname.value = existingConfig.hostname || \"\";\n\tparamUpdates.value = existingConfig.updates || \"pcosserver.pc\";\n\tsaveBtn.innerText = await availableAPIs.lookupLocale(\"NETCONFIG_SAVE\");\n\tupdatePredictBtn.innerText = await availableAPIs.lookupLocale(\"NETCONFIG_PREDICT\");\n\tform.appendChild(descriptionNetworkURL);\n\tform.appendChild(paramNetworkURL);\n\tform.appendChild(document.createElement(\"br\"));\n\tform.appendChild(descriptionUCBits);\n\tform.appendChild(ucBits);\n\tform.appendChild(document.createElement(\"br\"));\n\tform.appendChild(descriptionHostname);\n\tform.appendChild(paramHostname);\n\tform.appendChild(document.createElement(\"br\"));\n\tform.appendChild(descriptionUpdates);\n\tform.appendChild(paramUpdates);\n\tform.appendChild(document.createElement(\"br\"));\n\tform.appendChild(saveBtn);\n\tform.appendChild(updatePredictBtn);\n\taddressPrediction.innerText = await availableAPIs.lookupLocale(\"EMPTY_STATUSBAR\");\n\tdocument.body.appendChild(form);\n\tdocument.body.appendChild(document.createElement(\"hr\"));\n\tdocument.body.appendChild(addressPrediction);\n\tsaveBtn.addEventListener(\"click\", async function(e) {\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tawait availableAPIs.fs_write({\n\t\t\t\tpath: (await availableAPIs.getSystemMount()) + \"/etc/network.json\",\n\t\t\t\tdata: JSON.stringify({\n\t\t\t\t\turl: paramNetworkURL.value,\n\t\t\t\t\tucBits: Math.round(Math.abs(Number(ucBits.value))),\n\t\t\t\t\thostname: paramHostname.value,\n\t\t\t\t\tupdates: paramUpdates.value\n\t\t\t\t}, null, \"\\t\")\n\t\t\t});\n\t\t\ttry {\n\t\t\t\tawait availableAPIs.fs_rm({\n\t\t\t\t\tpath: (await availableAPIs.getSystemMount()) + \"/apps/services/networkd.lnk\"\n\t\t\t\t});\n\t\t\t} catch {}\n\t\t\ttry {\n\t\t\t\tawait availableAPIs.reloadNetworkConfig();\n\t\t\t} catch {}\n\t\t\taddressPrediction.innerText = await availableAPIs.lookupLocale(\"NETCONFIG_SAVE_OK\");\n\t\t} catch {\n\t\t\taddressPrediction.innerText = await availableAPIs.lookupLocale(\"NETCONFIG_SAVE_FAIL\");\n\t\t}\n\t});\n\tupdatePredictBtn.addEventListener(\"click\", function(e) {\n\t\te.preventDefault();\n\t\tupdatePrediction({ addressPrediction, ucBits });\n\t});\n})();\nfunction findInputNumberString(output, chars) {\n\tlet inputNum = 0n;\n\tfor (let i = 0n; i < output.length; i++) {\n\t\tconst charIndex = chars.indexOf(output[i]);\n\t\tif (charIndex === -1) throw new Error(`Invalid character '${output[i]}' in output string`);\n\t\tinputNum = inputNum * BigInt(chars.length) + BigInt(charIndex);\n\t}\n\treturn inputNum;\n}\nfunction generateString(num, chars) {\n\tlet base = BigInt(chars.length), result = '';\n\twhile (num > 0n) result = chars[Number(num % base)] + result, num /= base;\n\treturn result;\n}\n\nasync function updatePrediction(elementInterface) {\n\tlet publicSystemID = await availableAPIs.getPublicSystemID();\n\tif (!publicSystemID) return elementInterface.addressPrediction.innerText = await availableAPIs.lookupLocale(\"NETCONFIG_SYSIDM\");\n\tlet sysIDx = u8aToHex(new Uint8Array(await availableAPIs.cspOperation({\n\t\tcspProvider: \"basic\",\n\t\toperation: \"digest\",\n\t\tcspArgument: {\n\t\t\talgorithm: \"SHA-256\",\n\t\t\tdata: hexToU8A(generateString(findInputNumberString(publicSystemID.x, base64Charset), hexCharset))\n\t\t}\n\t}))).padStart(8, \"0\").slice(0, 8);\n\tlet sysIDy = u8aToHex(new Uint8Array(await availableAPIs.cspOperation({\n\t\tcspProvider: \"basic\",\n\t\toperation: \"digest\",\n\t\tcspArgument: {\n\t\t\talgorithm: \"SHA-256\",\n\t\t\tdata: hexToU8A(generateString(findInputNumberString(publicSystemID.y, base64Charset), hexCharset))\n\t\t}\n\t}))).padStart(8, \"0\").slice(0, 8);\n\tlet ucPredict = Math.round(Math.abs(Number(elementInterface.ucBits.value))).toString(16).padStart(8, \"0\").slice(0, 8);\n\treturn elementInterface.addressPrediction.innerText = (\"xxxxxxxx\" + sysIDx + sysIDy + ucPredict).match(/.{1,4}/g).join(\":\");\n}\nlet hexToU8A = (hex) => Uint8Array.from(hex.match(/.{1,2}/g).map(a => parseInt(a, 16)));\nlet u8aToHex = (u8a) => Array.from(u8a).map(a => a.toString(16).padStart(2, \"0\")).join(\"\");\nlet base64Charset = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\";\nlet hexCharset = \"0123456789abcdef\";\naddEventListener(\"signal\", async function(e) {\n\tif (e.detail == 15) await window.availableAPIs.terminate();\n}); null;","d5a9c969103b801ad8ea14869094a1c47736aed213660ce16f28638ee178403ee779649404f5299d3d0e8c0fdd0d9ce91d01f0decb9912f6d35fce55d67051e3":"// =====BEGIN MANIFEST=====\n// link: lrn:PERSONAL_SECURITY_TITLE\n// signer: automaticSigner\n// allow: SET_SECURITY_CHECKS, GET_USER_INFO, CSP_OPERATIONS, GET_LOCALE, GET_THEME\n// signature: 2872e824b56b95bc85b24e831537cdf7a7dd5014aed7d6fbc41318879f88068abdd6a8d1f19bf8c11dcb04e6b71e27f51f2e8ddad74a0d6ff57567627ac1b5d5\n// =====END MANIFEST=====\n(async function() {\n\t// @pcos-app-mode isolatable\n\tawait availableAPIs.windowTitleSet(await availableAPIs.lookupLocale(\"PERSONAL_SECURITY_TITLE\"));\n\tlet privileges = await availableAPIs.getPrivileges();\n\tlet checklist = [ \"SET_SECURITY_CHECKS\", \"GET_USER_INFO\", \"CSP_OPERATIONS\" ];\n\tdocument.body.style.fontFamily = \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\";\n\tif (await availableAPIs.isDarkThemed()) document.body.style.color = \"white\";\n\tif (!checklist.every(p => privileges.includes(p))) {\n\t\tdocument.body.innerText = await availableAPIs.lookupLocale(\"PERSONAL_SECURITY_DENY\");\n\t\tlet currentToken = await availableAPIs.getProcessToken();\n\t\tlet newToken = await availableAPIs.consentGetToken({\n\t\t\tintent: await availableAPIs.lookupLocale(\"PERSONAL_SECURITY_INTENT\"),\n\t\t\tname: await availableAPIs.lookupLocale(\"PERSONAL_SECURITY_TITLE\"),\n\t\t\tdesiredUser: await availableAPIs.getUser()\n\t\t});\n\t\tif (!newToken) return;\n\t\tawait availableAPIs.setProcessToken(newToken);\n\t\tawait availableAPIs.revokeToken(currentToken);\n\t\tprivileges = await availableAPIs.getPrivileges();\n\t\tif (!checklist.every(p => privileges.includes(p))) return;\n\t}\n\tlet toolbar = document.createElement(\"div\");\n\tlet saveBtn = document.createElement(\"button\");\n\tlet loadBtn = document.createElement(\"button\");\n\tlet addBtn = document.createElement(\"button\");\n\ttoolbar.appendChild(saveBtn);\n\ttoolbar.appendChild(loadBtn);\n\ttoolbar.appendChild(addBtn);\n\tsaveBtn.innerText = await availableAPIs.lookupLocale(\"SAVE_BTN\");\n\tloadBtn.innerText = await availableAPIs.lookupLocale(\"LOAD_BTN\");\n\taddBtn.innerText = await availableAPIs.lookupLocale(\"ADD_BTN\");\n\tsaveBtn.onclick = async function() {\n\t\tawait availableAPIs.setOwnSecurityChecks({ checks });\n\t\tchecks = (await availableAPIs.getUserInfo({ desiredUser: await availableAPIs.getUser(), sensitive: true })).securityChecks;\n\t\treparse();\n\t};\n\tloadBtn.onclick = async function() {\n\t\tchecks = (await availableAPIs.getUserInfo({ desiredUser: await availableAPIs.getUser(), sensitive: true })).securityChecks;\n\t\treparse();\n\t};\n\taddBtn.onclick = function() {\n\t\tadd();\n\t}\n\tdocument.body.appendChild(toolbar);\n\tdocument.body.appendChild(document.createElement(\"hr\"));\n\tlet secCheck = document.createElement(\"div\");\n\tlet types = [\n\t\t\"pbkdf2\",\n\t\t\"informative\",\n\t\t\"informative_deny\",\n\t\t\"timeout\",\n\t\t\"timeout_deny\",\n\t\t\"serverReport\",\n\t\t\"pc-totp\",\n\t\t\"totp\",\n\t\t\"workingHours\",\n\t\t\"zkpp\"\n\t];\n\tlet checks = (await availableAPIs.getUserInfo({ desiredUser: await availableAPIs.getUser(), sensitive: true })).securityChecks;\n\n\tlet checkLocales = {\n\t\t\"pbkdf2\": \"PBKDF2_OPTION\",\n\t\t\"informative\": \"INFORMATIVE_MESSAGE_OPTION\",\n\t\t\"informative_deny\": \"INFORMATIVE_MESSAGE_DENY_OPTION\",\n\t\t\"timeout\": \"TIMEOUT_OPTION\",\n\t\t\"timeout_deny\": \"TIMEOUT_DENY_OPTION\",\n\t\t\"serverReport\": \"SERVER_REPORT_OPTION\",\n\t\t\"pc-totp\": \"PCTOTP_OPTION\",\n\t\t\"totp\": \"RFCTOTP_OPTION\",\n\t\t\"workingHours\": \"WORKING_HOURS_OPTION\",\n\t\t\"zkpp\": \"ZKPP_OPTION\"\n\t};\n\n\tasync function reparse() {\n\t\tsecCheck.remove();\n\t\tsecCheck = document.createElement(\"div\");\n\n\t\tfor (let check in checks) {\n\t\t\tlet checkInfo = checks[check];\n\t\t\tlet checkDiv = document.createElement(\"div\");\n\t\t\tcheckDiv.style.display = \"flex\";\n\t\t\tlet checkTitle = document.createElement(\"div\");\n\t\t\tcheckTitle.style.flex = 100;\n\t\t\tlet checkBtns = document.createElement(\"div\");\n\t\t\tcheckTitle.innerText = await availableAPIs.lookupLocale(checkLocales[checkInfo.type]);\n\t\t\tlet btnConfig = document.createElement(\"button\");\n\t\t\tlet btnUp = document.createElement(\"button\");\n\t\t\tlet btnDown = document.createElement(\"button\");\n\t\t\tlet btnDelete = document.createElement(\"button\");\n\t\t\tbtnConfig.innerText = \"*\";\n\t\t\tbtnUp.innerText = \"/\\\\\";\n\t\t\tbtnUp.disabled = check == 0;\n\t\t\tbtnDown.disabled = check == checks.length - 1;\n\t\t\tbtnDown.innerText = \"\\\\/\";\n\t\t\tbtnDelete.innerText = \"x\";\n\t\t\tcheckBtns.appendChild(btnConfig);\n\t\t\tcheckBtns.appendChild(btnUp);\n\t\t\tcheckBtns.appendChild(btnDown);\n\t\t\tcheckBtns.appendChild(btnDelete);\n\t\t\tcheckDiv.appendChild(checkTitle);\n\t\t\tcheckDiv.appendChild(checkBtns);\n\t\t\tbtnDelete.addEventListener(\"click\", function() {\n\t\t\t\tchecks.splice(check, 1);\n\t\t\t\treparse();\n\t\t\t});\n\t\t\tsecCheck.appendChild(checkDiv);\n\t\t\tbtnUp.addEventListener(\"click\", function() {\n\t\t\t\tchecks.splice(check, 1);\n\t\t\t\tchecks.splice(check - 1, 0, checkInfo);\n\t\t\t\treparse();\n\t\t\t});\n\t\t\tbtnDown.addEventListener(\"click\", function() {\n\t\t\t\tchecks.splice(check, 1);\n\t\t\t\tchecks.splice(check - 1 + 2, 0, checkInfo);\n\t\t\t\treparse();\n\t\t\t});\n\t\t\tbtnConfig.addEventListener(\"click\", function() {\n\t\t\t\tcheckConfig(check);\n\t\t\t});\n\t\t}\n\t\tdocument.body.appendChild(secCheck);\n\t}\n\n\tasync function checkConfig(check) {\n\t\tsecCheck.remove();\n\t\tsecCheck = document.createElement(\"div\");\n\t\tlet checkInfo = checks[check];\n\t\tlet checkBack = document.createElement(\"button\");\n\t\tlet checkName = document.createElement(\"b\");\n\t\tcheckBack.innerText = \"<-\";\n\t\tcheckName.innerText = await availableAPIs.lookupLocale(checkLocales[checkInfo.type]);\n\t\tsecCheck.appendChild(checkBack);\n\t\tsecCheck.appendChild(checkName);\n\t\tsecCheck.appendChild(document.createElement(\"br\"));\n\t\tcheckBack.addEventListener(\"click\", function() {\n\t\t\treparse();\n\t\t});\n\t\tif (checkInfo.type == \"pbkdf2\") {\n\t\t\tlet inputDescribe = document.createElement(\"span\");\n\t\t\tlet inputBox = document.createElement(\"input\");\n\t\t\tlet inputAccept = document.createElement(\"button\");\n\t\t\tinputDescribe.innerText = await availableAPIs.lookupLocale(\"PASSWORD\") + \": \";\n\t\t\tinputBox.type = \"password\";\n\t\t\tsecCheck.appendChild(inputDescribe);\n\t\t\tsecCheck.appendChild(inputBox);\n\t\t\tsecCheck.appendChild(inputAccept);\n\t\t\tinputAccept.innerText = await availableAPIs.lookupLocale(\"CONFIRM\");\n\t\t\tinputAccept.addEventListener(\"click\", async function() {\n\t\t\t\tlet salt = await availableAPIs.cspOperation({\n\t\t\t\t\tcspProvider: \"basic\",\n\t\t\t\t\toperation: \"random\",\n\t\t\t\t\tcspArgument: new Uint8Array(64)\n\t\t\t\t});\n\t\t\t\tlet u8aToHex = (u8a) => Array.from(u8a).map(a => a.toString(16).padStart(2, \"0\")).join(\"\");\n\t\t\t\tlet key = await availableAPIs.cspOperation({\n\t\t\t\t\tcspProvider: \"basic\",\n\t\t\t\t\toperation: \"importKey\",\n\t\t\t\t\tcspArgument: {\n\t\t\t\t\t\tformat: \"raw\",\n\t\t\t\t\t\tkeyData: new TextEncoder().encode(inputBox.value),\n\t\t\t\t\t\talgorithm: {\n\t\t\t\t\t\t\tname: \"PBKDF2\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\textractable: false,\n\t\t\t\t\t\tkeyUsages: [\"deriveBits\", \"deriveKey\"]\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tlet derived = new Uint8Array(await availableAPIs.cspOperation({\n\t\t\t\t\tcspProvider: \"basic\",\n\t\t\t\t\toperation: \"deriveBits\",\n\t\t\t\t\tcspArgument: {\n\t\t\t\t\t\talgorithm: {\n\t\t\t\t\t\t\tname: \"PBKDF2\",\n\t\t\t\t\t\t\tsalt: salt,\n\t\t\t\t\t\t\titerations: 100000,\n\t\t\t\t\t\t\thash: \"SHA-256\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbaseKey: key,\n\t\t\t\t\t\tlength: 256\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t\tawait availableAPIs.cspOperation({\n\t\t\t\t\tcspProvider: \"basic\",\n\t\t\t\t\toperation: \"unloadKey\",\n\t\t\t\t\tcspArgument: key\n\t\t\t\t});\n\t\t\t\tchecks[check] = {\n\t\t\t\t\ttype: \"pbkdf2\",\n\t\t\t\t\thash: u8aToHex(derived),\n\t\t\t\t\tsalt: u8aToHex(salt)\n\t\t\t\t};\n\t\t\t\treparse();\n\t\t\t});\n\t\t} else if (checkInfo.type == \"informative\" || checkInfo.type == \"informative_deny\") {\n\t\t\tlet textarea = document.createElement(\"textarea\");\n\t\t\tlet inputAccept = document.createElement(\"button\");\n\t\t\ttextarea.placeholder = await availableAPIs.lookupLocale(\"MESSAGE_ENTER\");\n\t\t\ttextarea.value = checkInfo.message;\n\t\t\tsecCheck.appendChild(textarea);\n\t\t\tsecCheck.appendChild(document.createElement(\"br\"));\n\t\t\tsecCheck.appendChild(inputAccept);\n\t\t\tinputAccept.innerText = await availableAPIs.lookupLocale(\"CONFIRM\");\n\t\t\tinputAccept.addEventListener(\"click\", function() {\n\t\t\t\tchecks[check].message = textarea.value;\n\t\t\t\treparse();\n\t\t\t});\n\t\t} else if (checkInfo.type == \"timeout\" || checkInfo.type == \"timeout_deny\") {\n\t\t\tlet inputDescribe = document.createElement(\"span\");\n\t\t\tlet inputBox = document.createElement(\"input\");\n\t\t\tlet inputAccept = document.createElement(\"button\");\n\t\t\tinputDescribe.innerText = await availableAPIs.lookupLocale(\"TIMEOUT_FIELD\") + \": \";\n\t\t\tinputBox.type = \"number\";\n\t\t\tinputBox.value = checkInfo.timeout;\n\t\t\tinputAccept.innerText = await availableAPIs.lookupLocale(\"CONFIRM\");\n\t\t\tsecCheck.appendChild(inputDescribe);\n\t\t\tsecCheck.appendChild(inputBox);\n\t\t\tsecCheck.appendChild(inputAccept);\n\t\t\tinputAccept.addEventListener(\"click\", function() {\n\t\t\t\tchecks[check].timeout = inputBox.value;\n\t\t\t\treparse();\n\t\t\t});\n\t\t} else if (checkInfo.type == \"serverReport\") {\n\t\t\tlet inputDescribe = document.createElement(\"span\");\n\t\t\tlet inputBox = document.createElement(\"input\");\n\t\t\tlet inputAccept = document.createElement(\"button\");\n\t\t\tinputDescribe.innerText = \"URL: \";\n\t\t\tinputBox.type = \"text\";\n\t\t\tinputBox.placeholder = \"https://example.org/report\";\n\t\t\tinputBox.value = checkInfo.url;\n\t\t\tinputAccept.innerText = await availableAPIs.lookupLocale(\"CONFIRM\");\n\t\t\tsecCheck.appendChild(inputDescribe);\n\t\t\tsecCheck.appendChild(inputBox);\n\t\t\tsecCheck.appendChild(inputAccept);\n\t\t\tinputAccept.addEventListener(\"click\", function() {\n\t\t\t\tchecks[check].url = inputBox.value;\n\t\t\t\treparse();\n\t\t\t});\n\t\t} else if (checkInfo.type == \"pc-totp\") {\n\t\t\tlet inputDescribe = document.createElement(\"span\");\n\t\t\tlet inputBox = document.createElement(\"input\");\n\t\t\tlet regen = document.createElement(\"button\");\n\t\t\tlet inputAccept = document.createElement(\"button\");\n\t\t\tinputDescribe.innerText = await availableAPIs.lookupLocale(\"SECRET_FIELD_TXT\") + \": \";\n\t\t\tinputBox.type = \"text\";\n\t\t\tinputBox.value = checkInfo.secret;\n\t\t\tregen.innerText = await availableAPIs.lookupLocale(\"REGENERATE\");\n\t\t\tinputAccept.innerText = await availableAPIs.lookupLocale(\"CONFIRM\");\n\t\t\tsecCheck.appendChild(inputDescribe);\n\t\t\tsecCheck.appendChild(inputBox);\n\t\t\tsecCheck.appendChild(document.createElement(\"br\"));\n\t\t\tsecCheck.appendChild(regen);\n\t\t\tsecCheck.appendChild(inputAccept);\n\t\t\tregen.addEventListener(\"click\", async function() {\n\t\t\t\tlet randomValues = await availableAPIs.cspOperation({\n\t\t\t\t\tcspProvider: \"basic\",\n\t\t\t\t\toperation: \"random\",\n\t\t\t\t\tcspArgument: new Uint8Array(32)\n\t\t\t\t});\n\t\t\t\tinputBox.value = Array.from(randomValues).map(x => x.toString(16).padStart(2, \"0\")).join(\"\");\n\t\t\t});\n\t\t\tinputAccept.addEventListener(\"click\", function() {\n\t\t\t\tchecks[check].secret = inputBox.value;\n\t\t\t\treparse();\n\t\t\t});\n\t\t} else if (checkInfo.type == \"totp\") {\n\t\t\tlet inputDescribe = document.createElement(\"span\");\n\t\t\tlet inputBox = document.createElement(\"input\");\n\t\t\tlet regen = document.createElement(\"button\");\n\t\t\tlet inputAccept = document.createElement(\"button\");\n\t\t\tinputDescribe.innerText = await availableAPIs.lookupLocale(\"SECRET_FIELD_HEX\") + \": \";\n\t\t\tinputBox.type = \"text\";\n\t\t\tinputBox.value = checkInfo.secret;\n\t\t\tregen.innerText = await availableAPIs.lookupLocale(\"REGENERATE\");\n\t\t\tinputAccept.innerText = await availableAPIs.lookupLocale(\"CONFIRM\");\n\t\t\tsecCheck.appendChild(inputDescribe);\n\t\t\tsecCheck.appendChild(inputBox);\n\t\t\tsecCheck.appendChild(document.createElement(\"br\"));\n\t\t\tsecCheck.appendChild(regen);\n\t\t\tsecCheck.appendChild(inputAccept);\n\t\t\tregen.addEventListener(\"click\", async function() {\n\t\t\t\tlet randomValues = await availableAPIs.cspOperation({\n\t\t\t\t\tcspProvider: \"basic\",\n\t\t\t\t\toperation: \"random\",\n\t\t\t\t\tcspArgument: new Uint8Array(10)\n\t\t\t\t});\n\t\t\t\tinputBox.value = Array.from(randomValues).map(x => x.toString(16).padStart(2, \"0\")).join(\"\");\n\t\t\t});\n\t\t\tinputAccept.addEventListener(\"click\", function() {\n\t\t\t\tchecks[check].secret = inputBox.value;\n\t\t\t\treparse();\n\t\t\t});\n\t\t} else if (checkInfo.type == \"workingHours\") {\n\t\t\tlet inputStartDescribe = document.createElement(\"span\");\n\t\t\tlet inputEndDescribe = document.createElement(\"span\");\n\t\t\tlet inputBoxStart = document.createElement(\"input\");\n\t\t\tlet inputBoxEnd = document.createElement(\"input\");\n\t\t\tlet inputAccept = document.createElement(\"button\");\n\t\t\tinputStartDescribe.innerText = await availableAPIs.lookupLocale(\"START_TIME_FIELD\") + \": \";\n\t\t\tinputBoxStart.type = \"time\";\n\t\t\tinputBoxStart.step = 1;\n\t\t\tif (checkInfo.start) inputBoxStart.value = String(checkInfo.start.hours).padStart(2, \"0\") + \":\" + String(checkInfo.start.minutes).padStart(2, \"0\") + \":\" + String(checkInfo.start.seconds).padStart(2, \"0\");\n\t\t\tinputEndDescribe.innerText = await availableAPIs.lookupLocale(\"END_TIME_FIELD\") + \": \";\n\t\t\tinputBoxEnd.type = \"time\";\n\t\t\tinputBoxEnd.step = 1;\n\t\t\tif (checkInfo.end) inputBoxEnd.value = String(checkInfo.end.hours).padStart(2, \"0\") + \":\" + String(checkInfo.end.minutes).padStart(2, \"0\") + \":\" + String(checkInfo.end.seconds).padStart(2, \"0\");\n\t\t\tinputAccept.innerText = await availableAPIs.lookupLocale(\"CONFIRM\");\n\t\t\tsecCheck.appendChild(inputStartDescribe);\n\t\t\tsecCheck.appendChild(inputBoxStart);\n\t\t\tsecCheck.appendChild(document.createElement(\"br\"));\n\t\t\tsecCheck.appendChild(inputEndDescribe);\n\t\t\tsecCheck.appendChild(inputBoxEnd);\n\t\t\tsecCheck.appendChild(document.createElement(\"br\"));\n\t\t\tsecCheck.appendChild(inputAccept);\n\t\t\tinputAccept.addEventListener(\"click\", function() {\n\t\t\t\tchecks[check].start = {\n\t\t\t\t\thours: Number(inputBoxStart.value.split(\":\")[0]),\n\t\t\t\t\tminutes: Number(inputBoxStart.value.split(\":\")[1]),\n\t\t\t\t\tseconds: Number(inputBoxStart.value.split(\":\")[2])\n\t\t\t\t};\n\t\t\t\tchecks[check].end = {\n\t\t\t\t\thours: Number(inputBoxEnd.value.split(\":\")[0]),\n\t\t\t\t\tminutes: Number(inputBoxEnd.value.split(\":\")[1]),\n\t\t\t\t\tseconds: Number(inputBoxEnd.value.split(\":\")[2])\n\t\t\t\t};\n\t\t\t\treparse();\n\t\t\t});\n\t\t} else if (checkInfo.type == \"zkpp\") {\n\t\t\tlet inputDescribe = document.createElement(\"span\");\n\t\t\tlet inputBox = document.createElement(\"input\");\n\t\t\tlet inputAccept = document.createElement(\"button\");\n\t\t\tinputDescribe.innerText = await availableAPIs.lookupLocale(\"PASSWORD\") + \": \";\n\t\t\tinputBox.type = \"password\";\n\t\t\tsecCheck.appendChild(inputDescribe);\n\t\t\tsecCheck.appendChild(inputBox);\n\t\t\tsecCheck.appendChild(inputAccept);\n\t\t\tinputAccept.innerText = await availableAPIs.lookupLocale(\"CONFIRM\");\n\t\t\tinputAccept.addEventListener(\"click\", async function() {\n\t\t\t\tlet u8aToHex = (u8a) => Array.from(u8a).map(a => a.toString(16).padStart(2, \"0\")).join(\"\");\n\t\t\t\tlet key = await availableAPIs.cspOperation({\n\t\t\t\t\tcspProvider: \"basic\",\n\t\t\t\t\toperation: \"importKey\",\n\t\t\t\t\tcspArgument: {\n\t\t\t\t\t\tformat: \"raw\",\n\t\t\t\t\t\tkeyData: new TextEncoder().encode(inputBox.value),\n\t\t\t\t\t\talgorithm: {\n\t\t\t\t\t\t\tname: \"PBKDF2\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\textractable: false,\n\t\t\t\t\t\tkeyUsages: [\"deriveBits\", \"deriveKey\"]\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tlet derived = new Uint8Array(await availableAPIs.cspOperation({\n\t\t\t\t\tcspProvider: \"basic\",\n\t\t\t\t\toperation: \"deriveBits\",\n\t\t\t\t\tcspArgument: {\n\t\t\t\t\t\talgorithm: {\n\t\t\t\t\t\t\tname: \"PBKDF2\",\n\t\t\t\t\t\t\tsalt: new Uint8Array(32),\n\t\t\t\t\t\t\titerations: 100000,\n\t\t\t\t\t\t\thash: \"SHA-256\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbaseKey: key,\n\t\t\t\t\t\tlength: 256\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t\tawait availableAPIs.cspOperation({\n\t\t\t\t\tcspProvider: \"basic\",\n\t\t\t\t\toperation: \"unloadKey\",\n\t\t\t\t\tcspArgument: key\n\t\t\t\t});\n\t\t\t\tlet publicKey = (await availableAPIs.cspOperation({\n\t\t\t\t\tcspProvider: \"tweetnacl\",\n\t\t\t\t\toperation: \"deriveKey\",\n\t\t\t\t\tcspArgument: {\n\t\t\t\t\t\ttype: \"sign\",\n\t\t\t\t\t\tseed: derived\n\t\t\t\t\t}\n\t\t\t\t})).publicKey;\n\t\t\t\tchecks[check] = {\n\t\t\t\t\ttype: \"zkpp\",\n\t\t\t\t\tpublicKey: u8aToHex(publicKey)\n\t\t\t\t};\n\t\t\t\treparse();\n\t\t\t});\n\t\t}\n\t\tdocument.body.appendChild(secCheck);\n\t}\n\n\tasync function add() {\n\t\tsecCheck.remove();\n\t\tsecCheck = document.createElement(\"div\");\n\t\tlet backBtn = document.createElement(\"button\");\n\t\tbackBtn.innerText = \"<-\";\n\t\tbackBtn.addEventListener(\"click\", function() {\n\t\t\treparse();\n\t\t});\n\t\tsecCheck.appendChild(backBtn);\n\t\tfor (let type of types) {\n\t\t\tlet btn = document.createElement(\"button\");\n\t\t\tbtn.innerText = await availableAPIs.lookupLocale(checkLocales[type]);\n\t\t\tbtn.addEventListener(\"click\", function() {\n\t\t\t\tchecks.push({ type });\n\t\t\t\treparse();\n\t\t\t});\n\t\t\tsecCheck.appendChild(btn);\n\t\t}\n\t\tdocument.body.appendChild(secCheck);\n\t}\n\treparse();\n})();\naddEventListener(\"signal\", async function(e) {\n\tif (e.detail == 15) await window.availableAPIs.terminate();\n}); null;","13a786090a9777cbc7fa3b776d94ad584651dd2847ca34195b3a1db60f4ecaf2f95609125e427a9d2fd2696982536c63953fa732a9de41e67a29745a1badce05":"// =====BEGIN MANIFEST=====\n// link: lrn:SYSADMIN_TOOLS_TITLE\n// signer: automaticSigner\n// fnName: sysadminInstaller\n// allow: SYSTEM_SHUTDOWN, FETCH_SEND, LLDISK_WRITE, RUN_KLVL_CODE, FS_READ, FS_WRITE, FS_LIST_PARTITIONS, GET_LOCALE, GET_THEME, IPC_CREATE_PIPE, IPC_LISTEN_PIPE, FS_BYPASS_PERMISSIONS, LLDISK_READ, LLDISK_LIST_PARTITIONS, LLDISK_INIT_PARTITIONS, LLDISK_REMOVE, LLDISK_IDB_READ, LLDISK_IDB_WRITE, LLDISK_IDB_REMOVE, LLDISK_IDB_LIST, LLDISK_IDB_SYNC, IPC_SEND_PIPE, START_TASK, FS_REMOVE, FS_MOUNT, SET_FIRMWARE, PATCH_DIFF, RESOLVE_NAME, CONNFUL_CONNECT, CONNFUL_READ, CONNFUL_WRITE, CONNFUL_DISCONNECT, CSP_OPERATIONS, GET_UPDATE_SERVICE, GET_USER_INFO\n// signature: 6088a7e31f51f8cf4a8ca398acacb0c943f8fc9fa5aae0cd3a2bada94312f5aebf474aa7084512325c71f137f7ed088c1831306771a007161cf6beedd1ab860a\n// =====END MANIFEST=====\n(async function() {\n\t// @pcos-app-mode isolatable\n\tawait availableAPIs.windowTitleSet(await availableAPIs.lookupLocale(\"SYSADMIN_TOOLS_TITLE\"));\n\tlet privileges = await availableAPIs.getPrivileges();\n\tdocument.body.style.fontFamily = \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\";\n\tif (await availableAPIs.isDarkThemed()) document.body.style.color = \"white\";\n\tlet container = document.createElement(\"div\");\n\tlet extraActivities = document.createElement(\"div\");\n\tlet osReinstallButton = document.createElement(\"button\");\n\tlet fsckOrderButton = document.createElement(\"button\");\n\tlet fsckDiscardButton = document.createElement(\"button\");\n\tlet wipeSystemButton = document.createElement(\"button\");\n\tlet updateSystemButton = document.createElement(\"button\");\n\tlet updateFirmwareButton = document.createElement(\"button\");\n\tlet imagingButton = document.createElement(\"button\");\n\tlet changeLocale = document.createElement(\"button\");\n\tosReinstallButton.innerText = await availableAPIs.lookupLocale(\"REINSTALL_BUTTON\");\n\tfsckOrderButton.innerText = await availableAPIs.lookupLocale(\"FSCK_BUTTON\");\n\tfsckDiscardButton.innerText = await availableAPIs.lookupLocale(\"DISCARD_BUTTON\");\n\twipeSystemButton.innerText = await availableAPIs.lookupLocale(\"SWIPE_BUTTON\");\n\tupdateSystemButton.innerText = await availableAPIs.lookupLocale(\"UPDATE_BUTTON\");\n\tupdateFirmwareButton.innerText = await availableAPIs.lookupLocale(\"UPDATEFW_BUTTON\");\n\timagingButton.innerText = await availableAPIs.lookupLocale(\"SYSTEM_IMAGING\");\n\tchangeLocale.innerText = await availableAPIs.lookupLocale(\"CHANGE_LOCALE\");\n\tosReinstallButton.addEventListener(\"click\", async function() {\n\t\tlet checklist = [ \"CSP_OPERATIONS\", \"PATCH_DIFF\", \"RESOLVE_NAME\", \"CONNFUL_CONNECT\", \"CONNFUL_READ\", \"CONNFUL_WRITE\", \"CONNFUL_DISCONNECT\", \"LLDISK_WRITE\", \"SYSTEM_SHUTDOWN\", \"FS_READ\" ];\n\t\tif (!checklist.every(p => privileges.includes(p))) {\n\t\t\textraActivities.innerText = await availableAPIs.lookupLocale(\"SYSADMIN_TOOLS_PRIVFAIL\");\n\t\t\treturn;\n\t\t}\n\t\tawait availableAPIs.closeability(false);\n\t\tcontainer.hidden = true;\n\t\textraActivities.innerText = await availableAPIs.lookupLocale(\"REINSTALL_DOWNLOADING\");\n\t\tlet osArchive;\n\t\ttry {\n\t\t\tlet etcls = await availableAPIs.fs_ls({\n\t\t\t\tpath: (await availableAPIs.getSystemMount()) + \"/etc\"\n\t\t\t});\n\t\t\tlet from = \"scratch\";\n\t\t\tlet originalVersion = \"\";\n\t\t\tif (etcls.includes(\"diffupdate_cache.js\")) {\n\t\t\t\toriginalVersion = await availableAPIs.fs_read({\n\t\t\t\t\tpath: (await availableAPIs.getSystemMount()) + \"/etc/diffupdate_cache.js\"\n\t\t\t\t});\n\t\t\t\tfrom = originalVersion.split(\"\\n\")[5].match(/\\d\\w+/)[0];\n\t\t\t}\n\t\t\tlet serverDomainOrAddress = exec_args[0] || ((await availableAPIs.getUpdateService()) || \"pcosserver.pc\");\n\t\t\tlet serverAddress = serverDomainOrAddress;\n\t\t\tif (!serverAddress.includes(\":\")) serverAddress = await availableAPIs.resolve(serverAddress);\n\t\t\tserverAddress = serverAddress.replaceAll(\":\", \"\");\n\t\t\textraActivities.innerText = (await availableAPIs.lookupLocale(\"DOWNLOADING_OS_PATCH\")).replace(\"%s\", serverDomainOrAddress).replace(\"%s\", serverAddress.match(/.{1,4}/g).join(\":\"));\n\t\t\tlet connection = await availableAPIs.connfulConnect({\n\t\t\t\tgate: \"deltaUpdate\",\n\t\t\t\taddress: serverAddress,\n\t\t\t\tverifyByDomain: serverDomainOrAddress\n\t\t\t});\n\t\t\tawait availableAPIs.connfulConnectionSettled(connection);\n\t\t\tawait availableAPIs.connfulWrite({\n\t\t\t\tconnectionID: connection,\n\t\t\t\tdata: JSON.stringify({ from, handlesCtr: true })\n\t\t\t})\n\t\t\tlet patch = [];\n\t\t\twhile (true) {\n\t\t\t\tlet a = JSON.parse(await availableAPIs.connfulRead(connection));\n\t\t\t\textraActivities.innerText = (await availableAPIs.lookupLocale(\"PATCH_HUNK_COUNT\")).replace(\"%s\", patch.length);\n\t\t\t\tif (a.final) break;\n\t\t\t\tpatch[a.ctr] = a.hunk;\n\t\t\t}\n\t\t\tawait availableAPIs.connfulDisconnect(connection);\n\t\t\tosArchive = (await availableAPIs.patchDiff({\n\t\t\t\toperation: \"applyPatch\",\n\t\t\t\targs: [ originalVersion, patch ]\n\t\t\t})).join(\"\");\n\t\t\tawait availableAPIs.fs_write({\n\t\t\t\tpath: (await availableAPIs.getSystemMount()) + \"/etc/diffupdate_cache.js\",\n\t\t\t\tdata: osArchive\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tawait availableAPIs.closeability(true);\n\t\t\tconsole.error(e);\n\t\t\textraActivities.innerText = await availableAPIs.lookupLocale(\"REINSTALL_DOWNLOAD_FAILED\");\n\t\t\tcontainer.hidden = false;\n\t\t\treturn;\n\t\t}\n\t\textraActivities.innerText = await availableAPIs.lookupLocale(\"REINSTALL_SETTING\");\n\t\tawait availableAPIs.lldaWrite({\n\t\t\tpartition: \"boot\",\n\t\t\tdata: osArchive\n\t\t});\n\t\textraActivities.innerText = await availableAPIs.lookupLocale(\"RESTARTING\");\n\t\tawait availableAPIs.shutdown({\n\t\t\tisReboot: true\n\t\t});\n\t});\n\tfsckOrderButton.addEventListener(\"click\", async function() {\n\t\tlet checklist = [ \"SYSTEM_SHUTDOWN\", \"FS_WRITE\" ];\n\t\tif (!checklist.every(p => privileges.includes(p))) {\n\t\t\textraActivities.innerText = await availableAPIs.lookupLocale(\"SYSADMIN_TOOLS_PRIVFAIL\");\n\t\t\treturn;\n\t\t}\n\t\tawait availableAPIs.closeability(false);\n\t\tcontainer.hidden = true;\n\t\textraActivities.innerText = await availableAPIs.lookupLocale(\"SETTING_FSCK_FLAG\");\n\t\ttry {\n\t\t\tawait availableAPIs.fs_write({\n\t\t\t\tpath: (await availableAPIs.getSystemMount()) + \"/.fsck\",\n\t\t\t\tdata: \"recover\"\n\t\t\t});\n\t\t} catch {\n\t\t\textraActivities.innerText = await availableAPIs.lookupLocale(\"SETTING_FSCK_FLAG_FAILED\");\n\t\t\tcontainer.hidden = false;\n\t\t\treturn;\n\t\t}\n\t\textraActivities.innerText = await availableAPIs.lookupLocale(\"RESTARTING\");\n\t\tawait availableAPIs.shutdown({\n\t\t\tisReboot: true\n\t\t});\n\t});\n\tfsckDiscardButton.addEventListener(\"click\", async function() {\n\t\tlet checklist = [ \"SYSTEM_SHUTDOWN\", \"FS_WRITE\" ];\n\t\tif (!checklist.every(p => privileges.includes(p))) {\n\t\t\textraActivities.innerText = await availableAPIs.lookupLocale(\"SYSADMIN_TOOLS_PRIVFAIL\");\n\t\t\treturn;\n\t\t}\n\t\tawait availableAPIs.closeability(false);\n\t\tcontainer.hidden = true;\n\t\textraActivities.innerText = await availableAPIs.lookupLocale(\"SETTING_FSCK_FLAG\");\n\t\ttry {\n\t\t\tawait availableAPIs.fs_write({\n\t\t\t\tpath: (await availableAPIs.getSystemMount()) + \"/.fsck\",\n\t\t\t\tdata: \"discard\"\n\t\t\t});\n\t\t} catch {\n\t\t\textraActivities.innerText = await availableAPIs.lookupLocale(\"SETTING_FSCK_FLAG_FAILED\");\n\t\t\tcontainer.hidden = false;\n\t\t\treturn;\n\t\t}\n\t\textraActivities.innerText = await availableAPIs.lookupLocale(\"RESTARTING\");\n\t\tawait availableAPIs.shutdown({\n\t\t\tisReboot: true\n\t\t});\n\t});\n\twipeSystemButton.addEventListener(\"click\", async function() {\n\t\tlet checklist = [ \"FS_REMOVE\", \"FS_MOUNT\", \"FS_READ\", \"LLDISK_IDB_READ\", \"LLDISK_IDB_WRITE\", \"LLDISK_IDB_REMOVE\", \"LLDISK_IDB_LIST\", \"LLDISK_IDB_SYNC\", \"SYSTEM_SHUTDOWN\" ];\n\t\tif (!checklist.every(p => privileges.includes(p))) {\n\t\t\textraActivities.innerText = await availableAPIs.lookupLocale(\"SYSADMIN_TOOLS_PRIVFAIL\");\n\t\t\treturn;\n\t\t}\n\t\tcontainer.hidden = true;\n\t\tawait availableAPIs.closeability(false);\n\t\textraActivities.innerText = await availableAPIs.lookupLocale(\"WIPING_SYSTEM\");\n\t\ttry {\n\t\t\tawait availableAPIs.fs_mount({\n\t\t\t\tmountpoint: \"pref\",\n\t\t\t\tfilesystem: \"preferenceMount\",\n\t\t\t\tfilesystemOptions: {}\n\t\t\t});\n\t\t\tlet prefOpts = await availableAPIs.fs_ls({ path: \"pref\" });\n\t\t\tfor (let prefOpt of prefOpts) await availableAPIs.fs_rm({ path: \"pref/\" + prefOpt });\n\t\t\tlet idb_keys = await availableAPIs.lldaIDBList();\n\t\t\tfor (let key of idb_keys) {\n\t\t\t\tlet partLen = (await availableAPIs.lldaIDBRead({ key })).length;\n\t\t\t\tlet randomness = \"\";\n\t\t\t\twhile (randomness.length < partLen) {\n\t\t\t\t\tlet remainingBytes = Math.round((partLen - randomness.length) / 2);\n\t\t\t\t\tif (remainingBytes > 65536) remainingBytes = 65536;\n\t\t\t\t\trandomness += crypto.getRandomValues(new Uint8Array(remainingBytes)).reduce((a, b) => a + b.toString(16).padStart(2, \"0\"), \"\");\n\t\t\t\t}\n\t\t\t\tawait availableAPIs.lldaIDBWrite({ key, value: randomness });\n\t\t\t\tawait availableAPIs.lldaIDBSync();\n\t\t\t\tawait availableAPIs.lldaIDBRemove({ key });\n\t\t\t\tawait availableAPIs.lldaIDBSync();\n\t\t\t}\n\t\t\t\n\t\t\tawait availableAPIs.shutdown({});\n\t\t} catch (e) {\n\t\t\tawait availableAPIs.closeability(true);\n\t\t\tconsole.error(e);\n\t\t\textraActivities.innerText = await availableAPIs.lookupLocale(\"WIPING_SYSTEM_FAILED\");\n\t\t\tcontainer.hidden = false;\n\t\t\treturn;\n\t\t}\n\t});\n\tupdateSystemButton.addEventListener(\"click\", async function() {\n\t\textraActivities.innerText = await availableAPIs.lookupLocale(\"WORK_IN_PROGRESS_AFTER_MODULAR\");\n\t\treturn;\n\t\tlet checklist = [ \"CSP_OPERATIONS\", \"PATCH_DIFF\", \"RESOLVE_NAME\", \"CONNFUL_CONNECT\", \"CONNFUL_READ\", \"CONNFUL_WRITE\", \"CONNFUL_DISCONNECT\", \"FS_WRITE\", \"RUN_KLVL_CODE\", \"IPC_CREATE_PIPE\", \"IPC_LISTEN_PIPE\", \"SYSTEM_SHUTDOWN\" ];\n\t\tif (!checklist.every(p => privileges.includes(p))) {\n\t\t\textraActivities.innerText = await availableAPIs.lookupLocale(\"SYSADMIN_TOOLS_PRIVFAIL\");\n\t\t\treturn;\n\t\t}\n\t\tawait availableAPIs.closeability(false);\n\t\tcontainer.hidden = true;\n\t\textraActivities.innerText = await availableAPIs.lookupLocale(\"REINSTALL_DOWNLOADING\");\n\t\tlet osArchive;\n\t\ttry {\n\t\t\tlet etcls = await availableAPIs.fs_ls({\n\t\t\t\tpath: (await availableAPIs.getSystemMount()) + \"/etc\"\n\t\t\t});\n\t\t\tlet from = \"scratch\";\n\t\t\tlet originalVersion = \"\";\n\t\t\tif (etcls.includes(\"diffupdate_cache.js\")) {\n\t\t\t\toriginalVersion = await availableAPIs.fs_read({\n\t\t\t\t\tpath: (await availableAPIs.getSystemMount()) + \"/etc/diffupdate_cache.js\"\n\t\t\t\t});\n\t\t\t\tfrom = originalVersion.split(\"\\n\")[5].match(/\\d\\w+/)[0];\n\t\t\t}\n\t\t\tlet serverDomainOrAddress = exec_args[0] || ((await availableAPIs.getUpdateService()) || \"pcosserver.pc\");\n\t\t\tlet serverAddress = serverDomainOrAddress;\n\t\t\tif (!serverAddress.includes(\":\")) serverAddress = await availableAPIs.resolve(serverAddress);\n\t\t\tserverAddress = serverAddress.replaceAll(\":\", \"\");\n\t\t\textraActivities.innerText = (await availableAPIs.lookupLocale(\"DOWNLOADING_OS_PATCH\")).replace(\"%s\", serverDomainOrAddress).replace(\"%s\", serverAddress.match(/.{1,4}/g).join(\":\"));\n\t\t\tlet connection = await availableAPIs.connfulConnect({\n\t\t\t\tgate: \"deltaUpdate\",\n\t\t\t\taddress: serverAddress,\n\t\t\t\tverifyByDomain: serverDomainOrAddress\n\t\t\t});\n\t\t\tawait availableAPIs.connfulConnectionSettled(connection);\n\t\t\tawait availableAPIs.connfulWrite({\n\t\t\t\tconnectionID: connection,\n\t\t\t\tdata: JSON.stringify({ from, handlesCtr: true })\n\t\t\t})\n\t\t\tlet patch = [];\n\t\t\twhile (true) {\n\t\t\t\tlet a = JSON.parse(await availableAPIs.connfulRead(connection));\n\t\t\t\textraActivities.innerText = (await availableAPIs.lookupLocale(\"PATCH_HUNK_COUNT\")).replace(\"%s\", patch.length);\n\t\t\t\tif (a.final) break;\n\t\t\t\tpatch[a.ctr] = a.hunk;\n\t\t\t}\n\t\t\tawait availableAPIs.connfulDisconnect(connection);\n\t\t\tif (patch.length == 0) {\n\t\t\t\tawait availableAPIs.closeability(true);\n\t\t\t\textraActivities.innerText = await availableAPIs.lookupLocale(\"SYSTEM_UP_TO_DATE\");\n\t\t\t\tcontainer.hidden = false;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tosArchive = (await availableAPIs.patchDiff({\n\t\t\t\toperation: \"applyPatch\",\n\t\t\t\targs: [ originalVersion, patch ]\n\t\t\t})).join(\"\");\n\t\t\tawait availableAPIs.fs_write({\n\t\t\t\tpath: (await availableAPIs.getSystemMount()) + \"/etc/diffupdate_cache.js\",\n\t\t\t\tdata: osArchive\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tawait availableAPIs.closeability(true);\n\t\t\tconsole.error(e);\n\t\t\textraActivities.innerText = await availableAPIs.lookupLocale(\"REINSTALL_DOWNLOAD_FAILED\");\n\t\t\tcontainer.hidden = false;\n\t\t\treturn;\n\t\t}\n\t\tlet files = osArchive.split(/\\/\\/ [0-9]+-.+.js\\n/g).slice(1);\n\t\tlet names = osArchive.match(/\\/\\/ [0-9]+-.+.js/g);\n\t\tlet appIndex = names.indexOf(\"// \" + \"1\" + \"5-ap\" + \"ps.js\");\n\t\tlet apps = files[appIndex].match(/async function (.+)Installer\\(target, token\\)/g).map(a => a.split(\" \")[2].split(\"(\")[0]);\n\t\tapps.splice(apps.indexOf(\"autoinstallerInstaller\"), 1);\n\t\tapps.splice(apps.indexOf(\"installerInstaller\"), 1);\n\t\tapps.splice(apps.indexOf(\"secondstageInstaller\"), 1);\n\t\tlet ipcPipe = await availableAPIs.createPipe();\n\t\tlet pipeResult = availableAPIs.listenToPipe(ipcPipe);\n\t\tlet installerCode = \"\";\n\t\tfor (let app of apps) installerCode += `await ${app}(modules.defaultSystem, ${JSON.stringify(await availableAPIs.getProcessToken())});\\n`;\n\t\tawait availableAPIs.runKlvlCode(`(async function() {\n\t\t\ttry {\n\t\t\t\t${files[appIndex]}\n\t\t\t\t${installerCode}\n\t\t\t\tmodules.ipc.send(${JSON.stringify(ipcPipe)}, true);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t\tmodules.ipc.send(${JSON.stringify(ipcPipe)}, false);\n\t\t\t}\n\t\t})();`);\n\t\tpipeResult = await pipeResult;\n\t\tawait availableAPIs.closePipe(ipcPipe);\n\t\tif (!pipeResult) {\n\t\t\textraActivities.innerText = await availableAPIs.lookupLocale(\"UPDATE_EXTRA_FAIL\");\n\t\t\tcontainer.hidden = false;\n\t\t\treturn;\n\t\t}\n\t\tfiles.splice(appIndex, 1);\n\t\tnames.splice(appIndex, 1);\n\t\tlet installerIndex = names.indexOf(\"// 1\" + \"0\" + \"-ins\" + \"taller.js\");\n\t\tfiles.splice(installerIndex, 1);\n\t\tnames.splice(installerIndex, 1);\n\t\tlet secondStageIndex = names.indexOf(\"// 1\" + \"7\" + \"-instal\" + \"ler-seconds\" + \"tage.js\");\n\t\tfiles.splice(secondStageIndex, 1);\n\t\tnames.splice(secondStageIndex, 1);\n\t\tfor (let file in files) {\n\t\t\tlet name = names[file].split(\" \").slice(1).join(\" \");\n\t\t\tlet content = files[file];\n\t\t\ttry {\n\t\t\t\tawait availableAPIs.fs_write({\n\t\t\t\t\tpath: (await availableAPIs.getSystemMount()) + \"/boot/\" + name,\n\t\t\t\t\tdata: content\n\t\t\t\t});\n\t\t\t} catch {\n\t\t\t\tawait availableAPIs.closeability(true);\n\t\t\t\textraActivities.innerText = await availableAPIs.lookupLocale(\"UPDATE_BOOT_FAIL\");\n\t\t\t\tcontainer.hidden = false;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\textraActivities.innerText = await availableAPIs.lookupLocale(\"RESTARTING\");\n\t\tawait availableAPIs.shutdown({\n\t\t\tisReboot: true,\n\t\t\tisKexec: true\n\t\t});\n\t});\n\tupdateFirmwareButton.addEventListener(\"click\", async function() {\n\t\tlet checklist = [ \"FETCH_SEND\", \"SYSTEM_SHUTDOWN\", \"SET_FIRMWARE\" ];\n\t\tif (!checklist.every(p => privileges.includes(p))) {\n\t\t\textraActivities.innerText = await availableAPIs.lookupLocale(\"SYSADMIN_TOOLS_PRIVFAIL\");\n\t\t\treturn;\n\t\t}\n\t\tawait availableAPIs.closeability(false);\n\t\tcontainer.hidden = true;\n\t\textraActivities.innerText = await availableAPIs.lookupLocale(\"UPDATEFW_DOWNLOADING\");\n\t\tlet fwArchive;\n\t\ttry {\n\t\t\tfwArchive = await availableAPIs.fetchSend({\n\t\t\t\turl: \"/init.js\",\n\t\t\t\tinit: {}\n\t\t\t});\n\t\t\tif (!fwArchive.ok) throw new Error(\"Download failed\");\n\t\t} catch (e) {\n\t\t\tawait availableAPIs.closeability(true);\n\t\t\tconsole.error(e);\n\t\t\textraActivities.innerText = await availableAPIs.lookupLocale(\"UPDATEFW_DOWNLOAD_FAILED\");\n\t\t\tcontainer.hidden = false;\n\t\t\treturn;\n\t\t}\n\t\textraActivities.innerText = await availableAPIs.lookupLocale(\"UPDATEFW_DECODING\");\n\t\tfwArchive = fwArchive.arrayBuffer;\n\t\tfwArchive = new TextDecoder().decode(fwArchive);\n\t\textraActivities.innerText = await availableAPIs.lookupLocale(\"UPDATEFW_SETTING\");\n\t\tawait availableAPIs.setFirmware(fwArchive);\n\t\textraActivities.innerText = await availableAPIs.lookupLocale(\"RESTARTING\");\n\t\tawait availableAPIs.shutdown({\n\t\t\tisReboot: true\n\t\t});\n\t});\n\timagingButton.addEventListener(\"click\", async function() {\n\t\tlet checklist = [ \"GET_THEME\", \"LLDISK_READ\", \"LLDISK_WRITE\", \"LLDISK_LIST_PARTITIONS\", \"LLDISK_INIT_PARTITIONS\", \"LLDISK_REMOVE\", \"LLDISK_IDB_READ\", \"LLDISK_IDB_WRITE\", \"LLDISK_IDB_REMOVE\", \"LLDISK_IDB_LIST\", \"LLDISK_IDB_SYNC\", \"FS_READ\", \"FS_WRITE\", \"FS_BYPASS_PERMISSIONS\", \"SYSTEM_SHUTDOWN\", \"FS_LIST_PARTITIONS\", \"IPC_SEND_PIPE\", \"GET_LOCALE\", \"IPC_CREATE_PIPE\", \"IPC_LISTEN_PIPE\", \"START_TASK\" ];\n\t\tif (!checklist.every(p => privileges.includes(p))) {\n\t\t\textraActivities.innerText = await availableAPIs.lookupLocale(\"SYSADMIN_TOOLS_PRIVFAIL\");\n\t\t\treturn;\n\t\t}\n\t\tawait availableAPIs.windowTitleSet(await availableAPIs.lookupLocale(\"SYSTEM_IMAGING\"));\n\t\timaging();\n\t});\n\tchangeLocale.addEventListener(\"click\", async function() {\n\t\tlet checklist = [ \"GET_THEME\", \"GET_LOCALE\", \"FS_WRITE\", \"FS_BYPASS_PERMISSIONS\", \"RUN_KLVL_CODE\", \"FS_LIST_PARTITIONS\" ];\n\t\tif (!checklist.every(p => privileges.includes(p))) {\n\t\t\textraActivities.innerText = await availableAPIs.lookupLocale(\"SYSADMIN_TOOLS_PRIVFAIL\");\n\t\t\treturn;\n\t\t}\n\t\tcontainer.hidden = true;\n\t\textraActivities.innerText = \"\";\n\t\tlet locales = await availableAPIs.installedLocales();\n\t\tlet localeSelect = document.createElement(\"select\");\n\t\tlet localeZero = document.createElement(\"option\");\n\t\tlocaleZero.value = \"\";\n\t\tlocaleZero.innerText = \" 🌐 Language 🌐 \";\n\t\tlocaleZero.selected = true;\n\t\tlocaleZero.disabled = true;\n\t\tlocaleZero.hidden = true;\n\t\tlocaleSelect.appendChild(localeZero);\n\t\tfor (let locale of locales) {\n\t\t\tlet option = document.createElement(\"option\");\n\t\t\toption.value = locale;\n\t\t\toption.innerText = await availableAPIs.lookupOtherLocale({ key: \"LOCALE_NAME\", locale });\n\t\t\tlocaleSelect.appendChild(option);\n\t\t}\n\t\tlocaleSelect.addEventListener(\"change\", async function() {\n\t\t\tawait availableAPIs.runKlvlCode(\"modules.locales.defaultLocale = \" + JSON.stringify(localeSelect.value));\n\t\t\tawait availableAPIs.fs_write({\n\t\t\t\tpath: (await availableAPIs.getSystemMount()) + \"/boot/06-localeset.js\", \n\t\t\t\tdata: \"modules.locales.defaultLocale = \" + JSON.stringify(await availableAPIs.osLocale()) + \";\\n\"\n\t\t\t});\n\t\t\tlocaleSelect.remove();\n\t\t\tcontainer.hidden = false;\n\t\t\textraActivities.innerText = await availableAPIs.lookupLocale(\"SUCCESSFUL_OP\");\n\t\t});\n\t\textraActivities.appendChild(localeSelect);\n\t});\n\tcontainer.appendChild(fsckOrderButton);\n\tcontainer.appendChild(fsckDiscardButton);\n\tcontainer.appendChild(osReinstallButton);\n\tcontainer.appendChild(wipeSystemButton);\n\tcontainer.appendChild(updateSystemButton);\n\tcontainer.appendChild(updateFirmwareButton);\n\tcontainer.appendChild(imagingButton);\n\tcontainer.appendChild(changeLocale);\n\tdocument.body.appendChild(container);\n\tdocument.body.appendChild(extraActivities);\n})();\nfunction imaging() {\n\tasync function mainPage() {\n\t\tdocument.body.innerText = \"\";\n\t\tlet create = document.createElement(\"button\");\n\t\tlet restore = document.createElement(\"button\");\n\t\tcreate.innerText = await availableAPIs.lookupLocale(\"CREATE_IMAGE\");\n\t\trestore.innerText = await availableAPIs.lookupLocale(\"RESTORE_IMAGE\");\n\t\tcreate.onclick = createPage;\n\t\trestore.onclick = restorePage;\n\t\tdocument.body.appendChild(create);\n\t\tdocument.body.appendChild(restore);\n\t}\n\n\tasync function createPage() {\n\t\tdocument.body.innerText = \"\";\n\t\tlet backBtn = document.createElement(\"button\");\n\t\tlet pageTitle = document.createElement(\"span\");\n\t\tlet selectedFileLabel = document.createElement(\"label\");\n\t\tlet selectedFile = document.createElement(\"input\");\n\t\tlet selectedFileButton = document.createElement(\"button\");\n\t\tlet createBtn = document.createElement(\"button\");\n\t\tlet progressBar = document.createElement(\"progress\");\n\t\tlet outcome = document.createElement(\"span\");\n\t\tbackBtn.innerText = \"<-\";\n\t\tpageTitle.innerText = await availableAPIs.lookupLocale(\"CREATE_IMAGE\");\n\t\tselectedFileLabel.innerText = await availableAPIs.lookupLocale(\"SELECT_FILE_PROMPT\");\n\t\tselectedFileButton.innerText = await availableAPIs.lookupLocale(\"SAVE_BTN\");\n\t\tcreateBtn.innerText = await availableAPIs.lookupLocale(\"CREATE_IMAGE\");\n\t\toutcome.innerText = await availableAPIs.lookupLocale(\"EMPTY_STATUSBAR\");\n\t\tprogressBar.hidden = true;\n\t\tdocument.body.appendChild(backBtn);\n\t\tdocument.body.appendChild(pageTitle);\n\t\tdocument.body.appendChild(document.createElement(\"hr\"));\n\t\tdocument.body.appendChild(selectedFileLabel);\n\t\tdocument.body.appendChild(selectedFile);\n\t\tdocument.body.appendChild(selectedFileButton);\n\t\tdocument.body.appendChild(document.createElement(\"hr\"));\n\t\tdocument.body.appendChild(createBtn);\n\t\tdocument.body.appendChild(progressBar);\n\t\tdocument.body.appendChild(outcome);\n\n\t\tbackBtn.onclick = mainPage;\n\t\tselectedFileButton.onclick = async function() {\n\t\t\tlet ipcPipe = await availableAPIs.createPipe();\n\t\t\tawait availableAPIs.windowVisibility(false);\n\t\t\tawait availableAPIs.startTask({ file: (await availableAPIs.getSystemMount()) + \"/apps/filePicker.js\", argPassed: [ipcPipe, \"save\"] });\n\t\t\tlet result = await availableAPIs.listenToPipe(ipcPipe);\n\t\t\tawait availableAPIs.closePipe(ipcPipe);\n\t\t\tawait availableAPIs.windowVisibility(true);\n\t\t\tif (result.success) selectedFile.value = result.selected;\n\t\t}\n\n\t\tcreateBtn.onclick = async function() {\n\t\t\tbackBtn.disabled = true;\n\t\t\tselectedFile.disabled = true;\n\t\t\tselectedFileButton.disabled = true;\n\t\t\tcreateBtn.disabled = true;\n\t\t\tprogressBar.hidden = false;\n\t\t\toutcome.hidden = true;\n\t\t\tprogressBar.max = 0;\n\t\t\tprogressBar.value = 0;\n\t\t\tawait availableAPIs.closeability(false);\n\n\t\t\tasync function stopProduction(oc) {\n\t\t\t\tbackBtn.disabled = false;\n\t\t\t\tselectedFile.disabled = false;\n\t\t\t\tselectedFileButton.disabled = false;\n\t\t\t\tcreateBtn.disabled = false;\n\t\t\t\tprogressBar.hidden = true;\n\t\t\t\toutcome.hidden = false;\n\t\t\t\toutcome.innerText = oc;\n\t\t\t\tawait availableAPIs.closeability(true);\n\t\t\t}\n\n\t\t\tif (selectedFile.value == \"\") return stopProduction(await availableAPIs.lookupLocale(\"FILE_NOT_SPECIFIED\"));\n\t\t\tlet image = { metadata: {}, data: {} };\n\t\t\tlet subImage = [];\n\t\t\ttry { subImage = await availableAPIs.lldaList(); progressBar.max = subImage.length;\n\t\t\t\t} catch { return stopProduction(await availableAPIs.lookupLocale(\"LISTING_PARTITIONS_FAILED\")); }\n\t\t\tfor (let partition of subImage) try { image.metadata[partition] = await availableAPIs.lldaRead({ partition }); progressBar.value++;\n\t\t\t\t} catch { return stopProduction((await availableAPIs.lookupLocale(\"READING_PARTITION_FAILED\")).replace(\"%s\", partition)); }\n\t\t\ttry { subImage = await availableAPIs.lldaIDBList(); progressBar.max += subImage.length;\n\t\t\t\t} catch { return stopProduction(await availableAPIs.lookupLocale(\"LISTING_DATA_FAILED\")); } \n\t\t\tfor (let dataPart of subImage) try { image.data[dataPart] = await availableAPIs.lldaIDBRead({ key: dataPart }); progressBar.value++;\n\t\t\t\t} catch { return stopProduction(await availableAPIs.lookupLocale(\"READING_DATA_FAILED\")); }\n\t\t\tsubImage = [];\n\t\t\ttry { await availableAPIs.fs_write({ path: selectedFile.value, data: JSON.stringify(image) });\n\t\t\t\t} catch { return stopProduction(await availableAPIs.lookupLocale(\"WRITING_IMAGE_FAILED\")); }\n\t\t\tstopProduction(await availableAPIs.lookupLocale(\"SUCCESSFUL_OP\"));\n\t\t}\n\t}\n\n\tasync function restorePage() {\n\t\tdocument.body.innerText = \"\";\n\t\tlet backBtn = document.createElement(\"button\");\n\t\tlet pageTitle = document.createElement(\"span\");\n\t\tlet selectedFileLabel = document.createElement(\"label\");\n\t\tlet selectedFile = document.createElement(\"input\");\n\t\tlet selectedFileButton = document.createElement(\"button\");\n\t\tlet rebootOnRestore = document.createElement(\"input\");\n\t\tlet rebootOnRestoreLabel = document.createElement(\"label\");\n\t\tlet mergeFlag = document.createElement(\"input\");\n\t\tlet mergeFlagLabel = document.createElement(\"label\");\n\t\tlet restoreBtn = document.createElement(\"button\");\n\t\tlet progressBar = document.createElement(\"progress\");\n\t\tlet outcome = document.createElement(\"span\");\n\t\tbackBtn.innerText = \"<-\";\n\t\tpageTitle.innerText = await availableAPIs.lookupLocale(\"RESTORE_IMAGE\");\n\t\tselectedFileLabel.innerText = await availableAPIs.lookupLocale(\"SELECT_FILE_PROMPT\");\n\t\tselectedFileButton.innerText = await availableAPIs.lookupLocale(\"LOAD_BTN\");\n\t\trestoreBtn.innerText = await availableAPIs.lookupLocale(\"RESTORE_IMAGE\");\n\t\trebootOnRestoreLabel.innerText = await availableAPIs.lookupLocale(\"REBOOT_ON_RESTORE\");\n\t\tmergeFlagLabel.innerText = await availableAPIs.lookupLocale(\"MERGE_STATES\");\n\t\toutcome.innerText = await availableAPIs.lookupLocale(\"EMPTY_STATUSBAR\");\n\t\trebootOnRestore.type = \"checkbox\";\n\t\tmergeFlag.type = \"checkbox\";\n\t\trebootOnRestore.id = \"rebootOnRestore\";\n\t\tmergeFlag.id = \"mergeFlag\";\n\t\trebootOnRestoreLabel.htmlFor = \"rebootOnRestore\";\n\t\tmergeFlagLabel.htmlFor = \"mergeFlag\";\n\t\tprogressBar.hidden = true;\n\t\tdocument.body.appendChild(backBtn);\n\t\tdocument.body.appendChild(pageTitle);\n\t\tdocument.body.appendChild(document.createElement(\"hr\"));\n\t\tdocument.body.appendChild(selectedFileLabel);\n\t\tdocument.body.appendChild(selectedFile);\n\t\tdocument.body.appendChild(selectedFileButton);\n\t\tdocument.body.appendChild(document.createElement(\"br\"));\n\t\tdocument.body.appendChild(rebootOnRestore);\n\t\tdocument.body.appendChild(rebootOnRestoreLabel);\n\t\tdocument.body.appendChild(document.createElement(\"br\"));\n\t\tdocument.body.appendChild(mergeFlag);\n\t\tdocument.body.appendChild(mergeFlagLabel);\n\t\tdocument.body.appendChild(document.createElement(\"hr\"));\n\t\tdocument.body.appendChild(restoreBtn);\n\t\tdocument.body.appendChild(progressBar);\n\t\tdocument.body.appendChild(outcome);\n\n\t\tbackBtn.onclick = mainPage;\n\t\tselectedFileButton.onclick = async function() {\n\t\t\tlet ipcPipe = await availableAPIs.createPipe();\n\t\t\tawait availableAPIs.windowVisibility(false);\n\t\t\tawait availableAPIs.startTask({ file: (await availableAPIs.getSystemMount()) + \"/apps/filePicker.js\", argPassed: [ipcPipe, \"load\"] });\n\t\t\tlet result = await availableAPIs.listenToPipe(ipcPipe);\n\t\t\tawait availableAPIs.closePipe(ipcPipe);\n\t\t\tawait availableAPIs.windowVisibility(true);\n\t\t\tif (result.success) selectedFile.value = result.selected;\n\t\t}\n\n\t\trestoreBtn.onclick = async function() {\n\t\t\tbackBtn.disabled = true;\n\t\t\tselectedFile.disabled = true;\n\t\t\tselectedFileButton.disabled = true;\n\t\t\trestoreBtn.disabled = true;\n\t\t\trebootOnRestore.disabled = true;\n\t\t\tmergeFlag.disabled = true;\n\t\t\toutcome.hidden = true;\n\t\t\tprogressBar.hidden = false;\n\t\t\tprogressBar.max = 0;\n\t\t\tprogressBar.value = 0;\n\t\t\tawait availableAPIs.closeability(false);\n\n\t\t\tasync function stopProduction(oc) {\n\t\t\t\tbackBtn.disabled = false;\n\t\t\t\tselectedFile.disabled = false;\n\t\t\t\tselectedFileButton.disabled = false;\n\t\t\t\trestoreBtn.disabled = false;\n\t\t\t\trebootOnRestore.disabled = false;\n\t\t\t\tmergeFlag.disabled = false;\n\t\t\t\toutcome.hidden = false;\n\t\t\t\tprogressBar.hidden = true;\n\t\t\t\toutcome.innerText = oc;\n\t\t\t\tawait availableAPIs.closeability(true);\n\t\t\t}\n\n\t\t\tif (selectedFile.value == \"\") return stopProduction(await availableAPIs.lookupLocale(\"FILE_NOT_SPECIFIED\"));\n\t\t\ttry { await availableAPIs.lldaList();\n\t\t\t\t} catch { await availableAPIs.lldaInitPartitions(); }\n\n\t\t\tlet image;\n\t\t\ttry { image = JSON.parse(await availableAPIs.fs_read({ path: selectedFile.value }));\n\t\t\t\t} catch { return stopProduction(await availableAPIs.lookupLocale(\"READING_IMAGE_FAILED\")); }\n\n\t\t\tprogressBar.max += Object.keys(image.metadata).length + Object.keys(image.data).length;\n\t\t\tfor (let partition in image.metadata) try { await availableAPIs.lldaWrite({ partition, data: image.metadata[partition] }); progressBar.value++;\n\t\t\t\t} catch { return stopProduction((await availableAPIs.lookupLocale(\"WRITING_PARTITION_FAILED\")).replace(\"%s\", partition)); }\n\t\t\tfor (let dataPart in image.data) try { await availableAPIs.lldaIDBWrite({ key: dataPart, value: image.data[dataPart] }); progressBar.value++;\n\t\t\t\t} catch { return stopProduction(await availableAPIs.lookupLocale(\"WRITING_DATA_FAILED\")); }\n\t\t\t\n\t\t\tif (!mergeFlag.checked) {\n\t\t\t\tlet currentSubImage = [];\n\t\t\t\ttry { currentSubImage = (await availableAPIs.lldaList()).filter(a => !Object.keys(image.metadata).includes(a)); progressBar.max += currentSubImage.length;\n\t\t\t\t\t} catch { return stopProduction(await availableAPIs.lookupLocale(\"LISTING_PARTITIONS_FAILED\")); }\n\t\t\t\tfor (let partition of currentSubImage) try { await availableAPIs.lldaRemove({ partition }); progressBar.value++;\n\t\t\t\t\t} catch { return stopProduction((await availableAPIs.lookupLocale(\"DELETING_PARTITION_FAILED\")).replace(\"%s\", partition)); }\n\t\t\t\t\n\t\t\t\ttry { currentSubImage = (await availableAPIs.lldaIDBList()).filter(a => !Object.keys(image.data).includes(a)); progressBar.max += currentSubImage.length;\n\t\t\t\t\t} catch { return stopProduction(await availableAPIs.lookupLocale(\"LISTING_DATA_FAILED\")); }\n\t\t\t\tfor (let dataPart of currentSubImage) try { await availableAPIs.lldaIDBRemove({ key: dataPart }); progressBar.value++;\n\t\t\t\t\t} catch { return stopProduction(await availableAPIs.lookupLocale(\"DELETING_DATA_FAILED\")); }\n\t\t\t\tcurrentSubImage = [];\n\t\t\t}\n\n\t\t\ttry { await availableAPIs.lldaIDBSync();\n\t\t\t} catch {}\n\n\t\t\tif (rebootOnRestore.checked) try { await availableAPIs.shutdown({ isReboot: true });\n\t\t\t\t} catch { return stopProduction(await availableAPIs.lookupLocale(\"SHUTTING_DOWN_FAILED\")); }\n\t\t\tstopProduction(await availableAPIs.lookupLocale(\"SUCCESSFUL_OP\"));\n\t\t}\n\t}\n\tmainPage();\n}\naddEventListener(\"signal\", async function(e) {\n\tif (e.detail == 15) await window.availableAPIs.terminate();\n}); null;","a348d23b09dda6c6d80775d1bf0a01514a5deccbdd919cad5adaf0d42e5bd33bba5cd99ce3d85125d230ee102616d338d966764721c86f7fa1bb6674ec4c90f2":"// =====BEGIN MANIFEST=====\n// link: lrn:SYSTEM_SECURITY_TITLE\n// signer: automaticSigner\n// allow: GET_USER_INFO, USER_INFO_OTHERS, SENSITIVE_USER_INFO_OTHERS, SET_USER_INFO, GET_LOCALE, GET_THEME, CSP_OPERATIONS, SET_SECURITY_CHECKS, FS_LIST_PARTITIONS, FS_READ, FS_REMOVE, FS_WRITE, FS_CHANGE_PERMISSION, START_TASK, FS_BYPASS_PERMISSIONS, MANAGE_TOKENS, SWITCH_USERS_AUTOMATICALLY, ELEVATE_PRIVILEGES, GET_USER_LIST\n// signature: 3ad181ccef0a38efbb340fcdc22d5c92dd1736e7c511616f7038792157abfc9f472e6d7f00a5aa96fb34f027fa88c139466642b5b103aaf00d009b019e778998\n// =====END MANIFEST=====\n(async function() {\n\t// @pcos-app-mode isolatable\n\tawait availableAPIs.windowTitleSet(await availableAPIs.lookupLocale(\"SYSTEM_SECURITY_TITLE\"));\n\tlet privileges = await availableAPIs.getPrivileges();\n\tlet checklist = [ \"GET_USER_INFO\", \"USER_INFO_OTHERS\", \"SENSITIVE_USER_INFO_OTHERS\", \"SET_USER_INFO\", \"FS_LIST_PARTITIONS\", \"FS_READ\", \"FS_REMOVE\", \"FS_WRITE\", \"FS_CHANGE_PERMISSION\", \"START_TASK\", \"FS_BYPASS_PERMISSIONS\", \"MANAGE_TOKENS\", \"SWITCH_USERS_AUTOMATICALLY\", \"ELEVATE_PRIVILEGES\", \"GET_USER_LIST\" ];\n\tdocument.body.style.fontFamily = \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\";\n\tif (await availableAPIs.isDarkThemed()) document.body.style.color = \"white\";\n\tif (!checklist.every(p => privileges.includes(p))) {\n\t\tdocument.body.innerText = await availableAPIs.lookupLocale(\"SYSTEM_SECURITY_DENY\");\n\t\tlet currentToken = await availableAPIs.getProcessToken();\n\t\tlet newToken = await availableAPIs.consentGetToken({\n\t\t\tintent: await availableAPIs.lookupLocale(\"SYSTEM_SECURITY_INTENT\"),\n\t\t\tname: await availableAPIs.lookupLocale(\"SYSTEM_SECURITY_TITLE\"),\n\t\t});\n\t\tif (!newToken) return;\n\t\tawait availableAPIs.setProcessToken(newToken);\n\t\tawait availableAPIs.revokeToken(currentToken);\n\t\tprivileges = await availableAPIs.getPrivileges();\n\t\tif (!checklist.every(p => privileges.includes(p))) return;\n\t}\n\tdocument.body.innerText = \"\";\n\tlet pageHeader = document.createElement(\"b\");\n\tlet actionSpecificField = document.createElement(\"div\");\n\tdocument.body.appendChild(pageHeader);\n\tdocument.body.appendChild(document.createElement(\"hr\"));\n\tdocument.body.appendChild(actionSpecificField);\n\tlet username, userData;\n\tasync function main() {\n\t\tusername = null;\n\t\tuserData = null;\n\t\tactionSpecificField.innerText = \"\";\n\t\tlet usernameField = document.createElement(\"input\");\n\t\tlet editButton = document.createElement(\"button\");\n\t\tpageHeader.innerText = await availableAPIs.lookupLocale(\"USERNAME_PROMPT\");\n\t\teditButton.innerText = await availableAPIs.lookupLocale(\"EDIT\");\n\t\tusernameField.placeholder = await availableAPIs.lookupLocale(\"USERNAME\");\n\t\tactionSpecificField.appendChild(usernameField);\n\t\tactionSpecificField.appendChild(editButton);\n\t\tactionSpecificField.appendChild(document.createElement(\"hr\"));\n\t\tfor (let user of await availableAPIs.getUsers()) {\n\t\t\tlet userButton = document.createElement(\"button\");\n\t\t\tuserButton.innerText = user;\n\t\t\tuserButton.addEventListener(\"click\", async function() {\n\t\t\t\tusernameField.value = user;\n\t\t\t\teditButton.click();\n\t\t\t});\n\t\t\tactionSpecificField.appendChild(userButton);\n\t\t}\n\t\teditButton.addEventListener(\"click\", async function() {\n\t\t\tif (!usernameField.value) return;\n\t\t\tusername = usernameField.value;\n\t\t\tuserData = await availableAPIs.getUserInfo({ desiredUser: username, sensitive: true });\n\t\t\tif (!userData) {\n\t\t\t\tuserData = {\n\t\t\t\t\tgroups: [username],\n\t\t\t\t\thomeDirectory: await availableAPIs.getSystemMount() + \"/home/\" + username,\n\t\t\t\t\tsecurityChecks: [],\n\t\t\t\t\tblankPrivileges: false\n\t\t\t\t};\n\t\t\t\tawait availableAPIs.setUserInfo({ desiredUser: username, info: userData });\n\t\t\t}\n\t\t\tuserEditPage();\n\t\t});\n\t}\n\n\tasync function userEditPage() {\n\t\tactionSpecificField.innerText = \"\";\n\t\tpageHeader.innerText = username;\n\t\tlet homeDirectoryChanger = document.createElement(\"button\");\n\t\tlet securityChecksButton = document.createElement(\"button\");\n\t\tlet groupChanger = document.createElement(\"button\");\n\t\tlet privilegeSetButton = document.createElement(\"button\");\n\t\tlet removeButton = document.createElement(\"button\");\n\t\tlet leaveButton = document.createElement(\"button\");\n\t\thomeDirectoryChanger.innerText = await availableAPIs.lookupLocale(\"USER_HOMEDIR\");\n\t\tsecurityChecksButton.innerText = await availableAPIs.lookupLocale(\"PERSONAL_SECURITY_TITLE\");\n\t\tgroupChanger.innerText = await availableAPIs.lookupLocale(\"USER_GROUPS\");\n\t\tprivilegeSetButton.innerText = await availableAPIs.lookupLocale(\"USER_EXT_PRIVILEGES\");\n\t\tremoveButton.innerText = await availableAPIs.lookupLocale(\"REMOVE_BTN\");\n\t\tleaveButton.innerText = await availableAPIs.lookupLocale(\"EXIT\");\n\t\thomeDirectoryChanger.addEventListener(\"click\", changeHomeDir);\n\t\tsecurityChecksButton.addEventListener(\"click\", async function() {\n\t\t\tawait availableAPIs.switchUser(username);\n\t\t\tawait availableAPIs.startTask({\n\t\t\t\tfile: await availableAPIs.getSystemMount() + \"/apps/personalSecurity.js\",\n\t\t\t\targPassed: []\n\t\t\t});\n\t\t\tawait availableAPIs.terminate();\n\t\t});\n\t\tgroupChanger.addEventListener(\"click\", changeGroups);\n\t\tprivilegeSetButton.addEventListener(\"click\", privilegeSet);\n\t\tremoveButton.addEventListener(\"click\", removeUser);\n\t\tleaveButton.addEventListener(\"click\", main);\n\t\tactionSpecificField.appendChild(homeDirectoryChanger);\n\t\tactionSpecificField.appendChild(securityChecksButton);\n\t\tactionSpecificField.appendChild(groupChanger);\n\t\tactionSpecificField.appendChild(privilegeSetButton);\n\t\tactionSpecificField.appendChild(removeButton);\n\t\tactionSpecificField.appendChild(leaveButton);\n\t}\n\n\tasync function changeHomeDir() {\n\t\tactionSpecificField.innerText = \"\";\n\t\tpageHeader.innerText = \"[\" + username + \"] \" + await availableAPIs.lookupLocale(\"USER_HOMEDIR\");\n\t\tlet backButton = document.createElement(\"button\");\n\t\tlet homeDirectoryField = document.createElement(\"input\");\n\t\tlet changeButton = document.createElement(\"button\");\n\t\tlet createButton = document.createElement(\"button\");\n\t\tlet status = document.createElement(\"div\");\n\t\tbackButton.innerText = \"<-\";\n\t\tchangeButton.innerText = await availableAPIs.lookupLocale(\"EDIT\");\n\t\tcreateButton.innerText = await availableAPIs.lookupLocale(\"CREATE_HD\");\n\t\thomeDirectoryField.value = userData.homeDirectory;\n\t\tbackButton.addEventListener(\"click\", userEditPage);\n\t\tchangeButton.addEventListener(\"click\", async function() {\n\t\t\tif (!homeDirectoryField.value) return;\n\t\t\tuserData.homeDirectory = homeDirectoryField.value;\n\t\t\tawait availableAPIs.setUserInfo({desiredUser: username, info: userData});\n\t\t\tuserEditPage();\n\t\t});\n\t\tcreateButton.addEventListener(\"click\", async function() {\n\t\t\ttry {\n\t\t\t\tawait mkrecursive(homeDirectoryField.value);\n\t\t\t\tawait availableAPIs.fs_chown({ path: homeDirectoryField.value, newUser: username });\n\t\t\t\tawait availableAPIs.fs_chgrp({ path: homeDirectoryField.value, newGrp: userData.groups[0] || username });\n\t\t\t\tawait availableAPIs.fs_chmod({ path: homeDirectoryField.value, newPermissions: \"rx\" });\n\t\t\t\tstatus.innerText = await availableAPIs.lookupLocale(\"CREATING_HD_OK\");\n\t\t\t} catch {\n\t\t\t\tstatus.innerText = await availableAPIs.lookupLocale(\"CREATING_HD_FAIL\");\n\t\t\t}\n\t\t});\n\t\tactionSpecificField.appendChild(backButton);\n\t\tactionSpecificField.appendChild(homeDirectoryField);\n\t\tactionSpecificField.appendChild(changeButton);\n\t\tactionSpecificField.appendChild(createButton);\n\t\tactionSpecificField.appendChild(status);\n\t}\n\n\tasync function changeGroups() {\n\t\tactionSpecificField.innerText = \"\";\n\t\tpageHeader.innerText = \"[\" + username + \"] \" + await availableAPIs.lookupLocale(\"USER_GROUPS\");\n\n\t\tlet backButton = document.createElement(\"button\");\n\t\tlet addGroup = document.createElement(\"button\");\n\t\tbackButton.innerText = \"<-\";\n\t\taddGroup.innerText = await availableAPIs.lookupLocale(\"ADD_BTN\");\n\n\t\tbackButton.addEventListener(\"click\", userEditPage);\n\t\taddGroup.addEventListener(\"click\", addGroupAction);\n\t\tactionSpecificField.appendChild(backButton);\n\t\tactionSpecificField.appendChild(addGroup);\n\n\t\tfor (let group in userData.groups) {\n\t\t\tlet groupInfo = userData.groups[group];\n\t\t\tlet groupDiv = document.createElement(\"div\");\n\t\t\tgroupDiv.style.display = \"flex\";\n\t\t\tlet groupNameDiv = document.createElement(\"div\");\n\t\t\tgroupNameDiv.style.flex = 100;\n\t\t\tlet groupBtns = document.createElement(\"div\");\n\t\t\tgroupNameDiv.innerText = groupInfo;\n\t\t\tlet btnUp = document.createElement(\"button\");\n\t\t\tlet btnDown = document.createElement(\"button\");\n\t\t\tlet btnDelete = document.createElement(\"button\");\n\t\t\tbtnUp.innerText = \"/\\\\\";\n\t\t\tbtnUp.disabled = group == 0;\n\t\t\tbtnDown.disabled = group == userData.groups.length - 1;\n\t\t\tbtnDown.innerText = \"\\\\/\";\n\t\t\tbtnDelete.innerText = \"x\";\n\t\t\tgroupBtns.appendChild(btnUp);\n\t\t\tgroupBtns.appendChild(btnDown);\n\t\t\tgroupBtns.appendChild(btnDelete);\n\t\t\tgroupDiv.appendChild(groupNameDiv);\n\t\t\tgroupDiv.appendChild(groupBtns);\n\t\t\tbtnDelete.addEventListener(\"click\", async function() {\n\t\t\t\tuserData.groups.splice(group, 1);\n\t\t\t\tawait availableAPIs.setUserInfo({desiredUser: username, info: userData});\n\t\t\t\tchangeGroups();\n\t\t\t});\n\t\t\tactionSpecificField.appendChild(groupDiv);\n\t\t\tbtnUp.addEventListener(\"click\", async function() {\n\t\t\t\tuserData.groups.splice(group, 1);\n\t\t\t\tuserData.groups.splice(group - 1, 0, groupInfo);\n\t\t\t\tawait availableAPIs.setUserInfo({desiredUser: username, info: userData});\n\t\t\t\tchangeGroups();\n\t\t\t});\n\t\t\tbtnDown.addEventListener(\"click\", async function() {\n\t\t\t\tuserData.groups.splice(group, 1);\n\t\t\t\tuserData.groups.splice(group - 1 + 2, 0, groupInfo);\n\t\t\t\tawait availableAPIs.setUserInfo({desiredUser: username, info: userData});\n\t\t\t\tchangeGroups();\n\t\t\t});\n\t\t}\n\t}\n\n\tasync function addGroupAction() {\n\t\tactionSpecificField.innerText = \"\";\n\t\tlet backButton = document.createElement(\"button\");\n\t\tlet groupNameField = document.createElement(\"input\");\n\t\tlet createButton = document.createElement(\"button\");\n\t\tbackButton.innerText = \"<-\";\n\t\tcreateButton.innerText = await availableAPIs.lookupLocale(\"ADD_BTN\");\n\t\tbackButton.addEventListener(\"click\", changeGroups);\n\t\tcreateButton.addEventListener(\"click\", async function() {\n\t\t\tuserData.groups.push(groupNameField.value);\n\t\t\tawait availableAPIs.setUserInfo({desiredUser: username, info: userData});\n\t\t\tchangeGroups();\n\t\t});\n\t\tactionSpecificField.appendChild(backButton);\n\t\tactionSpecificField.appendChild(groupNameField);\n\t\tactionSpecificField.appendChild(createButton);\n\t}\n\n\tasync function removeUser() {\n\t\tactionSpecificField.innerText = \"\";\n\t\tpageHeader.innerText = \"[\" + username + \"] \" + await availableAPIs.lookupLocale(\"REMOVE_BTN\");\n\t\tlet backButton = document.createElement(\"button\");\n\t\tlet removeWithHomedir = document.createElement(\"button\");\n\t\tlet removeAlone = document.createElement(\"button\");\n\t\tbackButton.innerText = \"<-\";\n\t\tremoveWithHomedir.innerText = await availableAPIs.lookupLocale(\"REMOVE_USER_WITH_HD\");\n\t\tremoveAlone.innerText = await availableAPIs.lookupLocale(\"REMOVE_BTN\");\n\t\tbackButton.addEventListener(\"click\", userEditPage);\n\t\tremoveWithHomedir.addEventListener(\"click\", async function() {\n\t\t\trecursiveRemove(userData.homeDirectory);\n\t\t\tawait availableAPIs.setUserInfo({\n\t\t\t\tdesiredUser: username,\n\t\t\t\tinfo: undefined\n\t\t\t});\n\t\t\tmain();\n\t\t});\n\t\tremoveAlone.addEventListener(\"click\", async function() {\n\t\t\tawait availableAPIs.setUserInfo({\n\t\t\t\tdesiredUser: username,\n\t\t\t\tinfo: undefined\n\t\t\t});\n\t\t\tmain();\n\t\t});\n\t\tactionSpecificField.appendChild(backButton);\n\t\tactionSpecificField.appendChild(removeWithHomedir);\n\t\tactionSpecificField.appendChild(removeAlone);\n\t}\n\n\tasync function privilegeSet() {\n\t\tactionSpecificField.innerText = \"\";\n\t\tpageHeader.innerText = \"[\" + username + \"] \" + await availableAPIs.lookupLocale(\"USER_EXT_PRIVILEGES\");\n\n\t\tlet backButton = document.createElement(\"button\");\n\t\tlet addPrivilege = document.createElement(\"button\");\n\t\tlet removeAll = document.createElement(\"button\");\n\t\tlet warning = document.createElement(\"b\");\n\t\tlet blankPrivsCheck = document.createElement(\"input\");\n\t\tlet blankPrivsCheckLabel = document.createElement(\"label\");\n\t\tbackButton.innerText = \"<-\";\n\t\taddPrivilege.innerText = await availableAPIs.lookupLocale(\"ADD_BTN\");\n\t\tremoveAll.innerText = await availableAPIs.lookupLocale(\"REMOVE_BTN\");\n\t\tblankPrivsCheck.type = \"checkbox\";\n\t\tblankPrivsCheck.id = \"blankPrivCheck\";\n\t\tblankPrivsCheckLabel.innerText = await availableAPIs.lookupLocale(\"BLANK_PRIVILEGE_FLAG\");\n\t\tblankPrivsCheckLabel.htmlFor = \"blankPrivCheck\";\n\t\tblankPrivsCheck.checked = userData.blankPrivileges;\n\t\twarning.innerText = await availableAPIs.lookupLocale(\"WARNING_PRIVILEGES\");\n\n\t\tbackButton.addEventListener(\"click\", userEditPage);\n\t\taddPrivilege.addEventListener(\"click\", addPrivilegeAction);\n\t\tremoveAll.addEventListener(\"click\", async function() {\n\t\t\tuserData.additionalPrivilegeSet = undefined;\n\t\t\tawait availableAPIs.setUserInfo({desiredUser: username, info: userData});\n\t\t\tprivilegeSet();\n\t\t})\n\t\tblankPrivsCheck.addEventListener(\"change\", async function() {\n\t\t\tuserData.blankPrivileges = blankPrivsCheck.checked;\n\t\t\tawait availableAPIs.setUserInfo({desiredUser: username, info: userData});\n\t\t})\n\t\tactionSpecificField.appendChild(backButton);\n\t\tactionSpecificField.appendChild(addPrivilege);\n\t\tactionSpecificField.appendChild(removeAll);\n\t\tactionSpecificField.appendChild(blankPrivsCheck);\n\t\tactionSpecificField.appendChild(blankPrivsCheckLabel);\n\t\tactionSpecificField.appendChild(document.createElement(\"br\"));\n\t\tactionSpecificField.appendChild(warning);\n\n\t\tif (!userData.additionalPrivilegeSet) userData.additionalPrivilegeSet = [];\n\t\tfor (let privilege in userData.additionalPrivilegeSet) {\n\t\t\tlet privilegeInfo = userData.additionalPrivilegeSet[privilege];\n\t\t\tlet privilegeDiv = document.createElement(\"div\");\n\t\t\tprivilegeDiv.style.display = \"flex\";\n\t\t\tlet privilegeNameDiv = document.createElement(\"div\");\n\t\t\tprivilegeNameDiv.style.flex = 100;\n\t\t\tlet privilegeBtns = document.createElement(\"div\");\n\t\t\tprivilegeNameDiv.innerText = privilegeInfo;\n\t\t\tlet btnUp = document.createElement(\"button\");\n\t\t\tlet btnDown = document.createElement(\"button\");\n\t\t\tlet btnDelete = document.createElement(\"button\");\n\t\t\tbtnUp.innerText = \"/\\\\\";\n\t\t\tbtnUp.disabled = privilege == 0;\n\t\t\tbtnDown.disabled = privilege == userData.additionalPrivilegeSet.length - 1;\n\t\t\tbtnDown.innerText = \"\\\\/\";\n\t\t\tbtnDelete.innerText = \"x\";\n\t\t\tprivilegeBtns.appendChild(btnUp);\n\t\t\tprivilegeBtns.appendChild(btnDown);\n\t\t\tprivilegeBtns.appendChild(btnDelete);\n\t\t\tprivilegeDiv.appendChild(privilegeNameDiv);\n\t\t\tprivilegeDiv.appendChild(privilegeBtns);\n\t\t\tbtnDelete.addEventListener(\"click\", async function() {\n\t\t\t\tuserData.additionalPrivilegeSet.splice(privilege, 1);\n\t\t\t\tawait availableAPIs.setUserInfo({desiredUser: username, info: userData});\n\t\t\t\tprivilegeSet();\n\t\t\t});\n\t\t\tactionSpecificField.appendChild(privilegeDiv);\n\t\t\tbtnUp.addEventListener(\"click\", async function() {\n\t\t\t\tuserData.additionalPrivilegeSet.splice(privilege, 1);\n\t\t\t\tuserData.additionalPrivilegeSet.splice(privilege - 1, 0, privilegeInfo);\n\t\t\t\tawait availableAPIs.setUserInfo({desiredUser: username, info: userData});\n\t\t\t\tprivilegeSet();\n\t\t\t});\n\t\t\tbtnDown.addEventListener(\"click\", async function() {\n\t\t\t\tuserData.additionalPrivilegeSet.splice(privilege, 1);\n\t\t\t\tuserData.additionalPrivilegeSet.splice(privilege - 1 + 2, 0, privilegeInfo);\n\t\t\t\tawait availableAPIs.setUserInfo({desiredUser: username, info: userData});\n\t\t\t\tprivilegeSet();\n\t\t\t});\n\t\t}\n\t}\n\n\tasync function addPrivilegeAction() {\n\t\tactionSpecificField.innerText = \"\";\n\t\tlet backButton = document.createElement(\"button\");\n\t\tlet privilegeNameField = document.createElement(\"input\");\n\t\tlet createButton = document.createElement(\"button\");\n\t\tbackButton.innerText = \"<-\";\n\t\tcreateButton.innerText = await availableAPIs.lookupLocale(\"ADD_BTN\");\n\t\tbackButton.addEventListener(\"click\", privilegeSet);\n\t\tcreateButton.addEventListener(\"click\", async function() {\n\t\t\tif (!userData.additionalPrivilegeSet) userData.additionalPrivilegeSet = [];\n\t\t\tuserData.additionalPrivilegeSet.push(...(privilegeNameField.value.match(/[A-Z_]+/g) || []));\n\t\t\tuserData.additionalPrivilegeSet = Array.from(new Set(userData.additionalPrivilegeSet));\n\t\t\tawait availableAPIs.setUserInfo({desiredUser: username, info: userData});\n\t\t\tprivilegeSet();\n\t\t});\n\t\tactionSpecificField.appendChild(backButton);\n\t\tactionSpecificField.appendChild(privilegeNameField);\n\t\tactionSpecificField.appendChild(createButton);\n\t}\n\n\tasync function mkrecursive(dir) {\n\t\tlet slices = dir.split(\"/\");\n\t\tfor (let i = 2; i <= slices.length; i++) {\n\t\t\tlet browse = await availableAPIs.fs_ls({ path: slices.slice(0, i - 1).join(\"/\") });\n\t\t\tif (!browse.includes(slices[i - 1])) await availableAPIs.fs_mkdir({ path: slices.slice(0, i).join(\"/\") });\n\t\t}\n\t}\n\n\tasync function recursiveRemove(path) {\n\t\tlet dirList = await availableAPIs.fs_ls({ path });\n\t\tfor (let fileIndex in dirList) {\n\t\t\tlet file = dirList[fileIndex];\n\t\t\tif (await availableAPIs.fs_isDirectory({ path: path + \"/\" + file })) await recursiveRemove(path + \"/\" + file);\n\t\t\telse await availableAPIs.fs_rm({ path: path + \"/\" + file });\n\t\t}\n\t\tawait availableAPIs.fs_rm({ path });\n\t}\n\tmain();\n})();\naddEventListener(\"signal\", async function(e) {\n\tif (e.detail == 15) await window.availableAPIs.terminate();\n}); null;","bcf3591de7d0848bfa6f56596c24275922af2060d1fa067a3a053e8d32c83e705b801a95d170b71f7a5a289334ddc02b4a89fb0e5258589222ddfc65c72ba154":"// =====BEGIN MANIFEST=====\n// link: lrn:TASK_MANAGER\n// signer: automaticSigner\n// fnName: taskMgrInstaller\n// allow: LIST_TASKS, SIGNAL_TASK, GET_LOCALE, GET_THEME, TASK_BYPASS_PERMISSIONS\n// signature: 0b29ab1614e8bcf80571b6ae25f10ee9783ba88a8ea40fd45c6d8ee9bd8a1594baf00bd05e06e70dc69b9afd6f7be296c412db0dcc9ce50b75aea62c42f68c85\n// =====END MANIFEST=====\n(async function() {\n\t// @pcos-app-mode isolatable\n\tawait availableAPIs.windowTitleSet(await availableAPIs.lookupLocale(\"TASK_MANAGER\"));\n\tlet privileges = await availableAPIs.getPrivileges();\n\tlet checklist = [ \"LIST_TASKS\", \"SIGNAL_TASK\" ];\n\tdocument.body.style.fontFamily = \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\";\n\tif (await availableAPIs.isDarkThemed()) document.body.style.color = \"white\";\n\tif (!checklist.every(p => privileges.includes(p))) {\n\t\tdocument.body.innerText = (await availableAPIs.lookupLocale(\"TMGR_PERMISSION\")).replace(\"%s\", checklist.join(\", \"));\n\t\treturn;\n\t}\n\tlet styleElement = document.createElement(\"style\");\n\tstyleElement.innerText = `th, td { border: 1px solid black; }\n\ttable { overflow: scroll; min-width: 100%; width: max-content; }`;\n\tdocument.head.appendChild(styleElement);\n\tlet table = document.createElement(\"table\");\n\tlet thead = document.createElement(\"thead\");\n\tlet theadRow = document.createElement(\"tr\");\n\tlet thBasename = document.createElement(\"th\");\n\tlet thUser = document.createElement(\"th\");\n\tlet thTerminate = document.createElement(\"th\");\n\tlet thFP = document.createElement(\"th\");\n\tlet thArgs = document.createElement(\"th\");\n\tlet tbody = document.createElement(\"tbody\");\n\tthBasename.innerText = await availableAPIs.lookupLocale(\"BASENAME_TASK\");\n\tthUser.innerText = await availableAPIs.lookupLocale(\"USER_TASK\");\n\tthTerminate.innerText = await availableAPIs.lookupLocale(\"TERMINATE_TASK\");\n\tthFP.innerText = await availableAPIs.lookupLocale(\"FULL_PATH_TASK\");\n\tthArgs.innerText = await availableAPIs.lookupLocale(\"ARGUMENTS_TASK\");\n\ttheadRow.appendChild(thBasename);\n\ttheadRow.appendChild(thUser);\n\ttheadRow.appendChild(thTerminate);\n\ttheadRow.appendChild(thFP);\n\ttheadRow.appendChild(thArgs);\n\tthead.appendChild(theadRow);\n\ttable.appendChild(thead);\n\ttable.appendChild(tbody);\n\tdocument.body.appendChild(table);\n\tasync function refresh() {\n\t\tlet prevtb = tbody;\n\t\tlet newtb = document.createElement(\"tbody\");\n\t\tlet tasks = await availableAPIs.listTasks();\n\t\tfor (let task of tasks) {\n\t\t\tlet tr = document.createElement(\"tr\");\n\t\t\tlet tdBasename = document.createElement(\"td\");\n\t\t\tlet tdUser = document.createElement(\"td\");\n\t\t\tlet tdTerminate = document.createElement(\"td\");\n\t\t\tlet tdFP = document.createElement(\"td\");\n\t\t\tlet tdArgs = document.createElement(\"td\");\n\t\t\tlet taskInfo;\n\t\t\ttry {\n\t\t\t\ttaskInfo = await availableAPIs.taskInfo(task);\n\t\t\t} catch {}\n\t\t\tif (!taskInfo) continue;\n\t\t\tlet terminateBtn = document.createElement(\"button\");\n\t\t\ttdBasename.innerText = taskInfo.file.split(\"/\").slice(-1)[0];\n\t\t\ttdUser.innerText = taskInfo.runBy;\n\t\t\ttdFP.innerText = taskInfo.file;\n\t\t\ttdArgs.innerText = \"[\" + (taskInfo.arg || []).map(a => JSON.stringify(a)).join(\", \") + \"]\";\n\t\t\tterminateBtn.innerText = await availableAPIs.lookupLocale(\"TERMINATE_TASK\");\n\t\t\tterminateBtn.addEventListener(\"click\", async function() {\n\t\t\t\ttry {\n\t\t\t\t\tawait availableAPIs.signalTask({ taskId: task, signal: 15 });\n\t\t\t\t} catch {}\n\t\t\t});\n\t\t\tterminateBtn.addEventListener(\"contextmenu\", async function(e) {\n\t\t\t\te.stopImmediatePropagation();\n\t\t\t\te.stopPropagation();\n\t\t\t\te.preventDefault();\n\t\t\t\ttry {\n\t\t\t\t\tawait availableAPIs.signalTask({ taskId: task, signal: 9 });\n\t\t\t\t} catch {}\n\t\t\t});\n\t\t\ttdTerminate.appendChild(terminateBtn);\n\t\t\ttr.appendChild(tdBasename);\n\t\t\ttr.appendChild(tdUser);\n\t\t\ttr.appendChild(tdTerminate);\n\t\t\ttr.appendChild(tdFP);\n\t\t\ttr.appendChild(tdArgs);\n\t\t\tnewtb.appendChild(tr);\n\t\t}\n\t\ttable.appendChild(newtb);\n\t\tprevtb.remove();\n\t\ttbody = newtb;\n\t\tsetTimeout(refresh, 1000);\n\t}\n\tawait refresh();\n})();\naddEventListener(\"signal\", async function(e) {\n\tif (e.detail == 15) await window.availableAPIs.terminate();\n}); null;"},"buildInfo":{"for":"1315","when":1750514812220,"signer":"moduleSigner","critical":true,"signature":"57512550385a4a8979502b61b8814fd6aa5fd0152ba808ffd12b711d75e3c4c04496f6eb3c198df77e074ccf85749b078d2e4eb9f82eb85e4babc5b7b73fb150"}}